@prefix bacnet: <http://data.ashrae.org/bacnet/2020#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

bacnet:AccessCredentialObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AccessCredentialObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:authorization-exemptions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:absentee-limit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-access-point ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:extended-time-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:trace-flag ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccessEventEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-access-event ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:days-remaining ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-use-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reason-for-disable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:uses-remaining ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:activation-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:credential-status ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:authentication-factors ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:belongs-to ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccessCredentialDisableEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:credential-disable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:expiration-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.access-credential ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:global-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 100 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:threat-authority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:assigned-access-rights ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAssignedAccessRights ;
                        sh:path ( bacnet:assigned-access-rights [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:assigned-access-rights ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:assigned-access-rights ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetAuthorizationExemptionEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:authorization-exemptions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:authorization-exemptions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:authorization-exemptions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetCredentialAuthenticationFactor ;
                        sh:path ( bacnet:authentication-factors [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:authentication-factors ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:authentication-factors ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:reason-for-disable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:reason-for-disable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:reason-for-disable ] ] ) .

bacnet:AccessDoorObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AccessDoorObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:door-open-too-long-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLockStatusEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lock-status ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:door-members ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:door-unlock-delay-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetMaintenanceEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maintenance-required ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDoorSecuredStatusEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:secured-status ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:masked-alarm-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:door-pulse-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDoorAlarmStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:door-alarm-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDoorValueEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDoorValueEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDoorStatusEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:door-status ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:door-extended-pulse-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.access-door ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetDoorAlarmStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetDoorAlarmStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:masked-alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:masked-alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:masked-alarm-values ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:door-members [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:door-members ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:door-members ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetDoorAlarmStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:fault-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ) .

bacnet:AccessPointObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AccessPointObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:verification-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:active-authentication-policy ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-for-writing ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-authentication-policies ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 100 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:threat-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:failed-attempts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-failed-attempts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lockout ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.access-point ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:zone-from ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:access-alarm-events ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuthenticationFactor ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:access-event-authentication-factor ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lockout-relinquish-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-lower-limit-enforced ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccessEventEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:accompaniment-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event-credential ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event-tag ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:failed-attempt-events ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuthorizationModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:authorization-mode ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-doors ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:muster-point ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:access-transaction-events ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:failed-attempts-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:zone-to ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:authentication-policy-names ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-upper-limit-enforced ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-count-adjust ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:authentication-policy-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:transaction-notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuthenticationStatusEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:authentication-status ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:authentication-policy-names [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:authentication-policy-names ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:authentication-policy-names ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:access-doors [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:access-doors ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:access-doors ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetAccessEventEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:access-transaction-events [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:access-transaction-events ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:access-transaction-events ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetAccessEventEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:failed-attempt-events [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:failed-attempt-events ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:failed-attempt-events ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAuthenticationPolicy ;
                        sh:path ( bacnet:authentication-policy-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:authentication-policy-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:authentication-policy-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetAccessEventEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:access-alarm-events [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:access-alarm-events ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:access-alarm-events ] ] ) .

bacnet:AccessRightsObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AccessRightsObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.access-rights ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:negative-access-rules ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:accompaniment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:global-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:positive-access-rules ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAccessRule ;
                        sh:path ( bacnet:negative-access-rules [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:negative-access-rules ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:negative-access-rules ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAccessRule ;
                        sh:path ( bacnet:positive-access-rules [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:positive-access-rules ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:positive-access-rules ] ] ) .

bacnet:AccessUserObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AccessUserObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:credentials ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:user-information-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.access-user ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:global-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:user-external-identifier ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:member-of ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccessUserTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:user-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:user-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:members ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:credentials [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:credentials ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:credentials ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:member-of [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:member-of ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:member-of ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:members [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:members ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:members ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:AccessZoneObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AccessZoneObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.access-zone ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:global-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:adjust-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-credential-added-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccessPassbackModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:passback-mode ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:passback-timeout ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-lower-limit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:occupancy-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-credential-removed ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:credentials-in-zone ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exit-points ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-count-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:entry-points ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-upper-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-credential-removed-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-credential-added ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:credentials-in-zone [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:credentials-in-zone ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:credentials-in-zone ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:exit-points [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:exit-points ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:exit-points ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:entry-points [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:entry-points ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:entry-points ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:AccumulatorObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AccumulatorObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-monitoring-interval ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.accumulator ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:pulse-rate ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPrescale ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:prescale ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetScale ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:scale ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-before-change ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-change-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccumulatorRecord ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:logging-record ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-set ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:logging-object ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLimitEnableNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:limit-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:limit-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:limit-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:AlertEnrollmentObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AlertEnrollmentObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.alert-enrollment ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-detection-enable ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ) .

bacnet:AnalogInputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AnalogInputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.analog-input ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalREAL ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interface-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:update-interval ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLimitEnableNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:limit-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:limit-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:limit-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:AnalogOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AnalogOutputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.analog-output ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalREAL ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interface-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLimitEnableNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:limit-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:limit-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:limit-enable ] ] ) .

bacnet:AnalogValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AnalogValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.analog-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLimitEnableNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:limit-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:limit-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:limit-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:AuditLogObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AuditLogObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 18446744073709551615 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:total-record-count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.audit-log ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-buffer ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:member-of ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 18446744073709551615 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:record-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:delete-on-forward ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:buffer-size ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAuditLogRecord ;
                        sh:path ( bacnet:log-buffer [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-buffer ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:log-buffer ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ) .

bacnet:AuditOperationFlags a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AuditOperationFlags" ;
    bacnet:memberClass bacnet:AuditOperationFlagsNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:AuditOperationFlagsNamedBits a rdfs:Class ;
    rdfs:label "AuditOperationFlagsNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:AuditReporterObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AuditReporterObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:monitored-objects ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.audit-reporter ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:send-now ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:audit-source-reporter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maximum-send-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetObjectSelector ;
                        sh:path ( bacnet:monitored-objects [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:monitored-objects ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:monitored-objects ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPriorityFilterNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:audit-priority-filter [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:audit-priority-filter ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:audit-priority-filter ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ) .

bacnet:AveragingObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "AveragingObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maximum-value-timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:window-samples ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:maximum-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:variance-value ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.averaging ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-property-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:minimum-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:window-interval ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:attempted-samples ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:minimum-value-timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:average-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:valid-samples ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ) .

bacnet:BACnetAbortReason a rdfs:Class ;
    rdfs:label "BACnetAbortReason" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-255 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAbortReasonEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAbortReasonEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAbortReasonEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAccessAuthenticationFactorDisable a rdfs:Class ;
    rdfs:label "BACnetAccessAuthenticationFactorDisable" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAccessAuthenticationFactorDisableEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAccessCredentialDisable a rdfs:Class ;
    rdfs:label "BACnetAccessCredentialDisable" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAccessCredentialDisableEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAccessCredentialDisableEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAccessCredentialDisableEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAccessCredentialDisableReason a rdfs:Class ;
    rdfs:label "BACnetAccessCredentialDisableReason" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAccessCredentialDisableReasonEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAccessCredentialDisableReasonEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAccessEvent a rdfs:Class ;
    rdfs:label "BACnetAccessEvent" ;
    bacnet:comment "Enumerated values 128-511 are used for events which indicate that access has been denied. Enumerated values 0-511 are reserved for prototype by ASHRAE. Enumerated values 512-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAccessEventEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAccessEventEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAccessEventEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAccessPassbackMode a rdfs:Class ;
    rdfs:label "BACnetAccessPassbackMode" ;
    bacnet:memberClass bacnet:BACnetAccessPassbackModeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAccessPassbackModeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAccessPassbackModeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAccessUserType a rdfs:Class ;
    rdfs:label "BACnetAccessUserType" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAccessUserTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAccessUserTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAccessUserTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAccessZoneOccupancyState a rdfs:Class ;
    rdfs:label "BACnetAccessZoneOccupancyState" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAccessZoneOccupancyStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAccessZoneOccupancyStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAction a rdfs:Class ;
    rdfs:label "BACnetAction" ;
    bacnet:memberClass bacnet:BACnetActionEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetActionEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetActionEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAuditLevel a rdfs:Class ;
    rdfs:label "BACnetAuditLevel" ;
    bacnet:memberClass bacnet:BACnetAuditLevelEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAuditLevelEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAuditLevelEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAuditOperation a rdfs:Class ;
    rdfs:label "BACnetAuditOperation" ;
    bacnet:memberClass bacnet:BACnetAuditOperationEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAuditOperationEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAuditOperationEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAuthenticationFactorType a rdfs:Class ;
    rdfs:label "BACnetAuthenticationFactorType" ;
    bacnet:memberClass bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAuthenticationFactorTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAuthenticationFactorTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAuthenticationStatus a rdfs:Class ;
    rdfs:label "BACnetAuthenticationStatus" ;
    bacnet:memberClass bacnet:BACnetAuthenticationStatusEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAuthenticationStatusEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAuthenticationStatusEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAuthorizationExemption a rdfs:Class ;
    rdfs:label "BACnetAuthorizationExemption" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-255 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAuthorizationExemptionEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAuthorizationExemptionEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAuthorizationExemptionEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetAuthorizationMode a rdfs:Class ;
    rdfs:label "BACnetAuthorizationMode" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetAuthorizationModeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetAuthorizationModeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetAuthorizationModeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetBackupState a rdfs:Class ;
    rdfs:label "BACnetBackupState" ;
    bacnet:memberClass bacnet:BACnetBackupStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetBackupStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetBackupStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetBinaryLightingPV a rdfs:Class ;
    rdfs:label "BACnetBinaryLightingPV" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-255 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetBinaryLightingPVEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetBinaryLightingPVEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetBinaryLightingPVEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetBinaryPV a rdfs:Class ;
    rdfs:label "BACnetBinaryPV" ;
    bacnet:memberClass bacnet:BACnetBinaryPVEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetBinaryPVEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetBinaryPVEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetConfirmedServiceChoice a rdfs:Class ;
    rdfs:label "BACnetConfirmedServiceChoice" ;
    bacnet:comment "Other services to be added as they are defined. All enumeration values in this production are reserved for prototype by ASHRAE. Proprietary extensions are made by using the ConfirmedPrivateTransfer or UnconfirmedPrivateTransfer services. See Clause 23"@en ;
    bacnet:memberClass bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetConfirmedServiceChoiceEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetConfirmedServiceChoiceEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetDaysOfWeek a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetDaysOfWeek" ;
    bacnet:memberClass bacnet:BACnetDaysOfWeekNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetDaysOfWeekNamedBits a rdfs:Class ;
    rdfs:label "BACnetDaysOfWeekNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetDeviceStatus a rdfs:Class ;
    rdfs:label "BACnetDeviceStatus" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values  64-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetDeviceStatusEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetDeviceStatusEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetDeviceStatusEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetDoorAlarmState a rdfs:Class ;
    rdfs:label "BACnetDoorAlarmState" ;
    bacnet:comment "Enumerated values 0-255 are reserved for prototype by ASHRAE. Enumerated values  256-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetDoorAlarmStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetDoorAlarmStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetDoorAlarmStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetDoorSecuredStatus a rdfs:Class ;
    rdfs:label "BACnetDoorSecuredStatus" ;
    bacnet:memberClass bacnet:BACnetDoorSecuredStatusEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetDoorSecuredStatusEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetDoorSecuredStatusEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetDoorStatus a rdfs:Class ;
    rdfs:label "BACnetDoorStatus" ;
    bacnet:memberClass bacnet:BACnetDoorStatusEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetDoorStatusEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetDoorStatusEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetDoorValue a rdfs:Class ;
    rdfs:label "BACnetDoorValue" ;
    bacnet:memberClass bacnet:BACnetDoorValueEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetDoorValueEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetDoorValueEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetEngineeringUnits a rdfs:Class ;
    rdfs:label "BACnetEngineeringUnits" ;
    bacnet:comment "Enumerated values 0-255 are reserved for prototype by ASHRAE. Enumerated values 256-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetEngineeringUnitsEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetEngineeringUnitsEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetEngineeringUnitsEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetEscalatorFault a rdfs:Class ;
    rdfs:label "BACnetEscalatorFault" ;
    bacnet:memberClass bacnet:BACnetEscalatorFaultEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetEscalatorFaultEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetEscalatorFaultEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetEscalatorMode a rdfs:Class ;
    rdfs:label "BACnetEscalatorMode" ;
    bacnet:memberClass bacnet:BACnetEscalatorModeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetEscalatorModeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetEscalatorModeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetEscalatorOperationDirection a rdfs:Class ;
    rdfs:label "BACnetEscalatorOperationDirection" ;
    bacnet:memberClass bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetEscalatorOperationDirectionEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetEscalatorOperationDirectionEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetEventState a rdfs:Class ;
    rdfs:label "BACnetEventState" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values  64-65535 may be used by others subject to the procedures and constraints described  in Clause 23. The last enumeration used in this version is 5."@en ;
    bacnet:memberClass bacnet:BACnetEventStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetEventStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetEventStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetEventTransitionBits a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetEventTransitionBits" ;
    bacnet:memberClass bacnet:BACnetEventTransitionBitsNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetEventTransitionBitsNamedBits a rdfs:Class ;
    rdfs:label "BACnetEventTransitionBitsNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetEventType a rdfs:Class ;
    rdfs:label "BACnetEventType" ;
    bacnet:comment "-- Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values  64-65535 may be used by others subject to the procedures and constraints described  in Clause 23. It is expected that these enumerated values will correspond to the use of the complex-event-type CHOICE [6] of the BACnetNotificationParameters production."@en ;
    bacnet:memberClass bacnet:BACnetEventTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetEventTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetEventTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetFaultType a rdfs:Class ;
    rdfs:label "BACnetFaultType" ;
    bacnet:memberClass bacnet:BACnetFaultTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetFaultTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetFaultTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetFileAccessMethod a rdfs:Class ;
    rdfs:label "BACnetFileAccessMethod" ;
    bacnet:memberClass bacnet:BACnetFileAccessMethodEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetFileAccessMethodEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetFileAccessMethodEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetIPMode a rdfs:Class ;
    rdfs:label "BACnetIPMode" ;
    bacnet:memberClass bacnet:BACnetIPModeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetIPModeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetIPModeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLifeSafetyMode a rdfs:Class ;
    rdfs:label "BACnetLifeSafetyMode" ;
    bacnet:comment "Enumerated values 0-255 are reserved for prototype by ASHRAE. Enumerated values 256-65535 may be used by others subject to procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetLifeSafetyModeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLifeSafetyModeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLifeSafetyModeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLifeSafetyOperation a rdfs:Class ;
    rdfs:label "BACnetLifeSafetyOperation" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLifeSafetyOperationEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLifeSafetyOperationEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLifeSafetyState a rdfs:Class ;
    rdfs:label "BACnetLifeSafetyState" ;
    bacnet:comment "Enumerated values 0-255 are reserved for prototype by ASHRAE. Enumerated values 256-65535 may be used by others subject to procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetLifeSafetyStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLifeSafetyStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLifeSafetyStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLiftCarDirection a rdfs:Class ;
    rdfs:label "BACnetLiftCarDirection" ;
    bacnet:memberClass bacnet:BACnetLiftCarDirectionEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLiftCarDirectionEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLiftCarDirectionEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLiftCarDoorCommand a rdfs:Class ;
    rdfs:label "BACnetLiftCarDoorCommand" ;
    bacnet:memberClass bacnet:BACnetLiftCarDoorCommandEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLiftCarDoorCommandEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLiftCarDoorCommandEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLiftCarDriveStatus a rdfs:Class ;
    rdfs:label "BACnetLiftCarDriveStatus" ;
    bacnet:memberClass bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLiftCarDriveStatusEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLiftCarDriveStatusEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLiftCarMode a rdfs:Class ;
    rdfs:label "BACnetLiftCarMode" ;
    bacnet:memberClass bacnet:BACnetLiftCarModeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLiftCarModeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLiftCarModeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLiftFault a rdfs:Class ;
    rdfs:label "BACnetLiftFault" ;
    bacnet:memberClass bacnet:BACnetLiftFaultEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLiftFaultEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLiftFaultEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLiftGroupMode a rdfs:Class ;
    rdfs:label "BACnetLiftGroupMode" ;
    bacnet:memberClass bacnet:BACnetLiftGroupModeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLiftGroupModeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLiftGroupModeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLightingInProgress a rdfs:Class ;
    rdfs:label "BACnetLightingInProgress" ;
    bacnet:memberClass bacnet:BACnetLightingInProgressEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLightingInProgressEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLightingInProgressEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLightingOperation a rdfs:Class ;
    rdfs:label "BACnetLightingOperation" ;
    bacnet:comment "Enumerated values 0-255 are reserved for prototype by ASHRAE. Enumerated values 256-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetLightingOperationEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLightingOperationEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLightingOperationEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLightingTransition a rdfs:Class ;
    rdfs:label "BACnetLightingTransition" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-255 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetLightingTransitionEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLightingTransitionEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLightingTransitionEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLimitEnable a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetLimitEnable" ;
    bacnet:memberClass bacnet:BACnetLimitEnableNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetLimitEnableNamedBits a rdfs:Class ;
    rdfs:label "BACnetLimitEnableNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetLockStatus a rdfs:Class ;
    rdfs:label "BACnetLockStatus" ;
    bacnet:memberClass bacnet:BACnetLockStatusEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLockStatusEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLockStatusEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetLogStatus a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetLogStatus" ;
    bacnet:memberClass bacnet:BACnetLogStatusNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetLogStatusNamedBits a rdfs:Class ;
    rdfs:label "BACnetLogStatusNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetLoggingType a rdfs:Class ;
    rdfs:label "BACnetLoggingType" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-255 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetLoggingTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetLoggingTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetLoggingTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetMaintenance a rdfs:Class ;
    rdfs:label "BACnetMaintenance" ;
    bacnet:comment "Enumerated values 0-255 are reserved for prototype by ASHRAE. Enumerated values 256-65535 may be used by others subject to procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetMaintenanceEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetMaintenanceEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetMaintenanceEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetNetworkNumberQuality a rdfs:Class ;
    rdfs:label "BACnetNetworkNumberQuality" ;
    bacnet:memberClass bacnet:BACnetNetworkNumberQualityEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetNetworkNumberQualityEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetNetworkNumberQualityEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetNetworkPortCommand a rdfs:Class ;
    rdfs:label "BACnetNetworkPortCommand" ;
    bacnet:memberClass bacnet:BACnetNetworkPortCommandEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetNetworkPortCommandEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetNetworkPortCommandEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetNetworkType a rdfs:Class ;
    rdfs:label "BACnetNetworkType" ;
    bacnet:memberClass bacnet:BACnetNetworkTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetNetworkTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetNetworkTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetNodeType a rdfs:Class ;
    rdfs:label "BACnetNodeType" ;
    bacnet:memberClass bacnet:BACnetNodeTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetNodeTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetNodeTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetNotifyType a rdfs:Class ;
    rdfs:label "BACnetNotifyType" ;
    bacnet:memberClass bacnet:BACnetNotifyTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetNotifyTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetNotifyTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetObjectType a rdfs:Class ;
    rdfs:label "BACnetObjectType" ;
    bacnet:comment "Enumerated values 0-127 are reserved for prototype by ASHRAE. Enumerated values  128-1023 may be used by others subject to the procedures and constraints described  in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetObjectTypeEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetObjectTypeEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetObjectTypeEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetObjectTypesSupported a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetObjectTypesSupported" ;
    bacnet:memberClass bacnet:BACnetObjectTypesSupportedNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetObjectTypesSupportedNamedBits a rdfs:Class ;
    rdfs:label "BACnetObjectTypesSupportedNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetPolarity a rdfs:Class ;
    rdfs:label "BACnetPolarity" ;
    bacnet:memberClass bacnet:BACnetPolarityEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetPolarityEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetPolarityEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetPriorityFilter a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetPriorityFilter" ;
    bacnet:memberClass bacnet:BACnetPriorityFilterNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetPriorityFilterNamedBits a rdfs:Class ;
    rdfs:label "BACnetPriorityFilterNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetProgramError a rdfs:Class ;
    rdfs:label "BACnetProgramError" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values  64-65535 may be used by others subject to the procedures and constraints described  in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetProgramErrorEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetProgramErrorEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetProgramErrorEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetProgramRequest a rdfs:Class ;
    rdfs:label "BACnetProgramRequest" ;
    bacnet:memberClass bacnet:BACnetProgramRequestEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetProgramRequestEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetProgramRequestEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetProgramState a rdfs:Class ;
    rdfs:label "BACnetProgramState" ;
    bacnet:memberClass bacnet:BACnetProgramStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetProgramStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetProgramStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetPropertyIdentifier a rdfs:Class ;
    rdfs:label "BACnetPropertyIdentifier" ;
    bacnet:comment "The special property identifiers all, optional, and required are reserved for use in the ReadPropertyMultiple service or services not defined in this standard. Enumerated values 0-511 are reserved for prototype by ASHRAE. Enumerated values 512-4194303 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetPropertyIdentifierEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetPropertyIdentifierEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetPropertyIdentifierEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetProtocolLevel a rdfs:Class ;
    rdfs:label "BACnetProtocolLevel" ;
    bacnet:memberClass bacnet:BACnetProtocolLevelEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetProtocolLevelEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetProtocolLevelEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetRejectReason a rdfs:Class ;
    rdfs:label "BACnetRejectReason" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-255 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetRejectReasonEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetRejectReasonEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetRejectReasonEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetRelationship a rdfs:Class ;
    rdfs:label "BACnetRelationship" ;
    bacnet:memberClass bacnet:BACnetRelationshipEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetRelationshipEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetRelationshipEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetReliability a rdfs:Class ;
    rdfs:label "BACnetReliability" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values  64-65535 may be used by others subject to the procedures and constraints described  in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetReliabilityEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetReliabilityEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetReliabilityEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetRestartReason a rdfs:Class ;
    rdfs:label "BACnetRestartReason" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-255 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetRestartReasonEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetRestartReasonEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetRestartReasonEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetResultFlags a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetResultFlags" ;
    bacnet:memberClass bacnet:BACnetResultFlagsNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetResultFlagsNamedBits a rdfs:Class ;
    rdfs:label "BACnetResultFlagsNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetSecurityLevel a rdfs:Class ;
    rdfs:label "BACnetSecurityLevel" ;
    bacnet:memberClass bacnet:BACnetSecurityLevelEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetSecurityLevelEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetSecurityLevelEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetSecurityPolicy a rdfs:Class ;
    rdfs:label "BACnetSecurityPolicy" ;
    bacnet:memberClass bacnet:BACnetSecurityPolicyEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetSecurityPolicyEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetSecurityPolicyEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetSegmentation a rdfs:Class ;
    rdfs:label "BACnetSegmentation" ;
    bacnet:memberClass bacnet:BACnetSegmentationEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetSegmentationEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetSegmentationEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetServicesSupported a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetServicesSupported" ;
    bacnet:memberClass bacnet:BACnetServicesSupportedNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetServicesSupportedNamedBits a rdfs:Class ;
    rdfs:label "BACnetServicesSupportedNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetShedState a rdfs:Class ;
    rdfs:label "BACnetShedState" ;
    bacnet:memberClass bacnet:BACnetShedStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetShedStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetShedStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetSilencedState a rdfs:Class ;
    rdfs:label "BACnetSilencedState" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to procedures and constraints described in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetSilencedStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetSilencedStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetSilencedStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetStatusFlags a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BACnetStatusFlags" ;
    bacnet:memberClass bacnet:BACnetStatusFlagsNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:BACnetStatusFlagsNamedBits a rdfs:Class ;
    rdfs:label "BACnetStatusFlagsNamedBits" ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:BACnetTimerState a rdfs:Class ;
    rdfs:label "BACnetTimerState" ;
    bacnet:memberClass bacnet:BACnetTimerStateEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetTimerStateEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetTimerStateEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetTimerTransition a rdfs:Class ;
    rdfs:label "BACnetTimerTransition" ;
    bacnet:memberClass bacnet:BACnetTimerTransitionEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetTimerTransitionEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetTimerTransitionEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetUnconfirmedServiceChoice a rdfs:Class ;
    rdfs:label "BACnetUnconfirmedServiceChoice" ;
    bacnet:comment "Other services to be added as they are defined. All choice values in this production are reserved for prototype by ASHRAE. Proprietary extensions are made by using the UnconfirmedPrivateTransfer service. See Clause 23"@en ;
    bacnet:memberClass bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetUnconfirmedServiceChoiceEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetVTClass a rdfs:Class ;
    rdfs:label "BACnetVTClass" ;
    bacnet:comment "Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to the procedures and constraints described  in Clause 23."@en ;
    bacnet:memberClass bacnet:BACnetVTClassEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetVTClassEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetVTClassEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BACnetWriteStatus a rdfs:Class ;
    rdfs:label "BACnetWriteStatus" ;
    bacnet:memberClass bacnet:BACnetWriteStatusEnumerationValue ;
    rdfs:subClassOf bacnet:EnumerationKind .

bacnet:BACnetWriteStatusEnumerationValue a rdfs:Class ;
    rdfs:label "BACnetWriteStatusEnumerationValue" ;
    rdfs:subClassOf bacnet:EnumerationValue .

bacnet:BinaryInputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BinaryInputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.binary-input ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalBinaryPV ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interface-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-text ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:inactive-text ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-active-time-reset ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:elapsed-active-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPolarityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:polarity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-state-count-reset ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:BinaryLightingOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BinaryLightingOutputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:egress-active ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryLightingPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-strike-count-reset ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:strike-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.binary-lighting-output ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:blink-warn-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPolarityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:polarity ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryLightingPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-active-time-reset ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:power ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:egress-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:elapsed-active-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryLightingPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:feedback-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ) .

bacnet:BinaryOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BinaryOutputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:minimum-on-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:feedback-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:inactive-text ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-text ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalBinaryPV ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interface-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPolarityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:polarity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.binary-output ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-active-time-reset ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:elapsed-active-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-state-count-reset ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:minimum-off-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ) .

bacnet:BinaryValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BinaryValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:elapsed-active-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:minimum-off-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:minimum-on-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:inactive-text ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBinaryPVEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-text ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-state-count-reset ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-active-time-reset ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.binary-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-count ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ) .

bacnet:BitstringValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BitstringValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.bitstring-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bit-text ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bit-mask ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:NamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:NamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:present-value [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:present-value ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:present-value ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:NamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:relinquish-default [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:relinquish-default ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:relinquish-default ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:class bacnet:NamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:bit-mask [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:bit-mask ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:bit-mask ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:bit-text [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:bit-text ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:bit-text ] ] ) .

bacnet:CalendarObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "CalendarObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:date-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.calendar ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetCalendarEntry ;
                        sh:path ( bacnet:date-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:date-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:date-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ) .

bacnet:ChannelObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "ChannelObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:last-priority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-object-property-references ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:execution-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:control-groups ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetWriteStatusEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:write-status ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:channel-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetChannelValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:allow-group-delay-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.channel ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectPropertyReference ;
                        sh:path ( bacnet:list-of-object-property-references [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-object-property-references ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-object-property-references ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:maxInclusive 4294967295 ;
                        sh:minCount 1 ;
                        sh:minInclusive 0 ;
                        sh:path ( bacnet:control-groups [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:control-groups ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:control-groups ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:execution-delay [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:execution-delay ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:execution-delay ] ] ) .

bacnet:CharacterstringValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "CharacterstringValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.characterstring-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-values ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetOptionalCharacterString ;
                        sh:path ( bacnet:fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:fault-values ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetOptionalCharacterString ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ) .

bacnet:CommandObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "CommandObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.command ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:action ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:all-writes-successful ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:in-process ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:action-text ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:action-text [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:action-text ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:action-text ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetActionList ;
                        sh:path ( bacnet:action [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:action ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:action ] ] ) .

bacnet:CredentialDataInputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "CredentialDataInputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:supported-format-classes ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.credential-data-input ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:supported-formats ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuthenticationFactor ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:update-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:supported-format-classes [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:supported-format-classes ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:supported-format-classes ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAuthenticationFactorFormat ;
                        sh:path ( bacnet:supported-formats [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:supported-formats ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:supported-formats ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ) .

bacnet:DatePatternValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "DatePatternValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.datepattern-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:DateValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "DateValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.date-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ) .

bacnet:DatetimePatternValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "DatetimePatternValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.datetimepattern-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:is-utc ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ) .

bacnet:DatetimeValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "DatetimeValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:is-utc ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.datetime-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ) .

bacnet:DeviceObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "DeviceObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:daylight-savings-status ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-segments-accepted ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:apdu-segment-timeout ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-vt-sessions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRestartReasonEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-restart-reason ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.device ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:restore-completion-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-synchronization-recipients ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-master ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vendor-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vendor-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:backup-preparation-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-apdu-length-accepted ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetSegmentationEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:segmentation-supported ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-cov-multiple-subscriptions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:local-time ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interval-offset ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:restore-preparation-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:utc-offset ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-version ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deployed-profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:structured-object-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-apdu-retries ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:utc-time-synchronization-recipients ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipient ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-notification-recipient ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:vt-classes-supported ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-info-frames ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:apdu-timeout ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-synchronization-interval ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:model-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:database-revision ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:local-date ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:serial-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-cov-subscriptions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-restore-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:firmware-revision ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-device-restart ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:restart-notification-recipients ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-services-supported ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-revision ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:align-intervals ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-address-binding ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:application-software-version ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceStatusEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:system-status ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-object-types-supported ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:backup-failure-timeout ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetBackupStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:backup-and-restore-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:configuration-files ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetVTSession ;
                        sh:path ( bacnet:active-vt-sessions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:active-vt-sessions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:active-vt-sessions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:configuration-files [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:configuration-files ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:configuration-files ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetCOVMultipleSubscription ;
                        sh:path ( bacnet:active-cov-multiple-subscriptions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:active-cov-multiple-subscriptions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:active-cov-multiple-subscriptions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:structured-object-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:structured-object-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:structured-object-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetRecipient ;
                        sh:path ( bacnet:restart-notification-recipients [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:restart-notification-recipients ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:restart-notification-recipients ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetVTClassEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:vt-classes-supported [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-classes-supported ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:vt-classes-supported ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:object-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:object-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:object-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetServicesSupportedNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:protocol-services-supported [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:protocol-services-supported ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:protocol-services-supported ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetRecipient ;
                        sh:path ( bacnet:utc-time-synchronization-recipients [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:utc-time-synchronization-recipients ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:utc-time-synchronization-recipients ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetObjectTypesSupportedNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:protocol-object-types-supported [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:protocol-object-types-supported ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:protocol-object-types-supported ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetRecipient ;
                        sh:path ( bacnet:time-synchronization-recipients [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:time-synchronization-recipients ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:time-synchronization-recipients ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAddressBinding ;
                        sh:path ( bacnet:device-address-binding [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:device-address-binding ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:device-address-binding ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetCOVSubscription ;
                        sh:path ( bacnet:active-cov-subscriptions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:active-cov-subscriptions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:active-cov-subscriptions ] ] ) .

bacnet:ElevatorGroupObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "ElevatorGroupObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:group-id ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLandingCallStatus ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:landing-call-control ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:machine-room-id ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:landing-calls ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:group-members ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.elevator-group ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLiftGroupModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:group-mode ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:group-members [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:group-members ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:group-members ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetLandingCallStatus ;
                        sh:path ( bacnet:landing-calls [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:landing-calls ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:landing-calls ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ) .

bacnet:EscalatorObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "EscalatorObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:power-mode ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEscalatorModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:escalator-mode ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-signals ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation-direction ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.escalator ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:elevator-group ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:installation-id ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:energy-meter-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:passenger-alarm ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:group-id ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:energy-meter ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEscalatorFaultEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:fault-signals [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-signals ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:fault-signals ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:EventEnrollmentObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "EventEnrollmentObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetFaultParameter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-parameters ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventParameter ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-parameters ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-property-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetFaultTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.event-enrollment ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ) .

bacnet:EventLogObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "EventLogObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:records-since-notification ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:last-notify-record ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.event-log ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:stop-when-full ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:record-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:notification-threshold ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:stop-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:buffer-size ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:start-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:total-record-count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-buffer ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetEventLogRecord ;
                        sh:path ( bacnet:log-buffer [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-buffer ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:log-buffer ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ) .

bacnet:FileObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "FileObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:record-count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:archive ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.file ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetFileAccessMethodEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-access-method ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:modification-date ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-size ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:read-only ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ) .

bacnet:GlobalGroupObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "GlobalGroupObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.global-group ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:group-members ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:covu-period ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:covu-recipients ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:requested-update-interval ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:group-member-names ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetClientCOV ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:client-cov-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:member-status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:update-interval ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-resubscription-interval ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetRecipient ;
                        sh:path ( bacnet:covu-recipients [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:covu-recipients ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:covu-recipients ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:group-member-names [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:group-member-names ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:group-member-names ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectPropertyReference ;
                        sh:path ( bacnet:group-members [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:group-members ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:group-members ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:member-status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:member-status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:member-status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyAccessResult ;
                        sh:path ( bacnet:present-value [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:present-value ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:present-value ] ] ) .

bacnet:GroupObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "GroupObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-group-members ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.group ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:ReadAccessSpecification ;
                        sh:path ( bacnet:list-of-group-members [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-group-members ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-group-members ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:ReadAccessResult ;
                        sh:path ( bacnet:present-value [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:present-value ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:present-value ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ) .

bacnet:IntegerValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "IntegerValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.integer-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLimitEnableNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:limit-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:limit-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:limit-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ) .

bacnet:LargeAnalogValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "LargeAnalogValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.large-analog-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetLimitEnableNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:limit-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:limit-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:limit-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:LifeSafetyPointObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "LifeSafetyPointObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetSilencedStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:silenced ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:direct-reading ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-values ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:member-of ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:life-safety-alarm-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mode ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:tracking-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:accepted-modes ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:setting ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.life-safety-point ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetMaintenanceEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maintenance-required ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyOperationEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation-expected ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:member-of [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:member-of ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:member-of ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:fault-values ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:life-safety-alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:life-safety-alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:life-safety-alarm-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyModeEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:accepted-modes [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:accepted-modes ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:accepted-modes ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:LifeSafetyZoneObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "LifeSafetyZoneObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:tracking-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.life-safety-zone ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:zone-members ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:life-safety-alarm-values ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-values ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:member-of ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maintenance-required ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyOperationEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation-expected ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:accepted-modes ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetSilencedStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:silenced ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mode ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:zone-members [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:zone-members ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:zone-members ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyModeEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:accepted-modes [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:accepted-modes ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:accepted-modes ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:life-safety-alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:life-safety-alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:life-safety-alarm-values ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:member-of [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:member-of ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:member-of ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:fault-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ) .

bacnet:LiftObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "LiftObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:fault-signals ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-door-zone ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:elevator-group ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:energy-meter-ref ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-load-units ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lower-deck ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-door-command ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-door-text ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:car-position ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:car-door-status ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:higher-deck ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-load ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:installation-id ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:group-id ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:registered-car-call ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:next-stopping-floor ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:energy-meter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-drive-status ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLiftCarDirectionEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:car-moving-direction ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLiftCarDirectionEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-assigned-direction ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.lift ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:floor-text ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:landing-door-status ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:passenger-alarm ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:assigned-landing-calls ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:making-car-call ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLiftCarModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-mode ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetLandingDoorStatus ;
                        sh:path ( bacnet:landing-door-status [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:landing-door-status ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:landing-door-status ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAssignedLandingCalls ;
                        sh:path ( bacnet:assigned-landing-calls [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:assigned-landing-calls ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:assigned-landing-calls ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:floor-text [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:floor-text ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:floor-text ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:making-car-call [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:making-car-call ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:making-car-call ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetLiftCarCallList ;
                        sh:path ( bacnet:registered-car-call [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:registered-car-call ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:registered-car-call ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:car-door-text [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:car-door-text ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:car-door-text ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLiftCarDoorCommandEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:car-door-command [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:car-door-command ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:car-door-command ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLiftFaultEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:fault-signals [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-signals ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:fault-signals ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetDoorStatusEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:car-door-status [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:car-door-status ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:car-door-status ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ) .

bacnet:LightingOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "LightingOutputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-actual-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:power ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:default-fade-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLightingTransitionEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:transition ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLightingCommand ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:lighting-command ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:blink-warn-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLightingInProgressEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:in-progress ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:instantaneous-power ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:egress-active ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-actual-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:feedback-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:default-ramp-rate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:default-step-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:egress-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:lighting-command-default-priority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:tracking-value ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.lighting-output ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:LoadControlObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "LoadControlObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:duty-window ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:shed-duration ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetShedLevel ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:actual-shed-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:state-description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetShedStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:start-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.load-control ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetShedLevel ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:requested-shed-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:shed-level-descriptions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetShedLevel ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:expected-shed-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:full-duty-baseline ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:shed-levels ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:shed-levels [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:shed-levels ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:shed-levels ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:shed-level-descriptions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:shed-level-descriptions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:shed-level-descriptions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ) .

bacnet:LoopObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "LoopObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:controlled-variable-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalREAL ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-diff-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:update-interval ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:integral-constant-units ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:controlled-variable-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:proportional-constant ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:output-units ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:derivative-constant-units ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.loop ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:integral-constant ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetSetpointReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:setpoint-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:minimum-output ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bias ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:setpoint ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maximum-output ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetActionEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:action ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-for-writing ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:manipulated-variable-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:derivative-constant ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:error-limit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:controlled-variable-units ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:proportional-constant-units ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:MultistateInputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "MultistateInputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-states ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.multi-state-input ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:state-text ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interface-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:state-text [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:state-text ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:state-text ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:fault-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ) .

bacnet:MultistateOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "MultistateOutputObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:state-text ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:feedback-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interface-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-states ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.multi-state-output ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:state-text [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:state-text ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:state-text ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ) .

bacnet:MultistateValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "MultistateValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.multi-state-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-states ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:state-text ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:state-text [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:state-text ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:state-text ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:fault-values ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ) .

bacnet:NetworkPortObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "NetworkPortObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-default-gateway ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:link-speed ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fd-subscription-lifetime ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:manual-slave-address-binding ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.network-port ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNetworkNumberQualityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:network-number-quality ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dns-server ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-nat-traversal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-master ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-multicast-address ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNetworkTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:network-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-udp-port ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:auto-slave-discovery ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dhcp-lease-time-remaining ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bbmd-foreign-device-table ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:mac-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-dhcp-server ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:link-speed-autonegotiate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-dhcp-lease-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-info-frames ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNetworkPortCommandEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:slave-address-binding ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-subnet-mask ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-prefix-length ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-default-gateway ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetHostNPort ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fd-bbmd-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dhcp-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-auto-addressing-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-dhcp-lease-time-remaining ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bbmd-accept-fd-registrations ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:routing-table ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ipv6-multicast-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:apdu-length ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetHostNPort ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-global-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:network-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ipv6-udp-port ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:link-speeds ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dhcp-lease-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:virtual-mac-address-table ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetIPModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-mode ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetProtocolLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:changes-pending ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bbmd-broadcast-distribution-table ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:slave-proxy-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetIPModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ipv6-mode ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dhcp-server ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-dns-server ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reference-port ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-zone-index ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:network-interface-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetBDTEntry ;
                        sh:path ( bacnet:bbmd-broadcast-distribution-table [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:bbmd-broadcast-distribution-table ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:bbmd-broadcast-distribution-table ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAddressBinding ;
                        sh:path ( bacnet:manual-slave-address-binding [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:manual-slave-address-binding ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:manual-slave-address-binding ] ] ),
        ( [ sh:property [ sh:datatype xsd:float ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:link-speeds [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:link-speeds ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:link-speeds ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetVMACEntry ;
                        sh:path ( bacnet:virtual-mac-address-table [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:virtual-mac-address-table ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:virtual-mac-address-table ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAddressBinding ;
                        sh:path ( bacnet:slave-address-binding [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:slave-address-binding ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:slave-address-binding ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetRouterEntry ;
                        sh:path ( bacnet:routing-table [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:routing-table ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:routing-table ] ] ),
        ( [ sh:property [ sh:datatype xsd:hexBinary ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:ip-dns-server [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:ip-dns-server ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:ip-dns-server ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetFDTEntry ;
                        sh:path ( bacnet:bbmd-foreign-device-table [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:bbmd-foreign-device-table ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:bbmd-foreign-device-table ] ] ),
        ( [ sh:property [ sh:datatype xsd:hexBinary ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:ipv6-dns-server [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:ipv6-dns-server ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:ipv6-dns-server ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:NotificationClassObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "NotificationClassObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:recipient-list ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.notification-class ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:ack-required ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:ack-required [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:ack-required ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:ack-required ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDestination ;
                        sh:path ( bacnet:recipient-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:recipient-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:recipient-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:priority [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority ] ] ) .

bacnet:NotificationForwarderObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "NotificationForwarderObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:local-forwarding-only ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:subscribed-recipients ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.notification-forwarder ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:port-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:recipient-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetProcessIdSelection ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:process-identifier-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPortPermission ;
                        sh:path ( bacnet:port-filter [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:port-filter ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:port-filter ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetEventNotificationSubscription ;
                        sh:path ( bacnet:subscribed-recipients [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:subscribed-recipients ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:subscribed-recipients ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDestination ;
                        sh:path ( bacnet:recipient-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:recipient-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:recipient-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:OctetstringValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "OctetstringValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.octetstring-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ) .

bacnet:PositiveIntegerValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "PositiveIntegerValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.positive-integer-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLimitEnableNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:limit-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:limit-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:limit-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ) .

bacnet:ProgramObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "ProgramObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:program-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetProgramRequestEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:program-change ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description-of-halt ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetProgramErrorEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reason-for-halt ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:instance-of ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.program ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetProgramStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:program-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:PulseConverterObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "PulseConverterObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.pulse-converter ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:input-reference ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:scale-factor ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:adjust-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:count-before-change ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:count-change-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-period ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:update-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLimitEnableNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:limit-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:limit-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:limit-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ) .

bacnet:ScheduleObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "ScheduleObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:exception-schedule ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDateRange ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:effective-period ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-for-writing ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-object-property-references ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.schedule ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:weekly-schedule ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:schedule-default ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDailySchedule ;
                        sh:path ( bacnet:weekly-schedule [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:weekly-schedule ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:weekly-schedule ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetSpecialEvent ;
                        sh:path ( bacnet:exception-schedule [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:exception-schedule ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:exception-schedule ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectPropertyReference ;
                        sh:path ( bacnet:list-of-object-property-references [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-object-property-references ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-object-property-references ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:StagingObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "StagingObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.staging ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:target-references ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:default-present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:stage-names ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-for-writing ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:min-pres-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:stages ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-stage ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetStageLimitValue ;
                        sh:path ( bacnet:stages [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:stages ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:stages ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:stage-names [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:stage-names ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:stage-names ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:target-references [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:target-references ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:target-references ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ) .

bacnet:StructuredViewObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "StructuredViewObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNodeTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:node-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:subordinate-node-types ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:subordinate-annotations ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:subordinate-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRelationshipEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:default-subordinate-relationship ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:represents ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:subordinate-tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:subordinate-relationships ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:node-subtype ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.structured-view ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetRelationshipEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:subordinate-relationships [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:subordinate-relationships ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:subordinate-relationships ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValueCollection ;
                        sh:path ( bacnet:subordinate-tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:subordinate-tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:subordinate-tags ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectReference ;
                        sh:path ( bacnet:subordinate-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:subordinate-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:subordinate-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetNodeTypeEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:subordinate-node-types [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:subordinate-node-types ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:subordinate-node-types ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:subordinate-annotations [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:subordinate-annotations ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:subordinate-annotations ] ] ) .

bacnet:TimePatternValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "TimePatternValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.timepattern-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ) .

bacnet:TimeValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "TimeValueObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-array ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command-time-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetValueSource ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.time-value ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalPriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-priority-filter ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-source-array ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetOptionalUnsigned ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-command-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-command-time ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:command-time-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-time-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:command-time-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPriorityValue ;
                        sh:path ( bacnet:priority-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:priority-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:priority-array ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetValueSource ;
                        sh:path ( bacnet:value-source-array [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:value-source-array ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:value-source-array ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ) .

bacnet:TimerObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "TimerObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timer-running ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.timer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-for-writing ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:default-timeout ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:update-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:list-of-object-property-references ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:expiration-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimerTransitionEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-state-change ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:initial-timeout ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimerStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timer-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:state-change-values ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectPropertyReference ;
                        sh:path ( bacnet:list-of-object-property-references [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-object-property-references ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-object-property-references ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimerStateChangeValue ;
                        sh:path ( bacnet:state-change-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:state-change-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:state-change-values ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetTimerStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-values ] ] ) .

bacnet:TrendLogMultipleObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "TrendLogMultipleObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:align-intervals ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:stop-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-interval ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-buffer ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:stop-when-full ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:trigger ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:notification-threshold ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-deviceobjectproperty ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLoggingTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:logging-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:buffer-size ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.trend-log-multiple ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:last-notify-record ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interval-offset ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:total-record-count ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:records-since-notification ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:record-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:start-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetLogMultipleRecord ;
                        sh:path ( bacnet:log-buffer [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-buffer ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:log-buffer ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetDeviceObjectPropertyReference ;
                        sh:path ( bacnet:log-deviceobjectproperty [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-deviceobjectproperty ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:log-deviceobjectproperty ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ) .

bacnet:TrendLogObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "TrendLogObject" ;
    bacnet:x-error "auditable-operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:start-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:notification-threshold ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLevelEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:audit-level ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:log-interval ],
        [ a sh:PropertyShape ;
            sh:hasValue bacnet:BACnetObjectType.trend-log ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:total-record-count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLoggingTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:logging-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interval-offset ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:tags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:log-deviceobjectproperty ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-buffer ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:stop-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts-config ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:records-since-notification ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-message-texts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-resubscription-interval ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetClientCOV ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:client-cov-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:buffer-size ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:last-notify-record ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:trigger ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:record-count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-time-stamps ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:stop-when-full ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:align-intervals ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:property-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-list ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetLogRecord ;
                        sh:path ( bacnet:log-buffer [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-buffer ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:log-buffer ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts-config [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts-config ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts-config ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-time-stamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-time-stamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-time-stamps ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acked-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acked-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acked-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-message-texts [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-message-texts ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-message-texts ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:tags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:tags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:tags ] ] ) .

bacnet:AuditOperationFlags.acknowledge-alarm a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "5"^^xsd:nonNegativeInteger ;
    bacnet:name "acknowledge-alarm" .

bacnet:AuditOperationFlags.auditing-failure a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "13"^^xsd:nonNegativeInteger ;
    bacnet:name "auditing-failure" .

bacnet:AuditOperationFlags.create a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "create" .

bacnet:AuditOperationFlags.delete a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "3"^^xsd:nonNegativeInteger ;
    bacnet:name "delete" .

bacnet:AuditOperationFlags.device-backup a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "9"^^xsd:nonNegativeInteger ;
    bacnet:name "device-backup" .

bacnet:AuditOperationFlags.device-disable-comm a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "6"^^xsd:nonNegativeInteger ;
    bacnet:name "device-disable-comm" .

bacnet:AuditOperationFlags.device-enable-comm a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "7"^^xsd:nonNegativeInteger ;
    bacnet:name "device-enable-comm" .

bacnet:AuditOperationFlags.device-reset a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "8"^^xsd:nonNegativeInteger ;
    bacnet:name "device-reset" .

bacnet:AuditOperationFlags.device-restore a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "10"^^xsd:nonNegativeInteger ;
    bacnet:name "device-restore" .

bacnet:AuditOperationFlags.general a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "15"^^xsd:nonNegativeInteger ;
    bacnet:name "general" .

bacnet:AuditOperationFlags.life-safety a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "4"^^xsd:nonNegativeInteger ;
    bacnet:name "life-safety" .

bacnet:AuditOperationFlags.network-changes a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "14"^^xsd:nonNegativeInteger ;
    bacnet:name "network-changes" .

bacnet:AuditOperationFlags.notification a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "12"^^xsd:nonNegativeInteger ;
    bacnet:name "notification" .

bacnet:AuditOperationFlags.read a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "read" .

bacnet:AuditOperationFlags.subscription a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "11"^^xsd:nonNegativeInteger ;
    bacnet:name "subscription" .

bacnet:AuditOperationFlags.write a bacnet:AuditOperationFlagsNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "write" .

bacnet:BACnetAbortReason.apdu-too-long a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "apdu-too-long" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.application-exceeded-reply-time a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "application-exceeded-reply-time" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.buffer-overflow a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "buffer-overflow" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.insufficient-security a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "insufficient-security" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.invalid-apdu-in-this-state a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "invalid-apdu-in-this-state" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.other a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "other" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.out-of-resources a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "out-of-resources" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.preempted-by-higher-priority-task a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "preempted-by-higher-priority-task" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.security-error a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "security-error" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.segmentation-not-supported a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "segmentation-not-supported" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.tsm-timeout a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "tsm-timeout" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetAbortReason.window-size-out-of-range a bacnet:BACnetAbortReasonEnumerationValue ;
    bacnet:name "window-size-out-of-range" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessAuthenticationFactorDisable.disabled a bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue ;
    bacnet:name "disabled" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessAuthenticationFactorDisable.disabled-damaged a bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue ;
    bacnet:name "disabled-damaged" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessAuthenticationFactorDisable.disabled-destroyed a bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue ;
    bacnet:name "disabled-destroyed" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessAuthenticationFactorDisable.disabled-lost a bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue ;
    bacnet:name "disabled-lost" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessAuthenticationFactorDisable.disabled-stolen a bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue ;
    bacnet:name "disabled-stolen" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessAuthenticationFactorDisable.none a bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisable.disable a bacnet:BACnetAccessCredentialDisableEnumerationValue ;
    bacnet:name "disable" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisable.disable-lockout a bacnet:BACnetAccessCredentialDisableEnumerationValue ;
    bacnet:name "disable-lockout" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisable.disable-manual a bacnet:BACnetAccessCredentialDisableEnumerationValue ;
    bacnet:name "disable-manual" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisable.none a bacnet:BACnetAccessCredentialDisableEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-expired a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-expired" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-inactivity a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-inactivity" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-lockout a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-lockout" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-manual a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-manual" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-max-days a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-max-days" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-max-uses a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-max-uses" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-needs-provisioning a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-needs-provisioning" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-not-yet-active a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-not-yet-active" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessCredentialDisableReason.disabled-unassigned a bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
    bacnet:name "disabled-unassigned" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.accompaniment-by a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "accompaniment-by" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.authentication-factor-read a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "authentication-factor-read" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.authorization-delayed a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "authorization-delayed" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-authentication-factor-damaged a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-authentication-factor-damaged" ;
    bacnet:value "145"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-authentication-factor-destroyed a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-authentication-factor-destroyed" ;
    bacnet:value "146"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-authentication-factor-disabled a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-authentication-factor-disabled" ;
    bacnet:value "147"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-authentication-factor-error a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-authentication-factor-error" ;
    bacnet:value "148"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-authentication-factor-lost a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-authentication-factor-lost" ;
    bacnet:value "143"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-authentication-factor-stolen a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-authentication-factor-stolen" ;
    bacnet:value "144"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-authentication-factor-timeout a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-authentication-factor-timeout" ;
    bacnet:value "131"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-authentication-unavailable a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-authentication-unavailable" ;
    bacnet:value "130"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-disabled a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-disabled" ;
    bacnet:value "158"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-expired a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-expired" ;
    bacnet:value "152"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-inactivity a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-inactivity" ;
    bacnet:value "157"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-lockout a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-lockout" ;
    bacnet:value "154"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-manual-disable a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-manual-disable" ;
    bacnet:value "153"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-max-days a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-max-days" ;
    bacnet:value "155"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-max-uses a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-max-uses" ;
    bacnet:value "156"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-not-provisioned a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-not-provisioned" ;
    bacnet:value "150"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-not-yet-active a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-not-yet-active" ;
    bacnet:value "151"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-credential-unassigned a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-credential-unassigned" ;
    bacnet:value "149"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-deny-all a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-deny-all" ;
    bacnet:value "128"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-incorrect-accompaniment a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-incorrect-accompaniment" ;
    bacnet:value "160"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-incorrect-authentication-factor a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-incorrect-authentication-factor" ;
    bacnet:value "132"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-lockout a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-lockout" ;
    bacnet:value "161"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-lower-occupancy-limit a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-lower-occupancy-limit" ;
    bacnet:value "141"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-max-attempts a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-max-attempts" ;
    bacnet:value "140"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-no-access-rights a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-no-access-rights" ;
    bacnet:value "135"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-no-accompaniment a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-no-accompaniment" ;
    bacnet:value "159"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-other a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-other" ;
    bacnet:value "164"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-out-of-time-range a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-out-of-time-range" ;
    bacnet:value "136"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-passback a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-passback" ;
    bacnet:value "138"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-point-no-access-rights a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-point-no-access-rights" ;
    bacnet:value "134"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-threat-level a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-threat-level" ;
    bacnet:value "137"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-unexpected-location-usage a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-unexpected-location-usage" ;
    bacnet:value "139"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-unknown-credential a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-unknown-credential" ;
    bacnet:value "129"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-upper-occupancy-limit a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-upper-occupancy-limit" ;
    bacnet:value "142"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-verification-failed a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-verification-failed" ;
    bacnet:value "162"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-verification-timeout a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-verification-timeout" ;
    bacnet:value "163"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.denied-zone-no-access-rights a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "denied-zone-no-access-rights" ;
    bacnet:value "133"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.duress a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "duress" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.granted a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "granted" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.locked-by-higher-priority a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "locked-by-higher-priority" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.lockout-max-attempts a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "lockout-max-attempts" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.lockout-other a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "lockout-other" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.lockout-relinquished a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "lockout-relinquished" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.muster a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "muster" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.no-entry-after-grant a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "no-entry-after-grant" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.none a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.out-of-service a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "out-of-service" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.out-of-service-relinquished a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "out-of-service-relinquished" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.passback-detected a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "passback-detected" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.trace a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "trace" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessEvent.verification-required a bacnet:BACnetAccessEventEnumerationValue ;
    bacnet:name "verification-required" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessPassbackMode.hard-passback a bacnet:BACnetAccessPassbackModeEnumerationValue ;
    bacnet:name "hard-passback" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessPassbackMode.passback-off a bacnet:BACnetAccessPassbackModeEnumerationValue ;
    bacnet:name "passback-off" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessPassbackMode.soft-passback a bacnet:BACnetAccessPassbackModeEnumerationValue ;
    bacnet:name "soft-passback" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessUserType.asset a bacnet:BACnetAccessUserTypeEnumerationValue ;
    bacnet:name "asset" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessUserType.group a bacnet:BACnetAccessUserTypeEnumerationValue ;
    bacnet:name "group" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessUserType.person a bacnet:BACnetAccessUserTypeEnumerationValue ;
    bacnet:name "person" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessZoneOccupancyState.above-upper-limit a bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
    bacnet:name "above-upper-limit" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessZoneOccupancyState.at-lower-limit a bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
    bacnet:name "at-lower-limit" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessZoneOccupancyState.at-upper-limit a bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
    bacnet:name "at-upper-limit" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessZoneOccupancyState.below-lower-limit a bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
    bacnet:name "below-lower-limit" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessZoneOccupancyState.disabled a bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
    bacnet:name "disabled" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessZoneOccupancyState.normal a bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
    bacnet:name "normal" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAccessZoneOccupancyState.not-supported a bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
    bacnet:name "not-supported" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetAction.direct a bacnet:BACnetActionEnumerationValue ;
    bacnet:name "direct" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAction.reverse a bacnet:BACnetActionEnumerationValue ;
    bacnet:name "reverse" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAssignedLandingCalls.LandingCalls a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetAssignedLandingCalls.LandingCallsSequence .

bacnet:BACnetAuditLevel.audit-all a bacnet:BACnetAuditLevelEnumerationValue ;
    bacnet:name "audit-all" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditLevel.audit-config a bacnet:BACnetAuditLevelEnumerationValue ;
    bacnet:name "audit-config" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditLevel.default a bacnet:BACnetAuditLevelEnumerationValue ;
    bacnet:name "default" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditLevel.none a bacnet:BACnetAuditLevelEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditLogQueryParameters a sh:NodeShape ;
    rdfs:label "BACnetAuditLogQueryParameters" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAuditLogQueryParameters.ByTarget ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:by-target ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAuditLogQueryParameters.BySource ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:by-source ] ] ) .

bacnet:BACnetAuditLogRecordResult a sh:NodeShape ;
    rdfs:label "BACnetAuditLogRecordResult" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLogRecord ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:assigned-access-rights ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 18446744073709551615 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:sequence-number ] .

bacnet:BACnetAuditOperation.acknowledge-alarm a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "acknowledge-alarm" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.auditing-failure a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "auditing-failure" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.create a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "create" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.delete a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "delete" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.device-backup a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "device-backup" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.device-disable-comm a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "device-disable-comm" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.device-enable-comm a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "device-enable-comm" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.device-reset a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "device-reset" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.device-restore a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "device-restore" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.general a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "general" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.life-safety a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "life-safety" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.network-changes a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "network-changes" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.notification a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "notification" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.read a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "read" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.subscription a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "subscription" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetAuditOperation.write a bacnet:BACnetAuditOperationEnumerationValue ;
    bacnet:name "write" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.aba-track2 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "aba-track2" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.cbeff-a a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "cbeff-a" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.cbeff-b a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "cbeff-b" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.cbeff-c a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "cbeff-c" ;
    bacnet:value "23"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.chuid a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "chuid" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.chuid-full a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "chuid-full" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.custom a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "custom" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.error a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "error" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.facility16-card32 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "facility16-card32" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.facility32-card32 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "facility32-card32" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.fasc-n a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "fasc-n" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.fasc-n-bcd a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "fasc-n-bcd" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.fasc-n-large a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "fasc-n-large" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.fasc-n-large-bcd a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "fasc-n-large-bcd" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.gsa75 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "gsa75" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.guid a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "guid" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.simple-alpha-numeric a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "simple-alpha-numeric" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.simple-number16 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "simple-number16" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.simple-number32 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "simple-number32" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.simple-number56 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "simple-number56" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.undefined a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "undefined" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.user-password a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "user-password" ;
    bacnet:value "24"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.wiegand26 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "wiegand26" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.wiegand37 a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "wiegand37" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationFactorType.wiegand37-facility a bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
    bacnet:name "wiegand37-facility" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationPolicy.Policy a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetAuthenticationPolicy.PolicySequence .

bacnet:BACnetAuthenticationStatus.disabled a bacnet:BACnetAuthenticationStatusEnumerationValue ;
    bacnet:name "disabled" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationStatus.in-progress a bacnet:BACnetAuthenticationStatusEnumerationValue ;
    bacnet:name "in-progress" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationStatus.not-ready a bacnet:BACnetAuthenticationStatusEnumerationValue ;
    bacnet:name "not-ready" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationStatus.ready a bacnet:BACnetAuthenticationStatusEnumerationValue ;
    bacnet:name "ready" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationStatus.waiting-for-accompaniment a bacnet:BACnetAuthenticationStatusEnumerationValue ;
    bacnet:name "waiting-for-accompaniment" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationStatus.waiting-for-authentication-factor a bacnet:BACnetAuthenticationStatusEnumerationValue ;
    bacnet:name "waiting-for-authentication-factor" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthenticationStatus.waiting-for-verification a bacnet:BACnetAuthenticationStatusEnumerationValue ;
    bacnet:name "waiting-for-verification" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationExemption.access-rights a bacnet:BACnetAuthorizationExemptionEnumerationValue ;
    bacnet:name "access-rights" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationExemption.authorization-delay a bacnet:BACnetAuthorizationExemptionEnumerationValue ;
    bacnet:name "authorization-delay" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationExemption.deny a bacnet:BACnetAuthorizationExemptionEnumerationValue ;
    bacnet:name "deny" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationExemption.lockout a bacnet:BACnetAuthorizationExemptionEnumerationValue ;
    bacnet:name "lockout" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationExemption.occupancy-check a bacnet:BACnetAuthorizationExemptionEnumerationValue ;
    bacnet:name "occupancy-check" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationExemption.passback a bacnet:BACnetAuthorizationExemptionEnumerationValue ;
    bacnet:name "passback" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationExemption.verification a bacnet:BACnetAuthorizationExemptionEnumerationValue ;
    bacnet:name "verification" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationMode.authorization-delayed a bacnet:BACnetAuthorizationModeEnumerationValue ;
    bacnet:name "authorization-delayed" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationMode.authorize a bacnet:BACnetAuthorizationModeEnumerationValue ;
    bacnet:name "authorize" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationMode.deny-all a bacnet:BACnetAuthorizationModeEnumerationValue ;
    bacnet:name "deny-all" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationMode.grant-active a bacnet:BACnetAuthorizationModeEnumerationValue ;
    bacnet:name "grant-active" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationMode.none a bacnet:BACnetAuthorizationModeEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetAuthorizationMode.verification-required a bacnet:BACnetAuthorizationModeEnumerationValue ;
    bacnet:name "verification-required" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetBackupState.backup-failure a bacnet:BACnetBackupStateEnumerationValue ;
    bacnet:name "backup-failure" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetBackupState.idle a bacnet:BACnetBackupStateEnumerationValue ;
    bacnet:name "idle" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetBackupState.performing-a-backup a bacnet:BACnetBackupStateEnumerationValue ;
    bacnet:name "performing-a-backup" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetBackupState.performing-a-restore a bacnet:BACnetBackupStateEnumerationValue ;
    bacnet:name "performing-a-restore" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetBackupState.preparing-for-backup a bacnet:BACnetBackupStateEnumerationValue ;
    bacnet:name "preparing-for-backup" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetBackupState.preparing-for-restore a bacnet:BACnetBackupStateEnumerationValue ;
    bacnet:name "preparing-for-restore" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetBackupState.restore-failure a bacnet:BACnetBackupStateEnumerationValue ;
    bacnet:name "restore-failure" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetBinaryLightingPV.off a bacnet:BACnetBinaryLightingPVEnumerationValue ;
    bacnet:name "off" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetBinaryLightingPV.on a bacnet:BACnetBinaryLightingPVEnumerationValue ;
    bacnet:name "on" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetBinaryLightingPV.stop a bacnet:BACnetBinaryLightingPVEnumerationValue ;
    bacnet:name "stop" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetBinaryLightingPV.warn a bacnet:BACnetBinaryLightingPVEnumerationValue ;
    bacnet:name "warn" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetBinaryLightingPV.warn-off a bacnet:BACnetBinaryLightingPVEnumerationValue ;
    bacnet:name "warn-off" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetBinaryLightingPV.warn-relinquish a bacnet:BACnetBinaryLightingPVEnumerationValue ;
    bacnet:name "warn-relinquish" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetBinaryPV.active a bacnet:BACnetBinaryPVEnumerationValue ;
    bacnet:name "active" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetBinaryPV.inactive a bacnet:BACnetBinaryPVEnumerationValue ;
    bacnet:name "inactive" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecifications a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence .

bacnet:BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferences a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferencesSequence .

bacnet:BACnetConfirmedServiceChoice.acknowledge-alarm a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "acknowledge-alarm" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.add-list-element a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "add-list-element" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.atomic-read-file a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "atomic-read-file" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.atomic-write-file a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "atomic-write-file" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.confirmed-cov-notification a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "confirmed-cov-notification" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.confirmed-cov-notification-multiple a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "confirmed-cov-notification-multiple" ;
    bacnet:value "31"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.confirmed-event-notification a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "confirmed-event-notification" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.confirmed-private-transfer a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "confirmed-private-transfer" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.confirmed-text-message a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "confirmed-text-message" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.create-object a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "create-object" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.delete-object a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "delete-object" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.device-communication-control a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "device-communication-control" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.get-alarm-summary a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "get-alarm-summary" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.get-enrollment-summary a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "get-enrollment-summary" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.get-event-information a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "get-event-information" ;
    bacnet:value "29"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.life-safety-operation a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "life-safety-operation" ;
    bacnet:value "27"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.read-property a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "read-property" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.read-property-multiple a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "read-property-multiple" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.read-range a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "read-range" ;
    bacnet:value "26"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.reinitialize-device a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "reinitialize-device" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.remove-list-element a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "remove-list-element" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.subscribe-cov a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "subscribe-cov" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.subscribe-cov-property a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "subscribe-cov-property" ;
    bacnet:value "28"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.subscribe-cov-property-multiple a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "subscribe-cov-property-multiple" ;
    bacnet:value "30"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.vt-close a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "vt-close" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.vt-data a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "vt-data" ;
    bacnet:value "23"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.vt-open a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "vt-open" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.write-property a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "write-property" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetConfirmedServiceChoice.write-property-multiple a bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
    bacnet:name "write-property-multiple" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetDaysOfWeek.friday a bacnet:BACnetDaysOfWeekNamedBits ;
    bacnet:bit "4"^^xsd:nonNegativeInteger ;
    bacnet:name "friday" .

bacnet:BACnetDaysOfWeek.monday a bacnet:BACnetDaysOfWeekNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "monday" .

bacnet:BACnetDaysOfWeek.saturday a bacnet:BACnetDaysOfWeekNamedBits ;
    bacnet:bit "5"^^xsd:nonNegativeInteger ;
    bacnet:name "saturday" .

bacnet:BACnetDaysOfWeek.sunday a bacnet:BACnetDaysOfWeekNamedBits ;
    bacnet:bit "6"^^xsd:nonNegativeInteger ;
    bacnet:name "sunday" .

bacnet:BACnetDaysOfWeek.thursday a bacnet:BACnetDaysOfWeekNamedBits ;
    bacnet:bit "3"^^xsd:nonNegativeInteger ;
    bacnet:name "thursday" .

bacnet:BACnetDaysOfWeek.tuesday a bacnet:BACnetDaysOfWeekNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "tuesday" .

bacnet:BACnetDaysOfWeek.wednesday a bacnet:BACnetDaysOfWeekNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "wednesday" .

bacnet:BACnetDeviceStatus.backup-in-progress a bacnet:BACnetDeviceStatusEnumerationValue ;
    bacnet:name "backup-in-progress" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetDeviceStatus.download-in-progress a bacnet:BACnetDeviceStatusEnumerationValue ;
    bacnet:name "download-in-progress" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetDeviceStatus.download-required a bacnet:BACnetDeviceStatusEnumerationValue ;
    bacnet:name "download-required" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetDeviceStatus.non-operational a bacnet:BACnetDeviceStatusEnumerationValue ;
    bacnet:name "non-operational" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetDeviceStatus.operational a bacnet:BACnetDeviceStatusEnumerationValue ;
    bacnet:name "operational" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetDeviceStatus.operational-read-only a bacnet:BACnetDeviceStatusEnumerationValue ;
    bacnet:name "operational-read-only" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.alarm a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "alarm" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.door-fault a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "door-fault" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.door-open-too-long a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "door-open-too-long" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.egress-open a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "egress-open" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.forced-open a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "forced-open" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.free-access a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "free-access" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.lock-down a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "lock-down" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.normal a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "normal" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorAlarmState.tamper a bacnet:BACnetDoorAlarmStateEnumerationValue ;
    bacnet:name "tamper" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorSecuredStatus.secured a bacnet:BACnetDoorSecuredStatusEnumerationValue ;
    bacnet:name "secured" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorSecuredStatus.unknown a bacnet:BACnetDoorSecuredStatusEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorSecuredStatus.unsecured a bacnet:BACnetDoorSecuredStatusEnumerationValue ;
    bacnet:name "unsecured" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.closed a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "closed" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.closing a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "closing" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.door-fault a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "door-fault" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.limited-opened a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "limited-opened" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.none a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.opened a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "opened" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.opening a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "opening" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.safety-locked a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "safety-locked" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.unknown a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorStatus.unused a bacnet:BACnetDoorStatusEnumerationValue ;
    bacnet:name "unused" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorValue.extended-pulse-unlock a bacnet:BACnetDoorValueEnumerationValue ;
    bacnet:name "extended-pulse-unlock" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorValue.lock a bacnet:BACnetDoorValueEnumerationValue ;
    bacnet:name "lock" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorValue.pulse-unlock a bacnet:BACnetDoorValueEnumerationValue ;
    bacnet:name "pulse-unlock" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetDoorValue.unlock a bacnet:BACnetDoorValueEnumerationValue ;
    bacnet:name "unlock" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.ampere-seconds a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "ampere-seconds" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.ampere-square-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "ampere-square-hours" ;
    bacnet:value "246"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.ampere-square-meters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "ampere-square-meters" ;
    bacnet:value "169"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.amperes a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "amperes" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.amperes-per-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "amperes-per-meter" ;
    bacnet:value "167"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.amperes-per-square-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "amperes-per-square-meter" ;
    bacnet:value "168"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.bars a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "bars" ;
    bacnet:value "55"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.becquerels a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "becquerels" ;
    bacnet:value "222"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.btus a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "btus" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.btus-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "btus-per-hour" ;
    bacnet:value "50"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.btus-per-pound a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "btus-per-pound" ;
    bacnet:value "117"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.btus-per-pound-dry-air a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "btus-per-pound-dry-air" ;
    bacnet:value "24"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.candelas a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "candelas" ;
    bacnet:value "179"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.candelas-per-square-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "candelas-per-square-meter" ;
    bacnet:value "180"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.centimeters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "centimeters" ;
    bacnet:value "118"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.centimeters-of-mercury a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "centimeters-of-mercury" ;
    bacnet:value "60"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.centimeters-of-water a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "centimeters-of-water" ;
    bacnet:value "57"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-feet a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-feet" ;
    bacnet:value "79"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-feet-per-day a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-feet-per-day" ;
    bacnet:value "248"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-feet-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-feet-per-hour" ;
    bacnet:value "191"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-feet-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-feet-per-minute" ;
    bacnet:value "84"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-feet-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-feet-per-second" ;
    bacnet:value "142"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-meters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-meters" ;
    bacnet:value "80"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-meters-per-day a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-meters-per-day" ;
    bacnet:value "249"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-meters-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-meters-per-hour" ;
    bacnet:value "135"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-meters-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-meters-per-minute" ;
    bacnet:value "165"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cubic-meters-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cubic-meters-per-second" ;
    bacnet:value "85"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency1 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency1" ;
    bacnet:value "105"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency10 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency10" ;
    bacnet:value "114"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency2 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency2" ;
    bacnet:value "106"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency3 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency3" ;
    bacnet:value "107"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency4 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency4" ;
    bacnet:value "108"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency5 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency5" ;
    bacnet:value "109"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency6 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency6" ;
    bacnet:value "110"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency7 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency7" ;
    bacnet:value "111"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency8 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency8" ;
    bacnet:value "112"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.currency9 a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "currency9" ;
    bacnet:value "113"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cycles-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cycles-per-hour" ;
    bacnet:value "25"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.cycles-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "cycles-per-minute" ;
    bacnet:value "26"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.days a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "days" ;
    bacnet:value "70"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.decibels a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "decibels" ;
    bacnet:value "199"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.decibels-a a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "decibels-a" ;
    bacnet:value "232"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.decibels-millivolt a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "decibels-millivolt" ;
    bacnet:value "200"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.decibels-volt a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "decibels-volt" ;
    bacnet:value "201"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degree-days-celsius a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degree-days-celsius" ;
    bacnet:value "65"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degree-days-fahrenheit a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degree-days-fahrenheit" ;
    bacnet:value "66"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-angular a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-angular" ;
    bacnet:value "90"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-celsius a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-celsius" ;
    bacnet:value "62"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-celsius-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-celsius-per-hour" ;
    bacnet:value "91"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-celsius-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-celsius-per-minute" ;
    bacnet:value "92"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-fahrenheit a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-fahrenheit" ;
    bacnet:value "64"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-fahrenheit-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-fahrenheit-per-hour" ;
    bacnet:value "93"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-fahrenheit-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-fahrenheit-per-minute" ;
    bacnet:value "94"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-kelvin" ;
    bacnet:value "63"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-kelvin-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-kelvin-per-hour" ;
    bacnet:value "181"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-kelvin-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-kelvin-per-minute" ;
    bacnet:value "182"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.degrees-phase a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "degrees-phase" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.delta-degrees-fahrenheit a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "delta-degrees-fahrenheit" ;
    bacnet:value "120"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.delta-degrees-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "delta-degrees-kelvin" ;
    bacnet:value "121"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.farads a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "farads" ;
    bacnet:value "170"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.feet a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "feet" ;
    bacnet:value "33"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.feet-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "feet-per-minute" ;
    bacnet:value "77"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.feet-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "feet-per-second" ;
    bacnet:value "76"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.foot-candles a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "foot-candles" ;
    bacnet:value "38"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams" ;
    bacnet:value "195"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-of-water-per-kilogram-dry-air a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-of-water-per-kilogram-dry-air" ;
    bacnet:value "28"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-cubic-centimeter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-cubic-centimeter" ;
    bacnet:value "221"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-cubic-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-cubic-meter" ;
    bacnet:value "217"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-gram a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-gram" ;
    bacnet:value "208"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-kilogram a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-kilogram" ;
    bacnet:value "210"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-liter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-liter" ;
    bacnet:value "214"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-milliliter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-milliliter" ;
    bacnet:value "213"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-minute" ;
    bacnet:value "155"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-second" ;
    bacnet:value "154"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.grams-per-square-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "grams-per-square-meter" ;
    bacnet:value "235"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.gray a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "gray" ;
    bacnet:value "225"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.hectopascals a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "hectopascals" ;
    bacnet:value "133"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.henrys a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "henrys" ;
    bacnet:value "171"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.hertz a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "hertz" ;
    bacnet:value "27"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.horsepower a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "horsepower" ;
    bacnet:value "51"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "hours" ;
    bacnet:value "71"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.hundredths-seconds a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "hundredths-seconds" ;
    bacnet:value "158"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.imperial-gallons a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "imperial-gallons" ;
    bacnet:value "81"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.imperial-gallons-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "imperial-gallons-per-minute" ;
    bacnet:value "86"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.inches a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "inches" ;
    bacnet:value "32"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.inches-of-mercury a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "inches-of-mercury" ;
    bacnet:value "61"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.inches-of-water a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "inches-of-water" ;
    bacnet:value "58"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.joule-per-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "joule-per-hours" ;
    bacnet:value "247"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.joule-seconds a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "joule-seconds" ;
    bacnet:value "183"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.joules a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "joules" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.joules-per-cubic-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "joules-per-cubic-meter" ;
    bacnet:value "251"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.joules-per-degree-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "joules-per-degree-kelvin" ;
    bacnet:value "127"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.joules-per-kilogram-degree-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "joules-per-kilogram-degree-kelvin" ;
    bacnet:value "128"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.joules-per-kilogram-dry-air a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "joules-per-kilogram-dry-air" ;
    bacnet:value "23"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilo-btus a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilo-btus" ;
    bacnet:value "147"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilo-btus-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilo-btus-per-hour" ;
    bacnet:value "157"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilobecquerels a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilobecquerels" ;
    bacnet:value "223"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilograms a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilograms" ;
    bacnet:value "39"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilograms-per-cubic-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilograms-per-cubic-meter" ;
    bacnet:value "186"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilograms-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilograms-per-hour" ;
    bacnet:value "44"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilograms-per-kilogram a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilograms-per-kilogram" ;
    bacnet:value "209"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilograms-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilograms-per-minute" ;
    bacnet:value "43"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilograms-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilograms-per-second" ;
    bacnet:value "42"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilohertz a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilohertz" ;
    bacnet:value "129"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilohms a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilohms" ;
    bacnet:value "122"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilojoules a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilojoules" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilojoules-per-degree-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilojoules-per-degree-kelvin" ;
    bacnet:value "151"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilojoules-per-kilogram a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilojoules-per-kilogram" ;
    bacnet:value "125"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilojoules-per-kilogram-dry-air a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilojoules-per-kilogram-dry-air" ;
    bacnet:value "149"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilometers a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilometers" ;
    bacnet:value "193"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilometers-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilometers-per-hour" ;
    bacnet:value "75"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilopascals a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilopascals" ;
    bacnet:value "54"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilovolt-ampere-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilovolt-ampere-hours" ;
    bacnet:value "240"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilovolt-ampere-hours-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilovolt-ampere-hours-reactive" ;
    bacnet:value "243"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilovolt-amperes a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilovolt-amperes" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilovolt-amperes-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilovolt-amperes-reactive" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilovolts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilovolts" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilowatt-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilowatt-hours" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilowatt-hours-per-square-foot a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilowatt-hours-per-square-foot" ;
    bacnet:value "138"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilowatt-hours-per-square-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilowatt-hours-per-square-meter" ;
    bacnet:value "137"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilowatt-hours-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilowatt-hours-reactive" ;
    bacnet:value "204"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.kilowatts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "kilowatts" ;
    bacnet:value "48"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.liters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "liters" ;
    bacnet:value "82"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.liters-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "liters-per-hour" ;
    bacnet:value "136"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.liters-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "liters-per-minute" ;
    bacnet:value "88"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.liters-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "liters-per-second" ;
    bacnet:value "87"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.lumens a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "lumens" ;
    bacnet:value "36"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.luxes a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "luxes" ;
    bacnet:value "37"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.mega-btus a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "mega-btus" ;
    bacnet:value "148"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megabecquerels a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megabecquerels" ;
    bacnet:value "224"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megahertz a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megahertz" ;
    bacnet:value "130"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megajoules a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megajoules" ;
    bacnet:value "126"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megajoules-per-degree-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megajoules-per-degree-kelvin" ;
    bacnet:value "152"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megajoules-per-kilogram-dry-air a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megajoules-per-kilogram-dry-air" ;
    bacnet:value "150"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megajoules-per-square-foot a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megajoules-per-square-foot" ;
    bacnet:value "140"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megajoules-per-square-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megajoules-per-square-meter" ;
    bacnet:value "139"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megavolt-ampere-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megavolt-ampere-hours" ;
    bacnet:value "241"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megavolt-ampere-hours-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megavolt-ampere-hours-reactive" ;
    bacnet:value "244"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megavolt-amperes a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megavolt-amperes" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megavolt-amperes-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megavolt-amperes-reactive" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megavolts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megavolts" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megawatt-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megawatt-hours" ;
    bacnet:value "146"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megawatt-hours-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megawatt-hours-reactive" ;
    bacnet:value "205"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megawatts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megawatts" ;
    bacnet:value "49"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.megohms a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "megohms" ;
    bacnet:value "123"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.meters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "meters" ;
    bacnet:value "31"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.meters-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "meters-per-hour" ;
    bacnet:value "164"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.meters-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "meters-per-minute" ;
    bacnet:value "163"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.meters-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "meters-per-second" ;
    bacnet:value "74"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.meters-per-second-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "meters-per-second-per-second" ;
    bacnet:value "166"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.micrograms-per-cubic-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "micrograms-per-cubic-meter" ;
    bacnet:value "219"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.micrograms-per-liter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "micrograms-per-liter" ;
    bacnet:value "216"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.microgray a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "microgray" ;
    bacnet:value "227"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.micrometers a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "micrometers" ;
    bacnet:value "194"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.microsiemens a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "microsiemens" ;
    bacnet:value "190"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.microsieverts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "microsieverts" ;
    bacnet:value "230"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.microsieverts-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "microsieverts-per-hour" ;
    bacnet:value "231"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.miles-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "miles-per-hour" ;
    bacnet:value "78"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milliamperes a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milliamperes" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millibars a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millibars" ;
    bacnet:value "134"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milligrams a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milligrams" ;
    bacnet:value "196"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milligrams-per-cubic-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milligrams-per-cubic-meter" ;
    bacnet:value "218"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milligrams-per-gram a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milligrams-per-gram" ;
    bacnet:value "211"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milligrams-per-kilogram a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milligrams-per-kilogram" ;
    bacnet:value "212"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milligrams-per-liter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milligrams-per-liter" ;
    bacnet:value "215"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milligray a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milligray" ;
    bacnet:value "226"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milliliters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milliliters" ;
    bacnet:value "197"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milliliters-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milliliters-per-second" ;
    bacnet:value "198"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millimeters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millimeters" ;
    bacnet:value "30"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millimeters-of-mercury a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millimeters-of-mercury" ;
    bacnet:value "59"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millimeters-of-water a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millimeters-of-water" ;
    bacnet:value "206"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millimeters-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millimeters-per-minute" ;
    bacnet:value "162"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millimeters-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millimeters-per-second" ;
    bacnet:value "161"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milliohms a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milliohms" ;
    bacnet:value "145"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.million-standard-cubic-feet-per-day a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "million-standard-cubic-feet-per-day" ;
    bacnet:value "47809"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.million-standard-cubic-feet-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "million-standard-cubic-feet-per-minute" ;
    bacnet:value "254"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millirems a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millirems" ;
    bacnet:value "47814"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millirems-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millirems-per-hour" ;
    bacnet:value "47815"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milliseconds a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milliseconds" ;
    bacnet:value "159"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millisiemens a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millisiemens" ;
    bacnet:value "202"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millisieverts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millisieverts" ;
    bacnet:value "229"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.millivolts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "millivolts" ;
    bacnet:value "124"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.milliwatts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "milliwatts" ;
    bacnet:value "132"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.minutes a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "minutes" ;
    bacnet:value "72"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.minutes-per-degree-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "minutes-per-degree-kelvin" ;
    bacnet:value "236"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.mole-percent a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "mole-percent" ;
    bacnet:value "252"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.months a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "months" ;
    bacnet:value "68"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.nanograms-per-cubic-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "nanograms-per-cubic-meter" ;
    bacnet:value "220"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.nephelometric-turbidity-unit a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "nephelometric-turbidity-unit" ;
    bacnet:value "233"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.newton a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "newton" ;
    bacnet:value "153"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.newton-meters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "newton-meters" ;
    bacnet:value "160"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.newton-seconds a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "newton-seconds" ;
    bacnet:value "187"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.newtons-per-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "newtons-per-meter" ;
    bacnet:value "188"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.no-units a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "no-units" ;
    bacnet:value "95"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.ohm-meters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "ohm-meters" ;
    bacnet:value "172"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.ohms a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "ohms" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.ohms-meter-squared-per-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "ohms-meter-squared-per-meter" ;
    bacnet:value "237"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pH a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pH" ;
    bacnet:value "234"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.parts-per-billion a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "parts-per-billion" ;
    bacnet:value "97"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.parts-per-million a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "parts-per-million" ;
    bacnet:value "96"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pascal-seconds a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pascal-seconds" ;
    bacnet:value "253"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pascals a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pascals" ;
    bacnet:value "53"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "per-hour" ;
    bacnet:value "131"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.per-mille a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "per-mille" ;
    bacnet:value "207"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "per-minute" ;
    bacnet:value "100"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "per-second" ;
    bacnet:value "101"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.percent a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "percent" ;
    bacnet:value "98"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.percent-obscuration-per-foot a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "percent-obscuration-per-foot" ;
    bacnet:value "143"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.percent-obscuration-per-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "percent-obscuration-per-meter" ;
    bacnet:value "144"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.percent-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "percent-per-second" ;
    bacnet:value "99"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.percent-relative-humidity a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "percent-relative-humidity" ;
    bacnet:value "29"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pounds-force-per-square-inch a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pounds-force-per-square-inch" ;
    bacnet:value "56"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pounds-mass a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pounds-mass" ;
    bacnet:value "40"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pounds-mass-per-day a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pounds-mass-per-day" ;
    bacnet:value "47812"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pounds-mass-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pounds-mass-per-hour" ;
    bacnet:value "46"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pounds-mass-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pounds-mass-per-minute" ;
    bacnet:value "45"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.pounds-mass-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "pounds-mass-per-second" ;
    bacnet:value "119"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.power-factor a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "power-factor" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.psi-per-degree-fahrenheit a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "psi-per-degree-fahrenheit" ;
    bacnet:value "102"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.radians a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "radians" ;
    bacnet:value "103"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.radians-per-second a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "radians-per-second" ;
    bacnet:value "184"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.revolutions-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "revolutions-per-minute" ;
    bacnet:value "104"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.seconds a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "seconds" ;
    bacnet:value "73"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.siemens a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "siemens" ;
    bacnet:value "173"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.siemens-per-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "siemens-per-meter" ;
    bacnet:value "174"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.sieverts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "sieverts" ;
    bacnet:value "228"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.square-centimeters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "square-centimeters" ;
    bacnet:value "116"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.square-feet a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "square-feet" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.square-inches a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "square-inches" ;
    bacnet:value "115"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.square-meters a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "square-meters" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.square-meters-per-newton a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "square-meters-per-newton" ;
    bacnet:value "185"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.standard-cubic-feet-per-day a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "standard-cubic-feet-per-day" ;
    bacnet:value "47808"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.teslas a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "teslas" ;
    bacnet:value "175"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.therms a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "therms" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.thousand-cubic-feet-per-day a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "thousand-cubic-feet-per-day" ;
    bacnet:value "47810"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.thousand-standard-cubic-feet-per-day a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "thousand-standard-cubic-feet-per-day" ;
    bacnet:value "47811"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.ton-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "ton-hours" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.tons a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "tons" ;
    bacnet:value "41"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.tons-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "tons-per-hour" ;
    bacnet:value "156"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.tons-refrigeration a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "tons-refrigeration" ;
    bacnet:value "52"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.us-gallons a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "us-gallons" ;
    bacnet:value "83"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.us-gallons-per-hour a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "us-gallons-per-hour" ;
    bacnet:value "192"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.us-gallons-per-minute a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "us-gallons-per-minute" ;
    bacnet:value "89"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.volt-ampere-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "volt-ampere-hours" ;
    bacnet:value "239"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.volt-ampere-hours-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "volt-ampere-hours-reactive" ;
    bacnet:value "242"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.volt-amperes a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "volt-amperes" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.volt-amperes-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "volt-amperes-reactive" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.volt-square-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "volt-square-hours" ;
    bacnet:value "245"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.volts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "volts" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.volts-per-degree-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "volts-per-degree-kelvin" ;
    bacnet:value "176"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.volts-per-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "volts-per-meter" ;
    bacnet:value "177"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.watt-hours a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "watt-hours" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.watt-hours-per-cubic-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "watt-hours-per-cubic-meter" ;
    bacnet:value "250"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.watt-hours-reactive a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "watt-hours-reactive" ;
    bacnet:value "203"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.watts a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "watts" ;
    bacnet:value "47"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.watts-per-meter-per-degree-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "watts-per-meter-per-degree-kelvin" ;
    bacnet:value "189"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.watts-per-square-foot a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "watts-per-square-foot" ;
    bacnet:value "34"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.watts-per-square-meter a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "watts-per-square-meter" ;
    bacnet:value "35"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.watts-per-square-meter-degree-kelvin a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "watts-per-square-meter-degree-kelvin" ;
    bacnet:value "141"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.webers a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "webers" ;
    bacnet:value "178"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.weeks a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "weeks" ;
    bacnet:value "69"^^xsd:nonNegativeInteger .

bacnet:BACnetEngineeringUnits.years a bacnet:BACnetEngineeringUnitsEnumerationValue ;
    bacnet:name "years" ;
    bacnet:value "67"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.comb-plate-fault a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "comb-plate-fault" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.controller-fault a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "controller-fault" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.controller-supply-fault a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "controller-supply-fault" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.drive-and-motor-fault a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "drive-and-motor-fault" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.drive-temperature-exceeded a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "drive-temperature-exceeded" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.mechanical-component-fault a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "mechanical-component-fault" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.overspeed-fault a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "overspeed-fault" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.power-supply-fault a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "power-supply-fault" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorFault.safety-device-fault a bacnet:BACnetEscalatorFaultEnumerationValue ;
    bacnet:name "safety-device-fault" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorMode.down a bacnet:BACnetEscalatorModeEnumerationValue ;
    bacnet:name "down" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorMode.inspection a bacnet:BACnetEscalatorModeEnumerationValue ;
    bacnet:name "inspection" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorMode.out-of-service a bacnet:BACnetEscalatorModeEnumerationValue ;
    bacnet:name "out-of-service" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorMode.stop a bacnet:BACnetEscalatorModeEnumerationValue ;
    bacnet:name "stop" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorMode.unknown a bacnet:BACnetEscalatorModeEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorMode.up a bacnet:BACnetEscalatorModeEnumerationValue ;
    bacnet:name "up" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorOperationDirection.down-rated-speed a bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
    bacnet:name "down-rated-speed" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorOperationDirection.down-reduced-speed a bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
    bacnet:name "down-reduced-speed" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorOperationDirection.stopped a bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
    bacnet:name "stopped" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorOperationDirection.unknown a bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorOperationDirection.up-rated-speed a bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
    bacnet:name "up-rated-speed" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetEscalatorOperationDirection.up-reduced-speed a bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
    bacnet:name "up-reduced-speed" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetEventParameter.Extended.Parameters a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetEventParameter.Extended.ParametersChoice .

bacnet:BACnetEventState.fault a bacnet:BACnetEventStateEnumerationValue ;
    bacnet:name "fault" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetEventState.high-limit a bacnet:BACnetEventStateEnumerationValue ;
    bacnet:name "high-limit" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetEventState.life-safety-alarm a bacnet:BACnetEventStateEnumerationValue ;
    bacnet:name "life-safety-alarm" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetEventState.low-limit a bacnet:BACnetEventStateEnumerationValue ;
    bacnet:name "low-limit" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetEventState.normal a bacnet:BACnetEventStateEnumerationValue ;
    bacnet:name "normal" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetEventState.offnormal a bacnet:BACnetEventStateEnumerationValue ;
    bacnet:name "offnormal" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetEventTransitionBits.to-fault a bacnet:BACnetEventTransitionBitsNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "to-fault" .

bacnet:BACnetEventTransitionBits.to-normal a bacnet:BACnetEventTransitionBitsNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "to-normal" .

bacnet:BACnetEventTransitionBits.to-offnormal a bacnet:BACnetEventTransitionBitsNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "to-offnormal" .

bacnet:BACnetEventType.access-event a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "access-event" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.buffer-ready a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "buffer-ready" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-bitstring a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-bitstring" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-characterstring a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-characterstring" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-discrete-value a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-discrete-value" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-life-safety a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-life-safety" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-reliability a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-reliability" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-state a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-state" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-status-flags a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-status-flags" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-timer a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-timer" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.change-of-value a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "change-of-value" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.command-failure a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "command-failure" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.double-out-of-range a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "double-out-of-range" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.extended a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "extended" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.floating-limit a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "floating-limit" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.none a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.out-of-range a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "out-of-range" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.signed-out-of-range a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "signed-out-of-range" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.unsigned-out-of-range a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "unsigned-out-of-range" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetEventType.unsigned-range a bacnet:BACnetEventTypeEnumerationValue ;
    bacnet:name "unsigned-range" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetFaultParameter.FaultExtended.Parameters a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetFaultParameter.FaultExtended.ParametersChoice .

bacnet:BACnetFaultType.fault-characterstring a bacnet:BACnetFaultTypeEnumerationValue ;
    bacnet:name "fault-characterstring" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetFaultType.fault-extended a bacnet:BACnetFaultTypeEnumerationValue ;
    bacnet:name "fault-extended" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetFaultType.fault-life-safety a bacnet:BACnetFaultTypeEnumerationValue ;
    bacnet:name "fault-life-safety" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetFaultType.fault-listed a bacnet:BACnetFaultTypeEnumerationValue ;
    bacnet:name "fault-listed" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetFaultType.fault-out-of-range a bacnet:BACnetFaultTypeEnumerationValue ;
    bacnet:name "fault-out-of-range" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetFaultType.fault-state a bacnet:BACnetFaultTypeEnumerationValue ;
    bacnet:name "fault-state" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetFaultType.fault-status-flags a bacnet:BACnetFaultTypeEnumerationValue ;
    bacnet:name "fault-status-flags" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetFaultType.none a bacnet:BACnetFaultTypeEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetFileAccessMethod.record-access a bacnet:BACnetFileAccessMethodEnumerationValue ;
    bacnet:name "record-access" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetFileAccessMethod.stream-access a bacnet:BACnetFileAccessMethodEnumerationValue ;
    bacnet:name "stream-access" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetIPMode.bbmd a bacnet:BACnetIPModeEnumerationValue ;
    bacnet:name "bbmd" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetIPMode.foreign a bacnet:BACnetIPModeEnumerationValue ;
    bacnet:name "foreign" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetIPMode.normal a bacnet:BACnetIPModeEnumerationValue ;
    bacnet:name "normal" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLandingDoorStatus.LandingDoors a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetLandingDoorStatus.LandingDoorsSequence .

bacnet:BACnetLifeSafetyMode.armed a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "armed" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.automatic-release-disabled a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "automatic-release-disabled" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.default a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "default" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.disabled a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "disabled" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.disarmed a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "disarmed" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.disconnected a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "disconnected" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.enabled a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "enabled" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.fast a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "fast" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.manned a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "manned" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.off a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "off" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.on a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "on" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.prearmed a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "prearmed" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.slow a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "slow" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.test a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "test" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyMode.unmanned a bacnet:BACnetLifeSafetyModeEnumerationValue ;
    bacnet:name "unmanned" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.none a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.reset a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "reset" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.reset-alarm a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "reset-alarm" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.reset-fault a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "reset-fault" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.silence a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "silence" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.silence-audible a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "silence-audible" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.silence-visual a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "silence-visual" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.unsilence a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "unsilence" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.unsilence-audible a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "unsilence-audible" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyOperation.unsilence-visual a bacnet:BACnetLifeSafetyOperationEnumerationValue ;
    bacnet:name "unsilence-visual" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.abnormal a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "abnormal" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.active a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "active" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "alarm" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.blocked a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "blocked" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.delayed a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "delayed" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.duress a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "duress" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.emergency-power a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "emergency-power" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.fault a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "fault" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.fault-alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "fault-alarm" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.fault-pre-alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "fault-pre-alarm" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.general-alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "general-alarm" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.holdup a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "holdup" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.local-alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "local-alarm" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.not-ready a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "not-ready" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.pre-alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "pre-alarm" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.quiet a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "quiet" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.supervisory a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "supervisory" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.tamper a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "tamper" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.tamper-alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "tamper-alarm" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.test-active a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "test-active" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.test-alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "test-alarm" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.test-fault a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "test-fault" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.test-fault-alarm a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "test-fault-alarm" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetLifeSafetyState.test-supervisory a bacnet:BACnetLifeSafetyStateEnumerationValue ;
    bacnet:name "test-supervisory" ;
    bacnet:value "23"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDirection.down a bacnet:BACnetLiftCarDirectionEnumerationValue ;
    bacnet:name "down" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDirection.none a bacnet:BACnetLiftCarDirectionEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDirection.stopped a bacnet:BACnetLiftCarDirectionEnumerationValue ;
    bacnet:name "stopped" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDirection.unknown a bacnet:BACnetLiftCarDirectionEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDirection.up a bacnet:BACnetLiftCarDirectionEnumerationValue ;
    bacnet:name "up" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDirection.up-and-down a bacnet:BACnetLiftCarDirectionEnumerationValue ;
    bacnet:name "up-and-down" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDoorCommand.close a bacnet:BACnetLiftCarDoorCommandEnumerationValue ;
    bacnet:name "close" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDoorCommand.none a bacnet:BACnetLiftCarDoorCommandEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDoorCommand.open a bacnet:BACnetLiftCarDoorCommandEnumerationValue ;
    bacnet:name "open" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.accelerate a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "accelerate" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.braking a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "braking" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.decelerate a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "decelerate" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.multi-floor-jump a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "multi-floor-jump" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.rated-speed a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "rated-speed" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.single-floor-jump a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "single-floor-jump" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.stationary a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "stationary" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.three-floor-jump a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "three-floor-jump" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.two-floor-jump a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "two-floor-jump" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarDriveStatus.unknown a bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.attendant-control a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "attendant-control" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.cabinet-recall a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "cabinet-recall" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.earthquake-operation a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "earthquake-operation" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.emergency-power a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "emergency-power" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.fire-operation a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "fire-operation" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.firefighter-control a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "firefighter-control" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.homing a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "homing" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.inspection a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "inspection" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.normal a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "normal" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.occupant-evacuation a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "occupant-evacuation" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.out-of-service a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "out-of-service" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.parking a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "parking" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.unknown a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftCarMode.vip a bacnet:BACnetLiftCarModeEnumerationValue ;
    bacnet:name "vip" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.call-button-stuck a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "call-button-stuck" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.car-stopped-outside-landing-zone a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "car-stopped-outside-landing-zone" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.controller-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "controller-fault" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.controller-supply-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "controller-supply-fault" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.door-closing-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "door-closing-fault" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.door-opening-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "door-opening-fault" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.drive-and-motor-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "drive-and-motor-fault" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.drive-temperature-exceeded a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "drive-temperature-exceeded" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.governor-and-safety-gear-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "governor-and-safety-gear-fault" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.lift-shaft-device-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "lift-shaft-device-fault" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.load-measurement-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "load-measurement-fault" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.position-lost a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "position-lost" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.power-supply-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "power-supply-fault" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.runtime-limit-exceeded a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "runtime-limit-exceeded" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.safety-interlock-fault a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "safety-interlock-fault" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.self-test-failure a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "self-test-failure" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftFault.start-failure a bacnet:BACnetLiftFaultEnumerationValue ;
    bacnet:name "start-failure" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftGroupMode.down-peak a bacnet:BACnetLiftGroupModeEnumerationValue ;
    bacnet:name "down-peak" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftGroupMode.emergency-power a bacnet:BACnetLiftGroupModeEnumerationValue ;
    bacnet:name "emergency-power" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftGroupMode.four-way a bacnet:BACnetLiftGroupModeEnumerationValue ;
    bacnet:name "four-way" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftGroupMode.normal a bacnet:BACnetLiftGroupModeEnumerationValue ;
    bacnet:name "normal" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftGroupMode.two-way a bacnet:BACnetLiftGroupModeEnumerationValue ;
    bacnet:name "two-way" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftGroupMode.unknown a bacnet:BACnetLiftGroupModeEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLiftGroupMode.up-peak a bacnet:BACnetLiftGroupModeEnumerationValue ;
    bacnet:name "up-peak" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingInProgress.fade-active a bacnet:BACnetLightingInProgressEnumerationValue ;
    bacnet:name "fade-active" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingInProgress.idle a bacnet:BACnetLightingInProgressEnumerationValue ;
    bacnet:name "idle" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingInProgress.not-controlled a bacnet:BACnetLightingInProgressEnumerationValue ;
    bacnet:name "not-controlled" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingInProgress.other a bacnet:BACnetLightingInProgressEnumerationValue ;
    bacnet:name "other" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingInProgress.ramp-active a bacnet:BACnetLightingInProgressEnumerationValue ;
    bacnet:name "ramp-active" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.fade-to a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "fade-to" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.none a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.ramp-to a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "ramp-to" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.step-down a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "step-down" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.step-off a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "step-off" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.step-on a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "step-on" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.step-up a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "step-up" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.stop a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "stop" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.warn a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "warn" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.warn-off a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "warn-off" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingOperation.warn-relinquish a bacnet:BACnetLightingOperationEnumerationValue ;
    bacnet:name "warn-relinquish" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingTransition.fade a bacnet:BACnetLightingTransitionEnumerationValue ;
    bacnet:name "fade" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingTransition.none a bacnet:BACnetLightingTransitionEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLightingTransition.ramp a bacnet:BACnetLightingTransitionEnumerationValue ;
    bacnet:name "ramp" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLimitEnable.high-limit-enable a bacnet:BACnetLimitEnableNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "high-limit-enable" .

bacnet:BACnetLimitEnable.low-limit-enable a bacnet:BACnetLimitEnableNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "low-limit-enable" .

bacnet:BACnetLockStatus.lock-fault a bacnet:BACnetLockStatusEnumerationValue ;
    bacnet:name "lock-fault" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetLockStatus.locked a bacnet:BACnetLockStatusEnumerationValue ;
    bacnet:name "locked" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLockStatus.unknown a bacnet:BACnetLockStatusEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetLockStatus.unlocked a bacnet:BACnetLockStatusEnumerationValue ;
    bacnet:name "unlocked" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLockStatus.unused a bacnet:BACnetLockStatusEnumerationValue ;
    bacnet:name "unused" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetLogData.LogData a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetLogData.LogDataChoice .

bacnet:BACnetLogStatus.buffer-purged a bacnet:BACnetLogStatusNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "buffer-purged" .

bacnet:BACnetLogStatus.log-disabled a bacnet:BACnetLogStatusNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "log-disabled" .

bacnet:BACnetLogStatus.log-interrupted a bacnet:BACnetLogStatusNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "log-interrupted" .

bacnet:BACnetLoggingType.cov a bacnet:BACnetLoggingTypeEnumerationValue ;
    bacnet:name "cov" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetLoggingType.polled a bacnet:BACnetLoggingTypeEnumerationValue ;
    bacnet:name "polled" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetLoggingType.triggered a bacnet:BACnetLoggingTypeEnumerationValue ;
    bacnet:name "triggered" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetMaintenance.need-service-inoperative a bacnet:BACnetMaintenanceEnumerationValue ;
    bacnet:name "need-service-inoperative" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetMaintenance.need-service-operational a bacnet:BACnetMaintenanceEnumerationValue ;
    bacnet:name "need-service-operational" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetMaintenance.none a bacnet:BACnetMaintenanceEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetMaintenance.periodic-test a bacnet:BACnetMaintenanceEnumerationValue ;
    bacnet:name "periodic-test" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkNumberQuality.configured a bacnet:BACnetNetworkNumberQualityEnumerationValue ;
    bacnet:name "configured" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkNumberQuality.learned a bacnet:BACnetNetworkNumberQualityEnumerationValue ;
    bacnet:name "learned" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkNumberQuality.learned-configured a bacnet:BACnetNetworkNumberQualityEnumerationValue ;
    bacnet:name "learned-configured" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkNumberQuality.unknown a bacnet:BACnetNetworkNumberQualityEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkPortCommand.discard-changes a bacnet:BACnetNetworkPortCommandEnumerationValue ;
    bacnet:name "discard-changes" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkPortCommand.disconnect a bacnet:BACnetNetworkPortCommandEnumerationValue ;
    bacnet:name "disconnect" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkPortCommand.idle a bacnet:BACnetNetworkPortCommandEnumerationValue ;
    bacnet:name "idle" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkPortCommand.renew-dhcp a bacnet:BACnetNetworkPortCommandEnumerationValue ;
    bacnet:name "renew-dhcp" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkPortCommand.renew-fd-registration a bacnet:BACnetNetworkPortCommandEnumerationValue ;
    bacnet:name "renew-fd-registration" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkPortCommand.restart-autonegotiation a bacnet:BACnetNetworkPortCommandEnumerationValue ;
    bacnet:name "restart-autonegotiation" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkPortCommand.restart-port a bacnet:BACnetNetworkPortCommandEnumerationValue ;
    bacnet:name "restart-port" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkPortCommand.restart-slave-discovery a bacnet:BACnetNetworkPortCommandEnumerationValue ;
    bacnet:name "restart-slave-discovery" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkSecurityPolicy a sh:NodeShape ;
    rdfs:label "BACnetNetworkSecurityPolicy" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:port-id ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetSecurityPolicyEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:security-level ] .

bacnet:BACnetNetworkType.arcnet a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "arcnet" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.ethernet a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "ethernet" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.ipv4 a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "ipv4" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.ipv6 a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "ipv6" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.lontalk a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "lontalk" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.mstp a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "mstp" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.ptp a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "ptp" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.serial a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "serial" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.virtual a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "virtual" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetNetworkType.zigbee a bacnet:BACnetNetworkTypeEnumerationValue ;
    bacnet:name "zigbee" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.area a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "area" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.building a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "building" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.collection a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "collection" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.device a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "device" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.equipment a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "equipment" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.floor a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "floor" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.functional a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "functional" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.member a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "member" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.module a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "module" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.network a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "network" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.organizational a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "organizational" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.other a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "other" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.point a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "point" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.property a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "property" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.protocol a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "protocol" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.room a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "room" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.section a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "section" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.subsystem a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "subsystem" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.system a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "system" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.tree a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "tree" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.unknown a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetNodeType.zone a bacnet:BACnetNodeTypeEnumerationValue ;
    bacnet:name "zone" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetNotificationParameters.ComplexEventType a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetPropertyValue .

bacnet:BACnetNotificationParameters.Extended.Parameters a bacnet:SequenceOf ;
    bacnet:memberType bacnet:BACnetNotificationParameters.Extended.ParametersChoice .

bacnet:BACnetNotifyType.ack-notification a bacnet:BACnetNotifyTypeEnumerationValue ;
    bacnet:name "ack-notification" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetNotifyType.alarm a bacnet:BACnetNotifyTypeEnumerationValue ;
    bacnet:name "alarm" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetNotifyType.event a bacnet:BACnetNotifyTypeEnumerationValue ;
    bacnet:name "event" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectPropertyValue a sh:NodeShape ;
    rdfs:label "BACnetObjectPropertyValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype if omitted with an array the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            bacnet:comment "any datatype appropriate for the specified property"@en ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ] .

bacnet:BACnetObjectType.network-security a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "network-security" ;
    bacnet:value "38"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectTypesSupported.access-credential a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "32"^^xsd:nonNegativeInteger ;
    bacnet:name "access-credential" .

bacnet:BACnetObjectTypesSupported.access-door a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "30"^^xsd:nonNegativeInteger ;
    bacnet:name "access-door" .

bacnet:BACnetObjectTypesSupported.access-point a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "33"^^xsd:nonNegativeInteger ;
    bacnet:name "access-point" .

bacnet:BACnetObjectTypesSupported.access-rights a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "34"^^xsd:nonNegativeInteger ;
    bacnet:name "access-rights" .

bacnet:BACnetObjectTypesSupported.access-user a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "35"^^xsd:nonNegativeInteger ;
    bacnet:name "access-user" .

bacnet:BACnetObjectTypesSupported.access-zone a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "36"^^xsd:nonNegativeInteger ;
    bacnet:name "access-zone" .

bacnet:BACnetObjectTypesSupported.accumulator a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "23"^^xsd:nonNegativeInteger ;
    bacnet:name "accumulator" .

bacnet:BACnetObjectTypesSupported.alert-enrollment a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "52"^^xsd:nonNegativeInteger ;
    bacnet:name "alert-enrollment" .

bacnet:BACnetObjectTypesSupported.analog-input a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "analog-input" .

bacnet:BACnetObjectTypesSupported.analog-output a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "analog-output" .

bacnet:BACnetObjectTypesSupported.analog-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "analog-value" .

bacnet:BACnetObjectTypesSupported.averaging a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "18"^^xsd:nonNegativeInteger ;
    bacnet:name "averaging" .

bacnet:BACnetObjectTypesSupported.binary-input a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "3"^^xsd:nonNegativeInteger ;
    bacnet:name "binary-input" .

bacnet:BACnetObjectTypesSupported.binary-lighting-output a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "55"^^xsd:nonNegativeInteger ;
    bacnet:name "binary-lighting-output" .

bacnet:BACnetObjectTypesSupported.binary-output a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "4"^^xsd:nonNegativeInteger ;
    bacnet:name "binary-output" .

bacnet:BACnetObjectTypesSupported.binary-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "5"^^xsd:nonNegativeInteger ;
    bacnet:name "binary-value" .

bacnet:BACnetObjectTypesSupported.bitstring-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "39"^^xsd:nonNegativeInteger ;
    bacnet:name "bitstring-value" .

bacnet:BACnetObjectTypesSupported.calendar a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "6"^^xsd:nonNegativeInteger ;
    bacnet:name "calendar" .

bacnet:BACnetObjectTypesSupported.channel a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "53"^^xsd:nonNegativeInteger ;
    bacnet:name "channel" .

bacnet:BACnetObjectTypesSupported.characterstring-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "40"^^xsd:nonNegativeInteger ;
    bacnet:name "characterstring-value" .

bacnet:BACnetObjectTypesSupported.command a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "7"^^xsd:nonNegativeInteger ;
    bacnet:name "command" .

bacnet:BACnetObjectTypesSupported.credential-data-input a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "37"^^xsd:nonNegativeInteger ;
    bacnet:name "credential-data-input" .

bacnet:BACnetObjectTypesSupported.date-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "42"^^xsd:nonNegativeInteger ;
    bacnet:name "date-value" .

bacnet:BACnetObjectTypesSupported.datepattern-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "41"^^xsd:nonNegativeInteger ;
    bacnet:name "datepattern-value" .

bacnet:BACnetObjectTypesSupported.datetime-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "44"^^xsd:nonNegativeInteger ;
    bacnet:name "datetime-value" .

bacnet:BACnetObjectTypesSupported.datetimepattern-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "43"^^xsd:nonNegativeInteger ;
    bacnet:name "datetimepattern-value" .

bacnet:BACnetObjectTypesSupported.device a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "8"^^xsd:nonNegativeInteger ;
    bacnet:name "device" .

bacnet:BACnetObjectTypesSupported.elevator-group a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "57"^^xsd:nonNegativeInteger ;
    bacnet:name "elevator-group" .

bacnet:BACnetObjectTypesSupported.escalator a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "58"^^xsd:nonNegativeInteger ;
    bacnet:name "escalator" .

bacnet:BACnetObjectTypesSupported.event-enrollment a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "9"^^xsd:nonNegativeInteger ;
    bacnet:name "event-enrollment" .

bacnet:BACnetObjectTypesSupported.event-log a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "25"^^xsd:nonNegativeInteger ;
    bacnet:name "event-log" .

bacnet:BACnetObjectTypesSupported.file a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "10"^^xsd:nonNegativeInteger ;
    bacnet:name "file" .

bacnet:BACnetObjectTypesSupported.global-group a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "26"^^xsd:nonNegativeInteger ;
    bacnet:name "global-group" .

bacnet:BACnetObjectTypesSupported.group a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "11"^^xsd:nonNegativeInteger ;
    bacnet:name "group" .

bacnet:BACnetObjectTypesSupported.integer-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "45"^^xsd:nonNegativeInteger ;
    bacnet:name "integer-value" .

bacnet:BACnetObjectTypesSupported.large-analog-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "46"^^xsd:nonNegativeInteger ;
    bacnet:name "large-analog-value" .

bacnet:BACnetObjectTypesSupported.life-safety-point a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "21"^^xsd:nonNegativeInteger ;
    bacnet:name "life-safety-point" .

bacnet:BACnetObjectTypesSupported.life-safety-zone a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "22"^^xsd:nonNegativeInteger ;
    bacnet:name "life-safety-zone" .

bacnet:BACnetObjectTypesSupported.lift a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "59"^^xsd:nonNegativeInteger ;
    bacnet:name "lift" .

bacnet:BACnetObjectTypesSupported.lighting-output a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "54"^^xsd:nonNegativeInteger ;
    bacnet:name "lighting-output" .

bacnet:BACnetObjectTypesSupported.load-control a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "28"^^xsd:nonNegativeInteger ;
    bacnet:name "load-control" .

bacnet:BACnetObjectTypesSupported.loop a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "12"^^xsd:nonNegativeInteger ;
    bacnet:name "loop" .

bacnet:BACnetObjectTypesSupported.multi-state-input a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "13"^^xsd:nonNegativeInteger ;
    bacnet:name "multi-state-input" .

bacnet:BACnetObjectTypesSupported.multi-state-output a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "14"^^xsd:nonNegativeInteger ;
    bacnet:name "multi-state-output" .

bacnet:BACnetObjectTypesSupported.multi-state-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "19"^^xsd:nonNegativeInteger ;
    bacnet:name "multi-state-value" .

bacnet:BACnetObjectTypesSupported.network-port a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "56"^^xsd:nonNegativeInteger ;
    bacnet:name "network-port" .

bacnet:BACnetObjectTypesSupported.network-security a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "38"^^xsd:nonNegativeInteger ;
    bacnet:name "network-security" .

bacnet:BACnetObjectTypesSupported.notification-class a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "15"^^xsd:nonNegativeInteger ;
    bacnet:name "notification-class" .

bacnet:BACnetObjectTypesSupported.notification-forwarder a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "51"^^xsd:nonNegativeInteger ;
    bacnet:name "notification-forwarder" .

bacnet:BACnetObjectTypesSupported.octetstring-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "47"^^xsd:nonNegativeInteger ;
    bacnet:name "octetstring-value" .

bacnet:BACnetObjectTypesSupported.positive-integer-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "48"^^xsd:nonNegativeInteger ;
    bacnet:name "positive-integer-value" .

bacnet:BACnetObjectTypesSupported.program a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "16"^^xsd:nonNegativeInteger ;
    bacnet:name "program" .

bacnet:BACnetObjectTypesSupported.pulse-converter a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "24"^^xsd:nonNegativeInteger ;
    bacnet:name "pulse-converter" .

bacnet:BACnetObjectTypesSupported.schedule a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "17"^^xsd:nonNegativeInteger ;
    bacnet:name "schedule" .

bacnet:BACnetObjectTypesSupported.structured-view a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "29"^^xsd:nonNegativeInteger ;
    bacnet:name "structured-view" .

bacnet:BACnetObjectTypesSupported.time-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "50"^^xsd:nonNegativeInteger ;
    bacnet:name "time-value" .

bacnet:BACnetObjectTypesSupported.timepattern-value a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "49"^^xsd:nonNegativeInteger ;
    bacnet:name "timepattern-value" .

bacnet:BACnetObjectTypesSupported.timer a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "31"^^xsd:nonNegativeInteger ;
    bacnet:name "timer" .

bacnet:BACnetObjectTypesSupported.trend-log a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "20"^^xsd:nonNegativeInteger ;
    bacnet:name "trend-log" .

bacnet:BACnetObjectTypesSupported.trend-log-multiple a bacnet:BACnetObjectTypesSupportedNamedBits ;
    bacnet:bit "27"^^xsd:nonNegativeInteger ;
    bacnet:name "trend-log-multiple" .

bacnet:BACnetPDU a sh:NodeShape ;
    rdfs:label "BACnetPDU" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetConfirmedRequestPDU ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-request-pdu ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetUnconfirmedRequestPDU ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unconfirmed-request-pdu ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetSimpleACKPDU ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:simple-ack-pdu ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetComplexACKPDU ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:complex-ack-pdu ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetSegmentACKPDU ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:segment-ack-pdu ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetErrorPDU ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:error-pdu ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetRejectPDU ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:reject-pdu ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAbortPDU ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:abort-pdu ] ] ) .

bacnet:BACnetPolarity.normal a bacnet:BACnetPolarityEnumerationValue ;
    bacnet:name "normal" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetPolarity.reverse a bacnet:BACnetPolarityEnumerationValue ;
    bacnet:name "reverse" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetPriorityArray a bacnet:Array ;
    bacnet:memberType bacnet:BACnetPriorityValue .

bacnet:BACnetPriorityFilter.automatic-life-safety a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "automatic-life-safety" .

bacnet:BACnetPriorityFilter.critical-equipment-controls a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "4"^^xsd:nonNegativeInteger ;
    bacnet:name "critical-equipment-controls" .

bacnet:BACnetPriorityFilter.manual-life-safety a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "manual-life-safety" .

bacnet:BACnetPriorityFilter.manual-operator a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "7"^^xsd:nonNegativeInteger ;
    bacnet:name "manual-operator" .

bacnet:BACnetPriorityFilter.minimum-on-off a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "5"^^xsd:nonNegativeInteger ;
    bacnet:name "minimum-on-off" .

bacnet:BACnetPriorityFilter.priority-10 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "9"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-10" .

bacnet:BACnetPriorityFilter.priority-11 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "10"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-11" .

bacnet:BACnetPriorityFilter.priority-12 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "11"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-12" .

bacnet:BACnetPriorityFilter.priority-13 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "12"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-13" .

bacnet:BACnetPriorityFilter.priority-14 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "13"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-14" .

bacnet:BACnetPriorityFilter.priority-15 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "14"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-15" .

bacnet:BACnetPriorityFilter.priority-16 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "15"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-16" .

bacnet:BACnetPriorityFilter.priority-3 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-3" .

bacnet:BACnetPriorityFilter.priority-4 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "3"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-4" .

bacnet:BACnetPriorityFilter.priority-7 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "6"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-7" .

bacnet:BACnetPriorityFilter.priority-9 a bacnet:BACnetPriorityFilterNamedBits ;
    bacnet:bit "8"^^xsd:nonNegativeInteger ;
    bacnet:name "priority-9" .

bacnet:BACnetProgramError.internal a bacnet:BACnetProgramErrorEnumerationValue ;
    bacnet:name "internal" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramError.load-failed a bacnet:BACnetProgramErrorEnumerationValue ;
    bacnet:name "load-failed" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramError.normal a bacnet:BACnetProgramErrorEnumerationValue ;
    bacnet:name "normal" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramError.other a bacnet:BACnetProgramErrorEnumerationValue ;
    bacnet:name "other" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramError.program a bacnet:BACnetProgramErrorEnumerationValue ;
    bacnet:name "program" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramRequest.halt a bacnet:BACnetProgramRequestEnumerationValue ;
    bacnet:name "halt" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramRequest.load a bacnet:BACnetProgramRequestEnumerationValue ;
    bacnet:name "load" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramRequest.ready a bacnet:BACnetProgramRequestEnumerationValue ;
    bacnet:name "ready" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramRequest.restart a bacnet:BACnetProgramRequestEnumerationValue ;
    bacnet:name "restart" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramRequest.run a bacnet:BACnetProgramRequestEnumerationValue ;
    bacnet:name "run" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramRequest.unload a bacnet:BACnetProgramRequestEnumerationValue ;
    bacnet:name "unload" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramState.halted a bacnet:BACnetProgramStateEnumerationValue ;
    bacnet:name "halted" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramState.idle a bacnet:BACnetProgramStateEnumerationValue ;
    bacnet:name "idle" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramState.loading a bacnet:BACnetProgramStateEnumerationValue ;
    bacnet:name "loading" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramState.running a bacnet:BACnetProgramStateEnumerationValue ;
    bacnet:name "running" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramState.unloading a bacnet:BACnetProgramStateEnumerationValue ;
    bacnet:name "unloading" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetProgramState.waiting a bacnet:BACnetProgramStateEnumerationValue ;
    bacnet:name "waiting" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.absentee-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "absentee-limit" ;
    bacnet:value "244"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.accepted-modes a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "accepted-modes" ;
    bacnet:value "175"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.access-alarm-events a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "access-alarm-events" ;
    bacnet:value "245"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.access-doors a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "access-doors" ;
    bacnet:value "246"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.access-event a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "access-event" ;
    bacnet:value "247"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.access-event-authentication-factor a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "access-event-authentication-factor" ;
    bacnet:value "248"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.access-event-credential a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "access-event-credential" ;
    bacnet:value "249"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.access-event-tag a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "access-event-tag" ;
    bacnet:value "322"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.access-event-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "access-event-time" ;
    bacnet:value "250"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.access-transaction-events a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "access-transaction-events" ;
    bacnet:value "251"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.accompaniment a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "accompaniment" ;
    bacnet:value "252"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.accompaniment-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "accompaniment-time" ;
    bacnet:value "253"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ack-required a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ack-required" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.acked-transitions a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "acked-transitions" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.action a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "action" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.action-text a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "action-text" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.activation-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "activation-time" ;
    bacnet:value "254"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.active-authentication-policy a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "active-authentication-policy" ;
    bacnet:value "255"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.active-cov-multiple-subscriptions a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "active-cov-multiple-subscriptions" ;
    bacnet:value "481"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.active-cov-subscriptions a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "active-cov-subscriptions" ;
    bacnet:value "152"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.active-text a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "active-text" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.active-vt-sessions a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "active-vt-sessions" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.actual-shed-level a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "actual-shed-level" ;
    bacnet:value "212"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.adjust-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "adjust-value" ;
    bacnet:value "176"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.alarm-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "alarm-value" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.alarm-values a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "alarm-values" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.align-intervals a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "align-intervals" ;
    bacnet:value "193"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.all a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "all" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.all-writes-successful a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "all-writes-successful" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.allow-group-delay-inhibit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "allow-group-delay-inhibit" ;
    bacnet:value "365"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.apdu-length a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "apdu-length" ;
    bacnet:value "399"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.apdu-segment-timeout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "apdu-segment-timeout" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.apdu-timeout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "apdu-timeout" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.application-software-version a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "application-software-version" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.archive a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "archive" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.assigned-access-rights a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "assigned-access-rights" ;
    bacnet:value "256"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.assigned-landing-calls a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "assigned-landing-calls" ;
    bacnet:value "447"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.attempted-samples a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "attempted-samples" ;
    bacnet:value "124"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.authentication-factors a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "authentication-factors" ;
    bacnet:value "257"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.authentication-policy-list a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "authentication-policy-list" ;
    bacnet:value "258"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.authentication-policy-names a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "authentication-policy-names" ;
    bacnet:value "259"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.authentication-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "authentication-status" ;
    bacnet:value "260"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.authorization-exemptions a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "authorization-exemptions" ;
    bacnet:value "364"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.authorization-mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "authorization-mode" ;
    bacnet:value "261"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.auto-slave-discovery a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "auto-slave-discovery" ;
    bacnet:value "169"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.average-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "average-value" ;
    bacnet:value "125"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.backup-and-restore-state a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "backup-and-restore-state" ;
    bacnet:value "338"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.backup-failure-timeout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "backup-failure-timeout" ;
    bacnet:value "153"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.backup-preparation-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "backup-preparation-time" ;
    bacnet:value "339"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bacnet-ip-global-address a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bacnet-ip-global-address" ;
    bacnet:value "407"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bacnet-ip-mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bacnet-ip-mode" ;
    bacnet:value "408"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bacnet-ip-multicast-address a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bacnet-ip-multicast-address" ;
    bacnet:value "409"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bacnet-ip-nat-traversal a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bacnet-ip-nat-traversal" ;
    bacnet:value "410"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bacnet-ip-udp-port a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bacnet-ip-udp-port" ;
    bacnet:value "412"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bacnet-ipv6-mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bacnet-ipv6-mode" ;
    bacnet:value "435"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bacnet-ipv6-multicast-address a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bacnet-ipv6-multicast-address" ;
    bacnet:value "440"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bacnet-ipv6-udp-port a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bacnet-ipv6-udp-port" ;
    bacnet:value "438"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.base-device-security-policy a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "base-device-security-policy" ;
    bacnet:value "327"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bbmd-accept-fd-registration a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bbmd-accept-fd-registration" ;
    bacnet:value "413"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bbmd-broadcast-distribution-table a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bbmd-broadcast-distribution-table" ;
    bacnet:value "414"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bbmd-foreign-device-table a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bbmd-foreign-device-table" ;
    bacnet:value "415"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.belongs-to a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "belongs-to" ;
    bacnet:value "262"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bias a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bias" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bit-mask a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bit-mask" ;
    bacnet:value "342"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.bit-text a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "bit-text" ;
    bacnet:value "343"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.blink-warn-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "blink-warn-enable" ;
    bacnet:value "373"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.buffer-size a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "buffer-size" ;
    bacnet:value "126"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-assigned-direction a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-assigned-direction" ;
    bacnet:value "448"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-door-command a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-door-command" ;
    bacnet:value "449"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-door-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-door-status" ;
    bacnet:value "450"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-door-text a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-door-text" ;
    bacnet:value "451"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-door-zone a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-door-zone" ;
    bacnet:value "452"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-drive-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-drive-status" ;
    bacnet:value "453"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-load a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-load" ;
    bacnet:value "454"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-load-units a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-load-units" ;
    bacnet:value "455"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-mode" ;
    bacnet:value "456"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-moving-direction a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-moving-direction" ;
    bacnet:value "457"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.car-position a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "car-position" ;
    bacnet:value "458"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.change-of-state-count a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "change-of-state-count" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.change-of-state-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "change-of-state-time" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.changes-pending a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "changes-pending" ;
    bacnet:value "416"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.channel-number a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "channel-number" ;
    bacnet:value "366"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.client-cov-increment a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "client-cov-increment" ;
    bacnet:value "127"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.command a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "command" ;
    bacnet:value "417"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.command-time-array a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "command-time-array" ;
    bacnet:value "430"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.configuration-files a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "configuration-files" ;
    bacnet:value "154"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.control-groups a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "control-groups" ;
    bacnet:value "367"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.controlled-variable-reference a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "controlled-variable-reference" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.controlled-variable-units a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "controlled-variable-units" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.controlled-variable-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "controlled-variable-value" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.count a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "count" ;
    bacnet:value "177"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.count-before-change a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "count-before-change" ;
    bacnet:value "178"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.count-change-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "count-change-time" ;
    bacnet:value "179"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.cov-increment a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "cov-increment" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.cov-period a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "cov-period" ;
    bacnet:value "180"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.cov-resubscription-interval a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "cov-resubscription-interval" ;
    bacnet:value "128"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.covu-period a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "covu-period" ;
    bacnet:value "349"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.covu-recipients a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "covu-recipients" ;
    bacnet:value "350"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.credential-disable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "credential-disable" ;
    bacnet:value "263"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.credential-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "credential-status" ;
    bacnet:value "264"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.credentials a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "credentials" ;
    bacnet:value "265"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.credentials-in-zone a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "credentials-in-zone" ;
    bacnet:value "266"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.current-command-priority a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "current-command-priority" ;
    bacnet:value "431"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.database-revision a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "database-revision" ;
    bacnet:value "155"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.date-list a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "date-list" ;
    bacnet:value "23"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.daylight-savings-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "daylight-savings-status" ;
    bacnet:value "24"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.days-remaining a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "days-remaining" ;
    bacnet:value "267"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.deadband a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "deadband" ;
    bacnet:value "25"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.default-fade-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "default-fade-time" ;
    bacnet:value "374"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.default-ramp-rate a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "default-ramp-rate" ;
    bacnet:value "375"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.default-step-increment a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "default-step-increment" ;
    bacnet:value "376"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.default-subordinate-relationship a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "default-subordinate-relationship" ;
    bacnet:value "490"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.default-timeout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "default-timeout" ;
    bacnet:value "393"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.deployed-profile-location a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "deployed-profile-location" ;
    bacnet:value "484"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.derivative-constant a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "derivative-constant" ;
    bacnet:value "26"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.derivative-constant-units a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "derivative-constant-units" ;
    bacnet:value "27"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.description a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "description" ;
    bacnet:value "28"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.description-of-halt a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "description-of-halt" ;
    bacnet:value "29"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.device-address-binding a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "device-address-binding" ;
    bacnet:value "30"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.device-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "device-type" ;
    bacnet:value "31"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.direct-reading a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "direct-reading" ;
    bacnet:value "156"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.distribution-key-revision a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "distribution-key-revision" ;
    bacnet:value "328"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.do-not-hide a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "do-not-hide" ;
    bacnet:value "329"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.door-alarm-state a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "door-alarm-state" ;
    bacnet:value "226"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.door-extended-pulse-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "door-extended-pulse-time" ;
    bacnet:value "227"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.door-members a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "door-members" ;
    bacnet:value "228"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.door-open-too-long-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "door-open-too-long-time" ;
    bacnet:value "229"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.door-pulse-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "door-pulse-time" ;
    bacnet:value "230"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.door-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "door-status" ;
    bacnet:value "231"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.door-unlock-delay-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "door-unlock-delay-time" ;
    bacnet:value "232"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.duty-window a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "duty-window" ;
    bacnet:value "213"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.effective-period a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "effective-period" ;
    bacnet:value "32"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.egress-active a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "egress-active" ;
    bacnet:value "386"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.egress-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "egress-time" ;
    bacnet:value "377"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.elapsed-active-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "elapsed-active-time" ;
    bacnet:value "33"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.elevator-group a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "elevator-group" ;
    bacnet:value "459"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "enable" ;
    bacnet:value "133"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.energy-meter a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "energy-meter" ;
    bacnet:value "460"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.energy-meter-ref a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "energy-meter-ref" ;
    bacnet:value "461"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.entry-points a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "entry-points" ;
    bacnet:value "268"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.error-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "error-limit" ;
    bacnet:value "34"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.escalator-mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "escalator-mode" ;
    bacnet:value "462"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-algorithm-inhibit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-algorithm-inhibit" ;
    bacnet:value "354"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-algorithm-inhibit-ref a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-algorithm-inhibit-ref" ;
    bacnet:value "355"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-detection-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-detection-enable" ;
    bacnet:value "353"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-enable" ;
    bacnet:value "35"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-message-texts a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-message-texts" ;
    bacnet:value "351"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-message-texts-config a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-message-texts-config" ;
    bacnet:value "352"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-parameters a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-parameters" ;
    bacnet:value "83"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-state a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-state" ;
    bacnet:value "36"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-time-stamps a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-time-stamps" ;
    bacnet:value "130"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.event-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "event-type" ;
    bacnet:value "37"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.exception-schedule a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "exception-schedule" ;
    bacnet:value "38"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.execution-delay a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "execution-delay" ;
    bacnet:value "368"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.exit-points a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "exit-points" ;
    bacnet:value "269"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.expected-shed-level a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "expected-shed-level" ;
    bacnet:value "214"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.expiration-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "expiration-time" ;
    bacnet:value "270"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.extended-time-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "extended-time-enable" ;
    bacnet:value "271"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.failed-attempt-events a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "failed-attempt-events" ;
    bacnet:value "272"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.failed-attempts a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "failed-attempts" ;
    bacnet:value "273"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.failed-attempts-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "failed-attempts-time" ;
    bacnet:value "274"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.fault-high-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "fault-high-limit" ;
    bacnet:value "388"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.fault-low-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "fault-low-limit" ;
    bacnet:value "389"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.fault-parameters a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "fault-parameters" ;
    bacnet:value "358"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.fault-signals a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "fault-signals" ;
    bacnet:value "463"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.fault-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "fault-type" ;
    bacnet:value "359"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.fault-values a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "fault-values" ;
    bacnet:value "39"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.fd-bbmd-address a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "fd-bbmd-address" ;
    bacnet:value "418"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.fd-subscription-lifetime a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "fd-subscription-lifetime" ;
    bacnet:value "419"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.feedback-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "feedback-value" ;
    bacnet:value "40"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.file-access-method a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "file-access-method" ;
    bacnet:value "41"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.file-size a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "file-size" ;
    bacnet:value "42"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.file-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "file-type" ;
    bacnet:value "43"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.firmware-revision a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "firmware-revision" ;
    bacnet:value "44"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.floor-text a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "floor-text" ;
    bacnet:value "464"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.full-duty-baseline a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "full-duty-baseline" ;
    bacnet:value "215"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.global-id a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "global-id" ;
    bacnet:value "465"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.global-identifier a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "global-identifier" ;
    bacnet:value "323"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.group-member-names a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "group-member-names" ;
    bacnet:value "346"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.group-members a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "group-members" ;
    bacnet:value "345"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.group-mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "group-mode" ;
    bacnet:value "467"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.high-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "high-limit" ;
    bacnet:value "45"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.higher-deck a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "higher-deck" ;
    bacnet:value "468"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.in-process a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "in-process" ;
    bacnet:value "47"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.in-progress a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "in-progress" ;
    bacnet:value "378"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.inactive-text a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "inactive-text" ;
    bacnet:value "46"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.initial-timeout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "initial-timeout" ;
    bacnet:value "394"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.input-reference a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "input-reference" ;
    bacnet:value "181"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.installation-id a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "installation-id" ;
    bacnet:value "469"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.instance-of a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "instance-of" ;
    bacnet:value "48"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.instantaneous-power a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "instantaneous-power" ;
    bacnet:value "379"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.integral-constant a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "integral-constant" ;
    bacnet:value "49"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.integral-constant-units a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "integral-constant-units" ;
    bacnet:value "50"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.interface-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "interface-value" ;
    bacnet:value "387"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.interval-offset a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "interval-offset" ;
    bacnet:value "195"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ip-address a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ip-address" ;
    bacnet:value "400"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ip-default-gateway a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ip-default-gateway" ;
    bacnet:value "401"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ip-dhcp-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ip-dhcp-enable" ;
    bacnet:value "402"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ip-dhcp-lease-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ip-dhcp-lease-time" ;
    bacnet:value "403"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ip-dhcp-lease-time-remaining a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ip-dhcp-lease-time-remaining" ;
    bacnet:value "404"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ip-dhcp-server a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ip-dhcp-server" ;
    bacnet:value "405"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ip-dns-server a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ip-dns-server" ;
    bacnet:value "406"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ip-subnet-mask a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ip-subnet-mask" ;
    bacnet:value "411"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-address a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-address" ;
    bacnet:value "436"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-auto-addressing-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-auto-addressing-enable" ;
    bacnet:value "442"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-default-gateway a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-default-gateway" ;
    bacnet:value "439"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-dhcp-lease-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-dhcp-lease-time" ;
    bacnet:value "443"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-dhcp-lease-time-remaining a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-dhcp-lease-time-remaining" ;
    bacnet:value "444"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-dhcp-server a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-dhcp-server" ;
    bacnet:value "445"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-dns-server a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-dns-server" ;
    bacnet:value "441"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-prefix-length a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-prefix-length" ;
    bacnet:value "437"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.ipv6-zone-index a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "ipv6-zone-index" ;
    bacnet:value "446"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.is-utc a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "is-utc" ;
    bacnet:value "344"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.key-sets a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "key-sets" ;
    bacnet:value "330"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.landing-call-control a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "landing-call-control" ;
    bacnet:value "471"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.landing-calls a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "landing-calls" ;
    bacnet:value "470"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.landing-door-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "landing-door-status" ;
    bacnet:value "472"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-access-event a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-access-event" ;
    bacnet:value "275"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-access-point a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-access-point" ;
    bacnet:value "276"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-command-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-command-time" ;
    bacnet:value "432"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-credential-added a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-credential-added" ;
    bacnet:value "277"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-credential-added-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-credential-added-time" ;
    bacnet:value "278"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-credential-removed a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-credential-removed" ;
    bacnet:value "279"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-credential-removed-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-credential-removed-time" ;
    bacnet:value "280"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-key-server a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-key-server" ;
    bacnet:value "331"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-notify-record a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-notify-record" ;
    bacnet:value "173"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-priority a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-priority" ;
    bacnet:value "369"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-restart-reason a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-restart-reason" ;
    bacnet:value "196"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-restore-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-restore-time" ;
    bacnet:value "157"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-state-change a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-state-change" ;
    bacnet:value "395"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.last-use-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "last-use-time" ;
    bacnet:value "281"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.life-safety-alarm-values a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "life-safety-alarm-values" ;
    bacnet:value "166"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.lighting-command a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "lighting-command" ;
    bacnet:value "380"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.lighting-command-default-priority a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "lighting-command-default-priority" ;
    bacnet:value "381"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.limit-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "limit-enable" ;
    bacnet:value "52"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.limit-monitoring-interval a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "limit-monitoring-interval" ;
    bacnet:value "182"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.link-speed a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "link-speed" ;
    bacnet:value "420"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.link-speed-autonegotiate a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "link-speed-autonegotiate" ;
    bacnet:value "422"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.link-speeds a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "link-speeds" ;
    bacnet:value "421"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.list-of-group-members a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "list-of-group-members" ;
    bacnet:value "53"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.list-of-object-property-references a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "list-of-object-property-references" ;
    bacnet:value "54"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.local-date a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "local-date" ;
    bacnet:value "56"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.local-forwarding-only a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "local-forwarding-only" ;
    bacnet:value "360"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.local-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "local-time" ;
    bacnet:value "57"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.location a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "location" ;
    bacnet:value "58"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.lock-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "lock-status" ;
    bacnet:value "233"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.lockout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "lockout" ;
    bacnet:value "282"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.lockout-relinquish-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "lockout-relinquish-time" ;
    bacnet:value "283"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.log-buffer a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "log-buffer" ;
    bacnet:value "131"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.log-device-object-property a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "log-device-object-property" ;
    bacnet:value "132"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.log-interval a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "log-interval" ;
    bacnet:value "134"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.logging-object a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "logging-object" ;
    bacnet:value "183"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.logging-record a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "logging-record" ;
    bacnet:value "184"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.logging-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "logging-type" ;
    bacnet:value "197"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.low-diff-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "low-diff-limit" ;
    bacnet:value "390"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.low-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "low-limit" ;
    bacnet:value "59"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.lower-deck a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "lower-deck" ;
    bacnet:value "473"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.mac-address a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "mac-address" ;
    bacnet:value "423"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.machine-room-id a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "machine-room-id" ;
    bacnet:value "474"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.maintenance-required a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "maintenance-required" ;
    bacnet:value "158"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.making-car-call a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "making-car-call" ;
    bacnet:value "475"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.manipulated-variable-reference a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "manipulated-variable-reference" ;
    bacnet:value "60"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.manual-slave-address-binding a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "manual-slave-address-binding" ;
    bacnet:value "170"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.masked-alarm-values a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "masked-alarm-values" ;
    bacnet:value "234"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.max-actual-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "max-actual-value" ;
    bacnet:value "382"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.max-apdu-length-accepted a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "max-apdu-length-accepted" ;
    bacnet:value "62"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.max-failed-attempts a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "max-failed-attempts" ;
    bacnet:value "285"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.max-info-frames a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "max-info-frames" ;
    bacnet:value "63"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.max-master a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "max-master" ;
    bacnet:value "64"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.max-pres-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "max-pres-value" ;
    bacnet:value "65"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.max-segments-accepted a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "max-segments-accepted" ;
    bacnet:value "167"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.maximum-output a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "maximum-output" ;
    bacnet:value "61"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.maximum-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "maximum-value" ;
    bacnet:value "135"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.maximum-value-timestamp a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "maximum-value-timestamp" ;
    bacnet:value "149"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.member-of a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "member-of" ;
    bacnet:value "159"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.member-status-flags a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "member-status-flags" ;
    bacnet:value "347"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.members a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "members" ;
    bacnet:value "286"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.min-actual-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "min-actual-value" ;
    bacnet:value "383"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.min-pres-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "min-pres-value" ;
    bacnet:value "69"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.minimum-off-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "minimum-off-time" ;
    bacnet:value "66"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.minimum-on-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "minimum-on-time" ;
    bacnet:value "67"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.minimum-output a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "minimum-output" ;
    bacnet:value "68"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.minimum-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "minimum-value" ;
    bacnet:value "136"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.minimum-value-timestamp a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "minimum-value-timestamp" ;
    bacnet:value "150"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "mode" ;
    bacnet:value "160"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.model-name a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "model-name" ;
    bacnet:value "70"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.modification-date a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "modification-date" ;
    bacnet:value "71"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.muster-point a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "muster-point" ;
    bacnet:value "287"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.negative-access-rules a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "negative-access-rules" ;
    bacnet:value "288"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.network-access-security-policies a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "network-access-security-policies" ;
    bacnet:value "332"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.network-interface-name a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "network-interface-name" ;
    bacnet:value "424"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.network-number a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "network-number" ;
    bacnet:value "425"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.network-number-quality a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "network-number-quality" ;
    bacnet:value "426"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.network-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "network-type" ;
    bacnet:value "427"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.next-stopping-floor a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "next-stopping-floor" ;
    bacnet:value "476"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.node-subtype a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "node-subtype" ;
    bacnet:value "207"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.node-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "node-type" ;
    bacnet:value "208"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.notification-class a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "notification-class" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.notification-threshold a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "notification-threshold" ;
    bacnet:value "137"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.notify-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "notify-type" ;
    bacnet:value "72"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.number-of-apdu-retries a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "number-of-apdu-retries" ;
    bacnet:value "73"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.number-of-authentication-policies a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "number-of-authentication-policies" ;
    bacnet:value "289"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.number-of-states a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "number-of-states" ;
    bacnet:value "74"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.object-identifier a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "object-identifier" ;
    bacnet:value "75"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.object-list a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "object-list" ;
    bacnet:value "76"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.object-name a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "object-name" ;
    bacnet:value "77"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.object-property-reference a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "object-property-reference" ;
    bacnet:value "78"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.object-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "object-type" ;
    bacnet:value "79"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.occupancy-count a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "occupancy-count" ;
    bacnet:value "290"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.occupancy-count-adjust a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "occupancy-count-adjust" ;
    bacnet:value "291"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.occupancy-count-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "occupancy-count-enable" ;
    bacnet:value "292"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.occupancy-lower-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "occupancy-lower-limit" ;
    bacnet:value "294"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.occupancy-lower-limit-enforced a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "occupancy-lower-limit-enforced" ;
    bacnet:value "295"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.occupancy-state a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "occupancy-state" ;
    bacnet:value "296"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.occupancy-upper-limit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "occupancy-upper-limit" ;
    bacnet:value "297"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.occupancy-upper-limit-enforced a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "occupancy-upper-limit-enforced" ;
    bacnet:value "298"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.operation-direction a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "operation-direction" ;
    bacnet:value "477"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.operation-expected a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "operation-expected" ;
    bacnet:value "161"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.optional a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "optional" ;
    bacnet:value "80"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.out-of-service a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "out-of-service" ;
    bacnet:value "81"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.output-units a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "output-units" ;
    bacnet:value "82"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.packet-reorder-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "packet-reorder-time" ;
    bacnet:value "333"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.passback-mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "passback-mode" ;
    bacnet:value "300"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.passback-timeout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "passback-timeout" ;
    bacnet:value "301"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.passenger-alarm a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "passenger-alarm" ;
    bacnet:value "478"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.polarity a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "polarity" ;
    bacnet:value "84"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.port-filter a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "port-filter" ;
    bacnet:value "363"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.positive-access-rules a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "positive-access-rules" ;
    bacnet:value "302"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.power a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "power" ;
    bacnet:value "384"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.power-mode a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "power-mode" ;
    bacnet:value "479"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.prescale a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "prescale" ;
    bacnet:value "185"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.present-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "present-value" ;
    bacnet:value "85"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.priority a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "priority" ;
    bacnet:value "86"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.priority-array a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "priority-array" ;
    bacnet:value "87"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.priority-for-writing a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "priority-for-writing" ;
    bacnet:value "88"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.process-identifier a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "process-identifier" ;
    bacnet:value "89"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.process-identifier-filter a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "process-identifier-filter" ;
    bacnet:value "361"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.profile-location a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "profile-location" ;
    bacnet:value "485"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.profile-name a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "profile-name" ;
    bacnet:value "168"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.program-change a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "program-change" ;
    bacnet:value "90"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.program-location a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "program-location" ;
    bacnet:value "91"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.program-state a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "program-state" ;
    bacnet:value "92"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.property-list a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "property-list" ;
    bacnet:value "371"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.proportional-constant a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "proportional-constant" ;
    bacnet:value "93"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.proportional-constant-units a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "proportional-constant-units" ;
    bacnet:value "94"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.protocol-level a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "protocol-level" ;
    bacnet:value "482"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.protocol-object-types-supported a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "protocol-object-types-supported" ;
    bacnet:value "96"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.protocol-revision a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "protocol-revision" ;
    bacnet:value "139"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.protocol-services-supported a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "protocol-services-supported" ;
    bacnet:value "97"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.protocol-version a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "protocol-version" ;
    bacnet:value "98"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.pulse-rate a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "pulse-rate" ;
    bacnet:value "186"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.read-only a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "read-only" ;
    bacnet:value "99"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.reason-for-disable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "reason-for-disable" ;
    bacnet:value "303"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.reason-for-halt a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "reason-for-halt" ;
    bacnet:value "100"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.recipient-list a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "recipient-list" ;
    bacnet:value "102"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.record-count a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "record-count" ;
    bacnet:value "141"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.records-since-notification a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "records-since-notification" ;
    bacnet:value "140"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.reference-port a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "reference-port" ;
    bacnet:value "483"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.registered-car-call a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "registered-car-call" ;
    bacnet:value "480"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.reliability a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "reliability" ;
    bacnet:value "103"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.reliability-evaluation-inhibit a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "reliability-evaluation-inhibit" ;
    bacnet:value "357"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.relinquish-default a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "relinquish-default" ;
    bacnet:value "104"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.represents a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "represents" ;
    bacnet:value "491"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.requested-shed-level a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "requested-shed-level" ;
    bacnet:value "218"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.requested-update-interval a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "requested-update-interval" ;
    bacnet:value "348"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.required a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "required" ;
    bacnet:value "105"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.resolution a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "resolution" ;
    bacnet:value "106"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.restart-notification-recipients a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "restart-notification-recipients" ;
    bacnet:value "202"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.restore-completion-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "restore-completion-time" ;
    bacnet:value "340"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.restore-preparation-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "restore-preparation-time" ;
    bacnet:value "341"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.routing-table a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "routing-table" ;
    bacnet:value "428"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.scale a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "scale" ;
    bacnet:value "187"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.scale-factor a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "scale-factor" ;
    bacnet:value "188"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.schedule-default a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "schedule-default" ;
    bacnet:value "174"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.secured-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "secured-status" ;
    bacnet:value "235"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.security-pdu-timeout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "security-pdu-timeout" ;
    bacnet:value "334"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.security-time-window a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "security-time-window" ;
    bacnet:value "335"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.segmentation-supported a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "segmentation-supported" ;
    bacnet:value "107"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.serial-number a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "serial-number" ;
    bacnet:value "372"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.setpoint a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "setpoint" ;
    bacnet:value "108"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.setpoint-reference a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "setpoint-reference" ;
    bacnet:value "109"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.setting a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "setting" ;
    bacnet:value "162"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.shed-duration a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "shed-duration" ;
    bacnet:value "219"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.shed-level-descriptions a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "shed-level-descriptions" ;
    bacnet:value "220"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.shed-levels a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "shed-levels" ;
    bacnet:value "221"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.silenced a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "silenced" ;
    bacnet:value "163"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.slave-address-binding a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "slave-address-binding" ;
    bacnet:value "171"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.slave-proxy-enable a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "slave-proxy-enable" ;
    bacnet:value "172"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.start-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "start-time" ;
    bacnet:value "142"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.state-change-values a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "state-change-values" ;
    bacnet:value "396"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.state-description a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "state-description" ;
    bacnet:value "222"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.state-text a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "state-text" ;
    bacnet:value "110"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.status-flags a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "status-flags" ;
    bacnet:value "111"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.stop-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "stop-time" ;
    bacnet:value "143"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.stop-when-full a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "stop-when-full" ;
    bacnet:value "144"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.strike-count a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "strike-count" ;
    bacnet:value "391"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.structured-object-list a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "structured-object-list" ;
    bacnet:value "209"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.subordinate-annotations a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "subordinate-annotations" ;
    bacnet:value "210"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.subordinate-list a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "subordinate-list" ;
    bacnet:value "211"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.subordinate-node-types a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "subordinate-node-types" ;
    bacnet:value "487"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.subordinate-relationships a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "subordinate-relationships" ;
    bacnet:value "489"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.subordinate-tags a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "subordinate-tags" ;
    bacnet:value "488"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.subscribed-recipients a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "subscribed-recipients" ;
    bacnet:value "362"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.supported-format-classes a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "supported-format-classes" ;
    bacnet:value "305"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.supported-formats a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "supported-formats" ;
    bacnet:value "304"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.supported-security-algorithms a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "supported-security-algorithms" ;
    bacnet:value "336"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.system-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "system-status" ;
    bacnet:value "112"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.tags a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "tags" ;
    bacnet:value "486"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.threat-authority a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "threat-authority" ;
    bacnet:value "306"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.threat-level a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "threat-level" ;
    bacnet:value "307"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.time-delay a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "time-delay" ;
    bacnet:value "113"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.time-delay-normal a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "time-delay-normal" ;
    bacnet:value "356"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.time-of-active-time-reset a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "time-of-active-time-reset" ;
    bacnet:value "114"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.time-of-device-restart a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "time-of-device-restart" ;
    bacnet:value "203"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.time-of-state-count-reset a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "time-of-state-count-reset" ;
    bacnet:value "115"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.time-of-strike-count-reset a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "time-of-strike-count-reset" ;
    bacnet:value "392"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.time-synchronization-interval a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "time-synchronization-interval" ;
    bacnet:value "204"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.time-synchronization-recipients a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "time-synchronization-recipients" ;
    bacnet:value "116"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.timer-running a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "timer-running" ;
    bacnet:value "397"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.timer-state a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "timer-state" ;
    bacnet:value "398"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.total-record-count a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "total-record-count" ;
    bacnet:value "145"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.trace-flag a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "trace-flag" ;
    bacnet:value "308"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.tracking-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "tracking-value" ;
    bacnet:value "164"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.transaction-notification-class a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "transaction-notification-class" ;
    bacnet:value "309"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.transition a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "transition" ;
    bacnet:value "385"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.trigger a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "trigger" ;
    bacnet:value "205"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.units a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "units" ;
    bacnet:value "117"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.update-interval a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "update-interval" ;
    bacnet:value "118"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.update-key-set-timeout a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "update-key-set-timeout" ;
    bacnet:value "337"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.update-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "update-time" ;
    bacnet:value "189"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.user-external-identifier a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "user-external-identifier" ;
    bacnet:value "310"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.user-information-reference a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "user-information-reference" ;
    bacnet:value "311"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.user-name a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "user-name" ;
    bacnet:value "317"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.user-type a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "user-type" ;
    bacnet:value "318"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.uses-remaining a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "uses-remaining" ;
    bacnet:value "319"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.utc-offset a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "utc-offset" ;
    bacnet:value "119"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.utc-time-synchronization-recipients a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "utc-time-synchronization-recipients" ;
    bacnet:value "206"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.valid-samples a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "valid-samples" ;
    bacnet:value "146"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.value-before-change a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "value-before-change" ;
    bacnet:value "190"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.value-change-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "value-change-time" ;
    bacnet:value "192"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.value-set a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "value-set" ;
    bacnet:value "191"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.value-source a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "value-source" ;
    bacnet:value "433"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.value-source-array a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "value-source-array" ;
    bacnet:value "434"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.variance-value a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "variance-value" ;
    bacnet:value "151"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.vendor-identifier a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "vendor-identifier" ;
    bacnet:value "120"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.vendor-name a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "vendor-name" ;
    bacnet:value "121"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.verification-time a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "verification-time" ;
    bacnet:value "326"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.virtual-mac-address-table a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "virtual-mac-address-table" ;
    bacnet:value "429"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.vt-classes-supported a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "vt-classes-supported" ;
    bacnet:value "122"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.weekly-schedule a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "weekly-schedule" ;
    bacnet:value "123"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.window-interval a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "window-interval" ;
    bacnet:value "147"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.window-samples a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "window-samples" ;
    bacnet:value "148"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.write-status a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "write-status" ;
    bacnet:value "370"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.zone-from a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "zone-from" ;
    bacnet:value "320"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.zone-members a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "zone-members" ;
    bacnet:value "165"^^xsd:nonNegativeInteger .

bacnet:BACnetPropertyIdentifier.zone-to a bacnet:BACnetPropertyIdentifierEnumerationValue ;
    bacnet:name "zone-to" ;
    bacnet:value "321"^^xsd:nonNegativeInteger .

bacnet:BACnetProtocolLevel.bacnet-application a bacnet:BACnetProtocolLevelEnumerationValue ;
    bacnet:name "bacnet-application" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetProtocolLevel.non-bacnet-application a bacnet:BACnetProtocolLevelEnumerationValue ;
    bacnet:name "non-bacnet-application" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetProtocolLevel.physical a bacnet:BACnetProtocolLevelEnumerationValue ;
    bacnet:name "physical" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetProtocolLevel.protocol a bacnet:BACnetProtocolLevelEnumerationValue ;
    bacnet:name "protocol" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.buffer-overflow a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "buffer-overflow" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.inconsistent-parameters a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "inconsistent-parameters" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.invalid-parameter-data-type a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "invalid-parameter-data-type" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.invalid-tag a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "invalid-tag" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.missing-required-parameter a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "missing-required-parameter" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.other a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "other" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.parameter-out-of-range a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "parameter-out-of-range" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.too-many-arguments a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "too-many-arguments" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.undefined-enumeration a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "undefined-enumeration" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetRejectReason.unrecognized-service a bacnet:BACnetRejectReasonEnumerationValue ;
    bacnet:name "unrecognized-service" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.adjusted-by a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "adjusted-by" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.adjusts a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "adjusts" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.commanded-by a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "commanded-by" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.commands a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "commands" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.contained-by a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "contained-by" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.contains a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "contains" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.default a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "default" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.egress a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "egress" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.ingress a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "ingress" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-air a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-air" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-cool-air a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-cool-air" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-cool-water a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-cool-water" ;
    bacnet:value "27"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-gas a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-gas" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-hot-air a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-hot-air" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-hot-water a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-hot-water" ;
    bacnet:value "25"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-power a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-power" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-steam a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-steam" ;
    bacnet:value "29"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.receives-water a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "receives-water" ;
    bacnet:value "23"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-air a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-air" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-cool-air a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-cool-air" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-cool-water a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-cool-water" ;
    bacnet:value "26"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-gas a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-gas" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-hot-air a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-hot-air" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-hot-water a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-hot-water" ;
    bacnet:value "24"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-power a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-power" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-steam a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-steam" ;
    bacnet:value "28"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.supplies-water a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "supplies-water" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.unknown a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.used-by a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "used-by" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetRelationship.uses a bacnet:BACnetRelationshipEnumerationValue ;
    bacnet:name "uses" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.activation-failure a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "activation-failure" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.communication-failure a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "communication-failure" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.configuration-error a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "configuration-error" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.faults-listed a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "faults-listed" ;
    bacnet:value "23"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.lamp-failure a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "lamp-failure" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.member-fault a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "member-fault" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.monitored-object-fault a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "monitored-object-fault" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.multi-state-fault a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "multi-state-fault" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.no-fault-detected a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "no-fault-detected" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.no-output a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "no-output" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.no-sensor a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "no-sensor" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.open-loop a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "open-loop" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.over-range a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "over-range" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.process-error a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "process-error" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.proprietary-command-failure a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "proprietary-command-failure" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.referenced-object-fault a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "referenced-object-fault" ;
    bacnet:value "24"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.renew-dhcp-failure a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "renew-dhcp-failure" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.renew-fd-registration-failure a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "renew-fd-registration-failure" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.restart-auto-negotiation-failure a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "restart-auto-negotiation-failure" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.restart-failure a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "restart-failure" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.shorted-loop a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "shorted-loop" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.tripped a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "tripped" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.under-range a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "under-range" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetReliability.unreliable-other a bacnet:BACnetReliabilityEnumerationValue ;
    bacnet:name "unreliable-other" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.activate-changes a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "activate-changes" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.coldstart a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "coldstart" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.detected-power-lost a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "detected-power-lost" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.detected-powered-off a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "detected-powered-off" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.hardware-watchdog a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "hardware-watchdog" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.software-watchdog a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "software-watchdog" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.suspended a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "suspended" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.unknown a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "unknown" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetRestartReason.warmstart a bacnet:BACnetRestartReasonEnumerationValue ;
    bacnet:name "warmstart" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetResultFlags.first-item a bacnet:BACnetResultFlagsNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "first-item" .

bacnet:BACnetResultFlags.last-item a bacnet:BACnetResultFlagsNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "last-item" .

bacnet:BACnetResultFlags.more-items a bacnet:BACnetResultFlagsNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "more-items" .

bacnet:BACnetSecurityKeySet a sh:NodeShape ;
    rdfs:label "BACnetSecurityKeySet" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:key-ids ],
        [ a sh:PropertyShape ;
            bacnet:comment "UTC time, all wild if unknown"@en ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:expiration-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            bacnet:comment "UTC time, all wild if unknown"@en ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:activation-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            bacnet:comment "0 if key set is not configured"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:key-revision ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetKeyIdentifier ;
                        sh:path ( bacnet:key-ids [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:key-ids ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:key-ids ] ] ) .

bacnet:BACnetSecurityLevel.encrypted a bacnet:BACnetSecurityLevelEnumerationValue ;
    bacnet:name "encrypted" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityLevel.encrypted-end-to-end a bacnet:BACnetSecurityLevelEnumerationValue ;
    bacnet:name "encrypted-end-to-end" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityLevel.incapable a bacnet:BACnetSecurityLevelEnumerationValue ;
    bacnet:name "incapable" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityLevel.plain a bacnet:BACnetSecurityLevelEnumerationValue ;
    bacnet:name "plain" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityLevel.signed a bacnet:BACnetSecurityLevelEnumerationValue ;
    bacnet:name "signed" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityLevel.signed-end-to-end a bacnet:BACnetSecurityLevelEnumerationValue ;
    bacnet:name "signed-end-to-end" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityPolicy.encrypted-trusted a bacnet:BACnetSecurityPolicyEnumerationValue ;
    bacnet:name "encrypted-trusted" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityPolicy.plain-non-trusted a bacnet:BACnetSecurityPolicyEnumerationValue ;
    bacnet:name "plain-non-trusted" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityPolicy.plain-trusted a bacnet:BACnetSecurityPolicyEnumerationValue ;
    bacnet:name "plain-trusted" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetSecurityPolicy.signed-trusted a bacnet:BACnetSecurityPolicyEnumerationValue ;
    bacnet:name "signed-trusted" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetSegmentation.no-segmentation a bacnet:BACnetSegmentationEnumerationValue ;
    bacnet:name "no-segmentation" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetSegmentation.segmented-both a bacnet:BACnetSegmentationEnumerationValue ;
    bacnet:name "segmented-both" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetSegmentation.segmented-receive a bacnet:BACnetSegmentationEnumerationValue ;
    bacnet:name "segmented-receive" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetSegmentation.segmented-transmit a bacnet:BACnetSegmentationEnumerationValue ;
    bacnet:name "segmented-transmit" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetServicesSupported.acknowledge-alarm a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "acknowledge-alarm" .

bacnet:BACnetServicesSupported.add-list-element a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "8"^^xsd:nonNegativeInteger ;
    bacnet:name "add-list-element" .

bacnet:BACnetServicesSupported.atomic-read-file a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "6"^^xsd:nonNegativeInteger ;
    bacnet:name "atomic-read-file" .

bacnet:BACnetServicesSupported.atomic-write-file a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "7"^^xsd:nonNegativeInteger ;
    bacnet:name "atomic-write-file" .

bacnet:BACnetServicesSupported.confirmed-cov-notification a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "confirmed-cov-notification" .

bacnet:BACnetServicesSupported.confirmed-cov-notification-multiple a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "42"^^xsd:nonNegativeInteger ;
    bacnet:name "confirmed-cov-notification-multiple" .

bacnet:BACnetServicesSupported.confirmed-event-notification a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "confirmed-event-notification" .

bacnet:BACnetServicesSupported.confirmed-private-transfer a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "18"^^xsd:nonNegativeInteger ;
    bacnet:name "confirmed-private-transfer" .

bacnet:BACnetServicesSupported.confirmed-text-message a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "19"^^xsd:nonNegativeInteger ;
    bacnet:name "confirmed-text-message" .

bacnet:BACnetServicesSupported.create-object a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "10"^^xsd:nonNegativeInteger ;
    bacnet:name "create-object" .

bacnet:BACnetServicesSupported.delete-object a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "11"^^xsd:nonNegativeInteger ;
    bacnet:name "delete-object" .

bacnet:BACnetServicesSupported.device-communication-control a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "17"^^xsd:nonNegativeInteger ;
    bacnet:name "device-communication-control" .

bacnet:BACnetServicesSupported.get-alarm-summary a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "3"^^xsd:nonNegativeInteger ;
    bacnet:name "get-alarm-summary" .

bacnet:BACnetServicesSupported.get-enrollment-summary a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "4"^^xsd:nonNegativeInteger ;
    bacnet:name "get-enrollment-summary" .

bacnet:BACnetServicesSupported.get-event-information a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "39"^^xsd:nonNegativeInteger ;
    bacnet:name "get-event-information" .

bacnet:BACnetServicesSupported.i-am a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "26"^^xsd:nonNegativeInteger ;
    bacnet:name "i-am" .

bacnet:BACnetServicesSupported.i-have a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "27"^^xsd:nonNegativeInteger ;
    bacnet:name "i-have" .

bacnet:BACnetServicesSupported.life-safety-operation a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "37"^^xsd:nonNegativeInteger ;
    bacnet:name "life-safety-operation" .

bacnet:BACnetServicesSupported.read-property a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "12"^^xsd:nonNegativeInteger ;
    bacnet:name "read-property" .

bacnet:BACnetServicesSupported.read-property-multiple a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "14"^^xsd:nonNegativeInteger ;
    bacnet:name "read-property-multiple" .

bacnet:BACnetServicesSupported.read-range a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "35"^^xsd:nonNegativeInteger ;
    bacnet:name "read-range" .

bacnet:BACnetServicesSupported.reinitialize-device a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "20"^^xsd:nonNegativeInteger ;
    bacnet:name "reinitialize-device" .

bacnet:BACnetServicesSupported.remove-list-element a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "9"^^xsd:nonNegativeInteger ;
    bacnet:name "remove-list-element" .

bacnet:BACnetServicesSupported.subscribe-cov a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "5"^^xsd:nonNegativeInteger ;
    bacnet:name "subscribe-cov" .

bacnet:BACnetServicesSupported.subscribe-cov-property a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "38"^^xsd:nonNegativeInteger ;
    bacnet:name "subscribe-cov-property" .

bacnet:BACnetServicesSupported.subscribe-cov-property-multiple a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "41"^^xsd:nonNegativeInteger ;
    bacnet:name "subscribe-cov-property-multiple" .

bacnet:BACnetServicesSupported.time-synchronization a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "32"^^xsd:nonNegativeInteger ;
    bacnet:name "time-synchronization" .

bacnet:BACnetServicesSupported.unconfirmed-cov-notification a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "28"^^xsd:nonNegativeInteger ;
    bacnet:name "unconfirmed-cov-notification" .

bacnet:BACnetServicesSupported.unconfirmed-cov-notification-multiple a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "43"^^xsd:nonNegativeInteger ;
    bacnet:name "unconfirmed-cov-notification-multiple" .

bacnet:BACnetServicesSupported.unconfirmed-event-notification a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "29"^^xsd:nonNegativeInteger ;
    bacnet:name "unconfirmed-event-notification" .

bacnet:BACnetServicesSupported.unconfirmed-private-transfer a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "30"^^xsd:nonNegativeInteger ;
    bacnet:name "unconfirmed-private-transfer" .

bacnet:BACnetServicesSupported.unconfirmed-text-message a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "31"^^xsd:nonNegativeInteger ;
    bacnet:name "unconfirmed-text-message" .

bacnet:BACnetServicesSupported.utc-time-synchronization a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "36"^^xsd:nonNegativeInteger ;
    bacnet:name "utc-time-synchronization" .

bacnet:BACnetServicesSupported.vt-close a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "22"^^xsd:nonNegativeInteger ;
    bacnet:name "vt-close" .

bacnet:BACnetServicesSupported.vt-data a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "23"^^xsd:nonNegativeInteger ;
    bacnet:name "vt-data" .

bacnet:BACnetServicesSupported.vt-open a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "21"^^xsd:nonNegativeInteger ;
    bacnet:name "vt-open" .

bacnet:BACnetServicesSupported.who-has a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "33"^^xsd:nonNegativeInteger ;
    bacnet:name "who-has" .

bacnet:BACnetServicesSupported.who-is a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "34"^^xsd:nonNegativeInteger ;
    bacnet:name "who-is" .

bacnet:BACnetServicesSupported.write-group a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "40"^^xsd:nonNegativeInteger ;
    bacnet:name "write-group" .

bacnet:BACnetServicesSupported.write-property a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "15"^^xsd:nonNegativeInteger ;
    bacnet:name "write-property" .

bacnet:BACnetServicesSupported.write-property-multiple a bacnet:BACnetServicesSupportedNamedBits ;
    bacnet:bit "16"^^xsd:nonNegativeInteger ;
    bacnet:name "write-property-multiple" .

bacnet:BACnetShedState.shed-compliant a bacnet:BACnetShedStateEnumerationValue ;
    bacnet:name "shed-compliant" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetShedState.shed-inactive a bacnet:BACnetShedStateEnumerationValue ;
    bacnet:name "shed-inactive" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetShedState.shed-non-compliant a bacnet:BACnetShedStateEnumerationValue ;
    bacnet:name "shed-non-compliant" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetShedState.shed-request-pending a bacnet:BACnetShedStateEnumerationValue ;
    bacnet:name "shed-request-pending" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetSilencedState.all-silenced a bacnet:BACnetSilencedStateEnumerationValue ;
    bacnet:name "all-silenced" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetSilencedState.audible-silenced a bacnet:BACnetSilencedStateEnumerationValue ;
    bacnet:name "audible-silenced" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetSilencedState.unsilenced a bacnet:BACnetSilencedStateEnumerationValue ;
    bacnet:name "unsilenced" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetSilencedState.visible-silenced a bacnet:BACnetSilencedStateEnumerationValue ;
    bacnet:name "visible-silenced" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetStatusFlags.fault a bacnet:BACnetStatusFlagsNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "fault" .

bacnet:BACnetStatusFlags.in-alarm a bacnet:BACnetStatusFlagsNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "in-alarm" .

bacnet:BACnetStatusFlags.out-of-service a bacnet:BACnetStatusFlagsNamedBits ;
    bacnet:bit "3"^^xsd:nonNegativeInteger ;
    bacnet:name "out-of-service" .

bacnet:BACnetStatusFlags.overridden a bacnet:BACnetStatusFlagsNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "overridden" .

bacnet:BACnetTimerState.expired a bacnet:BACnetTimerStateEnumerationValue ;
    bacnet:name "expired" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerState.idle a bacnet:BACnetTimerStateEnumerationValue ;
    bacnet:name "idle" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerState.running a bacnet:BACnetTimerStateEnumerationValue ;
    bacnet:name "running" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerTransition.expired-to-idle a bacnet:BACnetTimerTransitionEnumerationValue ;
    bacnet:name "expired-to-idle" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerTransition.expired-to-running a bacnet:BACnetTimerTransitionEnumerationValue ;
    bacnet:name "expired-to-running" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerTransition.forced-to-expired a bacnet:BACnetTimerTransitionEnumerationValue ;
    bacnet:name "forced-to-expired" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerTransition.idle-to-running a bacnet:BACnetTimerTransitionEnumerationValue ;
    bacnet:name "idle-to-running" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerTransition.none a bacnet:BACnetTimerTransitionEnumerationValue ;
    bacnet:name "none" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerTransition.running-to-expired a bacnet:BACnetTimerTransitionEnumerationValue ;
    bacnet:name "running-to-expired" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerTransition.running-to-idle a bacnet:BACnetTimerTransitionEnumerationValue ;
    bacnet:name "running-to-idle" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetTimerTransition.running-to-running a bacnet:BACnetTimerTransitionEnumerationValue ;
    bacnet:name "running-to-running" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.i-am a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "i-am" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.i-have a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "i-have" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.time-synchronization a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "time-synchronization" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.unconfirmed-cov-notification a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "unconfirmed-cov-notification" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.unconfirmed-cov-notification-multiple a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "unconfirmed-cov-notification-multiple" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.unconfirmed-event-notification a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "unconfirmed-event-notification" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.unconfirmed-private-transfer a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "unconfirmed-private-transfer" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.unconfirmed-text-message a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "unconfirmed-text-message" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.utc-time-synchronization a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "utc-time-synchronization" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.who-has a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "who-has" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.who-is a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "who-is" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetUnconfirmedServiceChoice.write-group a bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
    bacnet:name "write-group" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetVTClass.ansi-x3-64 a bacnet:BACnetVTClassEnumerationValue ;
    bacnet:name "ansi-x3-64" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetVTClass.dec-vt100 a bacnet:BACnetVTClassEnumerationValue ;
    bacnet:name "dec-vt100" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetVTClass.dec-vt220 a bacnet:BACnetVTClassEnumerationValue ;
    bacnet:name "dec-vt220" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetVTClass.dec-vt52 a bacnet:BACnetVTClassEnumerationValue ;
    bacnet:name "dec-vt52" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetVTClass.default-terminal a bacnet:BACnetVTClassEnumerationValue ;
    bacnet:name "default-terminal" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetVTClass.hp-700-94 a bacnet:BACnetVTClassEnumerationValue ;
    bacnet:name "hp-700-94" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetVTClass.ibm-3130 a bacnet:BACnetVTClassEnumerationValue ;
    bacnet:name "ibm-3130" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetWeekNDay a sh:NodeShape ;
    rdfs:label "BACnetWeekNDay" ;
    bacnet:comment "first octet: month (1..14), 1 =January, 13 = odd months, 14 = even months, X'FF' = any month; second octet: weekOfMonth where: 1 = days numbered 1-7, 2 = days numbered 8-14, 3 = days numbered 15-21, 4 = days numbered 22-28, 5 = days numbered 29-31, 6 = last 7 days of this month, X'FF' = any week of this month; third octet: dayOfWeek (1..7) where 1 = Monday... 7 = Sunday, X'FF' = any day of week"@en ;
    bacnet:maximumLength 3 ;
    bacnet:minimumLength 3 ;
    rdfs:subClassOf bacnet:OctetString .

bacnet:BACnetWriteStatus.failed a bacnet:BACnetWriteStatusEnumerationValue ;
    bacnet:name "failed" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetWriteStatus.idle a bacnet:BACnetWriteStatusEnumerationValue ;
    bacnet:name "idle" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetWriteStatus.in-progress a bacnet:BACnetWriteStatusEnumerationValue ;
    bacnet:name "in-progress" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetWriteStatus.successful a bacnet:BACnetWriteStatusEnumerationValue ;
    bacnet:name "successful" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:ConfirmedCOVNotificationMultipleRequest.ListOfCovNotifications a bacnet:SequenceOf ;
    bacnet:memberType bacnet:ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence .

bacnet:ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValues a bacnet:SequenceOf ;
    bacnet:memberType bacnet:ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValuesSequence .

bacnet:CreateObjectACK a bacnet:ObjectIdentifier .

bacnet:GetAlarmSummaryACK a bacnet:SequenceOf ;
    bacnet:memberType bacnet:GetAlarmSummaryACKSequence .

bacnet:GetEnrollmentSummaryACK a bacnet:SequenceOf ;
    bacnet:memberType bacnet:GetEnrollmentSummaryACKSequence .

bacnet:GetEventInformationACK.ListOfEventSummaries a bacnet:SequenceOf ;
    bacnet:memberType bacnet:GetEventInformationACK.ListOfEventSummariesSequence .

bacnet:ReadAccessResult.ListOfResults a bacnet:SequenceOf ;
    bacnet:memberType bacnet:ReadAccessResult.ListOfResultsSequence .

bacnet:SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecifications a bacnet:SequenceOf ;
    bacnet:memberType bacnet:SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence .

bacnet:SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferences a bacnet:SequenceOf ;
    bacnet:memberType bacnet:SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferencesSequence .

bacnet:UnconfirmedCOVNotificationMultipleRequest a sh:NodeShape ;
    rdfs:label "UnconfirmedCOVNotificationMultipleRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-cov-notifications ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:initiating-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:subscriber-process-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence ;
                        sh:path ( bacnet:list-of-cov-notifications [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-cov-notifications ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-cov-notifications ] ] ) .

bacnet:UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotifications a bacnet:SequenceOf ;
    bacnet:memberType bacnet:UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence .

bacnet:UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValues a bacnet:SequenceOf ;
    bacnet:memberType bacnet:UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValuesSequence .

bacnet:AcknowledgeAlarmRequest a sh:NodeShape ;
    rdfs:label "AcknowledgeAlarmRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state-acknowledged ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:acknowledgment-source ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:acknowledging-process-identifier ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-of-acknowledgment ] .

bacnet:AddListElementRequest a sh:NodeShape ;
    rdfs:label "AddListElementRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-elements ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ] .

bacnet:AtomicReadFileACK a sh:NodeShape ;
    rdfs:label "AtomicReadFileACK" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:AtomicReadFileACK.AccessMethod ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-method ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:end-of-file ] .

bacnet:AtomicReadFileACK.AccessMethod a sh:NodeShape ;
    rdfs:label "AtomicReadFileACK.AccessMethod" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicReadFileACK.AccessMethod.StreamAccess ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:stream-access ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicReadFileACK.AccessMethod.RecordAccess ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:record-access ] ] ) .

bacnet:AtomicReadFileACK.AccessMethod.RecordAccess a sh:NodeShape ;
    rdfs:label "AtomicReadFileACK.AccessMethod.RecordAccess" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-record-data ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:returned-record-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-start-record ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:hexBinary ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:file-record-data [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:file-record-data ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:file-record-data ] ] ) .

bacnet:AtomicReadFileACK.AccessMethod.StreamAccess a sh:NodeShape ;
    rdfs:label "AtomicReadFileACK.AccessMethod.StreamAccess" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-data ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-start-position ] .

bacnet:AtomicReadFileRequest a sh:NodeShape ;
    rdfs:label "AtomicReadFileRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:AtomicReadFileRequest.AccessMethod ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-method ] .

bacnet:AtomicReadFileRequest.AccessMethod a sh:NodeShape ;
    rdfs:label "AtomicReadFileRequest.AccessMethod" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicReadFileRequest.AccessMethod.StreamAccess ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:stream-access ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicReadFileRequest.AccessMethod.RecordAccess ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:record-access ] ] ) .

bacnet:AtomicReadFileRequest.AccessMethod.RecordAccess a sh:NodeShape ;
    rdfs:label "AtomicReadFileRequest.AccessMethod.RecordAccess" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-start-record ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:requested-record-count ] .

bacnet:AtomicReadFileRequest.AccessMethod.StreamAccess a sh:NodeShape ;
    rdfs:label "AtomicReadFileRequest.AccessMethod.StreamAccess" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:requested-octet-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-start-position ] .

bacnet:AtomicWriteFileACK a sh:NodeShape ;
    rdfs:label "AtomicWriteFileACK" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:file-start-position ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:file-start-record ] ] ) .

bacnet:AtomicWriteFileRequest a sh:NodeShape ;
    rdfs:label "AtomicWriteFileRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:AtomicWriteFileRequest.AccessMethod ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-method ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:AtomicWriteFileRequest.AccessMethod a sh:NodeShape ;
    rdfs:label "AtomicWriteFileRequest.AccessMethod" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicWriteFileRequest.AccessMethod.StreamAccess ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:stream-access ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicWriteFileRequest.AccessMethod.RecordAccess ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:record-access ] ] ) .

bacnet:AtomicWriteFileRequest.AccessMethod.RecordAccess a sh:NodeShape ;
    rdfs:label "AtomicWriteFileRequest.AccessMethod.RecordAccess" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-record-data ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:record-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-start-record ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:hexBinary ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:file-record-data [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:file-record-data ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:file-record-data ] ] ) .

bacnet:AtomicWriteFileRequest.AccessMethod.StreamAccess a sh:NodeShape ;
    rdfs:label "AtomicWriteFileRequest.AccessMethod.StreamAccess" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-data ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-start-position ] .

bacnet:BACnetAbortPDU a sh:NodeShape ;
    rdfs:label "BACnetAbortPDU" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:server ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAbortReasonEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:abort-reason ],
        [ a sh:PropertyShape ;
            sh:hasValue "7"^^xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:pdu-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:original-invoke-id ] .

bacnet:BACnetAccumulatorRecord a sh:NodeShape ;
    rdfs:label "BACnetAccumulatorRecord" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:accumulated-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:accumulator-status ] .

bacnet:BACnetActionCommand a sh:NodeShape ;
    rdfs:label "BACnetActionCommand" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:write-successful ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only when property is commandable"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:post-delay ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:quit-on-failure ] .

bacnet:BACnetActionList a sh:NodeShape ;
    rdfs:label "BACnetActionList" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:action ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetActionCommand ;
                        sh:path ( bacnet:action [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:action ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:action ] ] ) .

bacnet:BACnetAssignedAccessRights a sh:NodeShape ;
    rdfs:label "BACnetAssignedAccessRights" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:assigned-access-rights ] .

bacnet:BACnetAssignedLandingCalls a sh:NodeShape ;
    rdfs:label "BACnetAssignedLandingCalls" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:landing-calls ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAssignedLandingCalls.LandingCallsSequence ;
                        sh:path ( bacnet:landing-calls [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:landing-calls ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:landing-calls ] ] ) .

bacnet:BACnetAuditLogQueryParameters.BySource a sh:NodeShape ;
    rdfs:label "BACnetAuditLogQueryParameters.BySource" ;
    bacnet:x-error "operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:successful-actions-only ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAddress ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:source-device-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:source-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:source-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:BACnetAuditLogQueryParameters.ByTarget a sh:NodeShape ;
    rdfs:label "BACnetAuditLogQueryParameters.ByTarget" ;
    bacnet:x-error "operations missing property shape: BACnetAuditOperationFlags" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-array-index ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:successful-actions-only ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAddress ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-device-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:target-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-property-identifier ] .

bacnet:BACnetAuditLogRecord.LogDatum a sh:NodeShape ;
    rdfs:label "BACnetAuditLogRecord.LogDatum" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-status ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:BACnetLogStatusNamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:log-status [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:log-status ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:log-status ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAuditNotification ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:audit-notification ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time-change ] ] ) .

bacnet:BACnetAuditNotification a sh:NodeShape ;
    rdfs:label "BACnetAuditNotification" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:source-object ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-timestamp ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:source-timestamp ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditOperationEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipient ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:source-device ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipient ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:target-device ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-comment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:source-user-id ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-property ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:Error ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:result ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-object ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:source-comment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:invoke-id ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:source-user-role ] .

bacnet:BACnetAuthenticationFactorFormat a sh:NodeShape ;
    rdfs:label "BACnetAuthenticationFactorFormat" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:format-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-format ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ] .

bacnet:BACnetAuthenticationPolicy a sh:NodeShape ;
    rdfs:label "BACnetAuthenticationPolicy" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timeout ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:order-enforced ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:policy ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetAuthenticationPolicy.PolicySequence ;
                        sh:path ( bacnet:policy [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:policy ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:policy ] ] ) .

bacnet:BACnetBDTEntry a sh:NodeShape ;
    rdfs:label "BACnetBDTEntry" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "shall be present if Bacnet/IP, and absent for BACnet/IPv6"@en ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:broadcast-mask ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetHostNPort ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:bbmd-address ] .

bacnet:BACnetCOVMultipleSubscription a sh:NodeShape ;
    rdfs:label "BACnetCOVMultipleSubscription" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipientProcess ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:recipient ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-notification-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-cov-subscription-specifications ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence ;
                        sh:path ( bacnet:list-of-cov-subscription-specifications [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-cov-subscription-specifications ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-cov-subscription-specifications ] ] ) .

bacnet:BACnetCOVSubscription a sh:NodeShape ;
    rdfs:label "BACnetCOVSubscription" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with monitored properties with a numeric datatype"@en ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-property-reference ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipientProcess ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:recipient ] .

bacnet:BACnetComplexACKPDU a sh:NodeShape ;
    rdfs:label "BACnetComplexACKPDU" ;
    bacnet:comment ""@en ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:segmented-message ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:more-follows ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetConfirmedServiceACK ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-ack ],
        [ a sh:PropertyShape ;
            sh:hasValue "3"^^xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:pdu-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-ack-choice ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:invoke-id ],
        [ a sh:PropertyShape ;
            bacnet:comment "only if segmented messages"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:sequence-number ],
        [ a sh:PropertyShape ;
            bacnet:comment "only if segmented messages"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:proposed-window-size ] .

bacnet:BACnetConfirmedRequestPDU a sh:NodeShape ;
    rdfs:label "BACnetConfirmedRequestPDU" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "as per 20.1.2.5"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-apdu-length-accepted ],
        [ a sh:PropertyShape ;
            bacnet:comment "as per 20.1.2.4"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-segments-accepted ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:segmented-response-accepted ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:segmented-message ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:more-follows ],
        [ a sh:PropertyShape ;
            bacnet:comment "only if segmented messages"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:sequence-number ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetConfirmedServiceRequest ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:service-request ],
        [ a sh:PropertyShape ;
            sh:hasValue "0"^^xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:pdu-type ],
        [ a sh:PropertyShape ;
            bacnet:comment "only if segmented messages"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:proposed-window-size ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-choice ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:invoke-id ] .

bacnet:BACnetConfirmedServiceACK a sh:NodeShape ;
    rdfs:label "BACnetConfirmedServiceACK" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:get-alarm-summary ] ;
                sh:xone ( [ sh:property [ sh:minCount 1 ;
                                    sh:node bacnet:GetAlarmSummaryACKSequence ;
                                    sh:path ( bacnet:get-alarm-summary [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:get-alarm-summary ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:get-alarm-summary ] ] ) ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:get-enrollment-summary ] ;
                sh:xone ( [ sh:property [ sh:minCount 1 ;
                                    sh:node bacnet:GetEnrollmentSummaryACKSequence ;
                                    sh:path ( bacnet:get-enrollment-summary [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:get-enrollment-summary ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:get-enrollment-summary ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:GetEventInformationACK ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:get-event-information ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicReadFileACK ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:atomic-read-file ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:node bacnet:AtomicWriteFileACK ;
                        sh:path bacnet:atomic-write-file ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:create-object ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadPropertyACK ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-property ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadPropertyMultipleACK ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-property-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadRangeACK ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ConfirmedPrivateTransferACK ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-private-transfer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:VTOpenACK ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-open ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:VTDataACK ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-data ] ] ) .

bacnet:BACnetConfirmedServiceRequest a sh:NodeShape ;
    rdfs:label "BACnetConfirmedServiceRequest" ;
    bacnet:comment "Other services will be added as they are defined. All choice values in this production are reserved for prototype by ASHRAE. Proprietary extensions are made by using the ConfirmedPrivateTransfer service. See Clause 23."@en ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AcknowledgeAlarmRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:acknowledge-alarm ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ConfirmedCOVNotificationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-cov-notification ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ConfirmedCOVNotificationMultipleRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-cov-notification-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ConfirmedEventNotificationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-event-notification ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:GetEnrollmentSummaryRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:get-enrollment-summary ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:GetEventInformationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:get-event-information ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:LifeSafetyOperationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:life-safety-operation ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:SubscribeCOVRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:subscribe-cov ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:SubscribeCOVPropertyRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:subscribe-cov-property ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:SubscribeCOVPropertyMultipleRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:subscribe-cov-property-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicReadFileRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:atomic-read-file ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AtomicWriteFileRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:atomic-write-file ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:AddListElementRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:add-list-element ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:RemoveListElementRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:remove-list-element ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:CreateObjectRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:create-object ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:DeleteObjectRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:delete-object ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadPropertyRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-property ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadPropertyMultipleRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-property-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadRangeRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:WritePropertyRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:write-property ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:WritePropertyMultipleRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:write-property-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:DeviceCommunicationControlRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:device-communication-control ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ConfirmedPrivateTransferRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-private-transfer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ConfirmedTextMessageRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-text-message ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReinitializeDeviceRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:reinitialize-device ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:VTOpenRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-open ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:VTCloseRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-close ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:VTDataRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-data ] ] ) .

bacnet:BACnetCredentialAuthenticationFactor a sh:NodeShape ;
    rdfs:label "BACnetCredentialAuthenticationFactor" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuthenticationFactor ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:authentication-factor ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccessAuthenticationFactorDisableEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:disable ] .

bacnet:BACnetDailySchedule a sh:NodeShape ;
    rdfs:label "BACnetDailySchedule" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:day-schedule ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeValue ;
                        sh:path ( bacnet:day-schedule [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:day-schedule ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:day-schedule ] ] ) .

bacnet:BACnetDeviceObjectPropertyValue a sh:NodeShape ;
    rdfs:label "BACnetDeviceObjectPropertyValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:array-index ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:BACnetError a sh:NodeShape ;
    rdfs:label "BACnetError" ;
    bacnet:comment "Other services to be added as they are defined. All choice values in this production are reserved for prototype by ASHRAE. See Clause 23."@en ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:other ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:acknowledge-alarm ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-cov-notification ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-cov-notification-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-event-notification ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:get-alarm-summary ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:get-enrollment-summary ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:get-event-information ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:life-safety-operation ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:subscribe-cov ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:subscribe-cov-property ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:SubscribeCOVPropertyMultipleError ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:subscribe-cov-property-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-cov-notification-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:atomic-read-file ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:atomic-write-file ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ChangeListError ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:add-list-element ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ChangeListError ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:remove-list-element ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:CreateObjectError ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:create-object ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:delete-object ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-property ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-property-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:read-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:write-property ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:WritePropertyMultipleError ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:write-property-multiple ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:device-communication-control ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ConfirmedPrivateTransferError ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-private-transfer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:confirmed-text-message ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:reinitialize-device ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-open ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:VTCloseError ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-close ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:vt-data ] ] ) .

bacnet:BACnetErrorPDU a sh:NodeShape ;
    rdfs:label "BACnetErrorPDU" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:original-invoke-id ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetError ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error ],
        [ a sh:PropertyShape ;
            sh:hasValue "5"^^xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:pdu-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-choice ] .

bacnet:BACnetEventLogRecord a sh:NodeShape ;
    rdfs:label "BACnetEventLogRecord" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventLogRecord.LogDatum ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-datum ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] .

bacnet:BACnetEventLogRecord.LogDatum a sh:NodeShape ;
    rdfs:label "BACnetEventLogRecord.LogDatum" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-status ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:BACnetLogStatusNamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:log-status [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:log-status ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:log-status ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ConfirmedEventNotificationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:notification ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time-change ] ] ) .

bacnet:BACnetEventNotificationSubscription a sh:NodeShape ;
    rdfs:label "BACnetEventNotificationSubscription" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipient ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:recipient ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:process-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ] .

bacnet:BACnetEventParameter a sh:NodeShape ;
    rdfs:label "BACnetEventParameter" ;
    bacnet:comment "CHOICE [6] has been intentionally omitted. It parallels the complex-event-type CHOICE [6] of the BACnetNotificationParameters production which was introduced to allow the addition of proprietary event algorithms whose event parameters are not necessarily network-visible. CHOICE [19] has been intentionally omitted. It parallels the change-of-reliability event type CHOICE[19]  of the BACnetNotificationParameters production which was introduced for the notification of event state changes to FAULT and from FAULT, which does not have event parameters."@en ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.ChangeOfBitstring ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-bitstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.ChangeOfState ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.ChangeOfValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.CommandFailure ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-failure ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.FloatingLimit ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:floating-limit ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.OutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:out-of-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.ChangeOfLifeSafety ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-life-safety ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.Extended ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:extended ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.BufferReady ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:buffer-ready ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.UnsignedRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.AccessEvent ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:access-event ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.DoubleOutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double-out-of-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.SignedOutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:signed-out-of-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.UnsignedOutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned-out-of-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.ChangeOfCharacterstring ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-characterstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.ChangeOfStatusFlags ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-status-flags ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:none ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.ChangeOfDiscreteValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-discrete-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventParameter.ChangeOfTimer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-timer ] ] ) .

bacnet:BACnetEventParameter.AccessEvent a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.AccessEvent" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event-time-reference ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-access-events ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetAccessEventEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:list-of-access-events [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-access-events ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-access-events ] ] ) .

bacnet:BACnetEventParameter.BufferReady a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.BufferReady" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:previous-notification-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-threshold ] .

bacnet:BACnetEventParameter.ChangeOfBitstring a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfBitstring" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:bitmask ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-bitstring-values ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:bitmask [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitmask ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:bitmask ] ] ),
        ( [ sh:property [ sh:class bacnet:NamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:list-of-bitstring-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-bitstring-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-bitstring-values ] ] ) .

bacnet:BACnetEventParameter.ChangeOfCharacterstring a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfCharacterstring" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-alarm-values ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:list-of-alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-alarm-values ] ] ) .

bacnet:BACnetEventParameter.ChangeOfDiscreteValue a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfDiscreteValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ] .

bacnet:BACnetEventParameter.ChangeOfLifeSafety a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfLifeSafety" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mode-property-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-life-safety-alarm-values ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-alarm-values ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:list-of-life-safety-alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-life-safety-alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-life-safety-alarm-values ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:list-of-alarm-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-alarm-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-alarm-values ] ] ) .

bacnet:BACnetEventParameter.ChangeOfState a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfState" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyStates ;
                        sh:path ( bacnet:list-of-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-values ] ] ) .

bacnet:BACnetEventParameter.ChangeOfStatusFlags a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfStatusFlags" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:selected-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:selected-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:selected-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:selected-flags ] ] ) .

bacnet:BACnetEventParameter.ChangeOfTimer a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfTimer" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:update-time-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:alarm-value ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetTimerStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:alarm-value [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:alarm-value ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:alarm-value ] ] ) .

bacnet:BACnetEventParameter.ChangeOfValue a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventParameter.ChangeOfValue.CovCriteria ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:cov-criteria ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ] .

bacnet:BACnetEventParameter.ChangeOfValue.CovCriteria a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.ChangeOfValue.CovCriteria" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitmask ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitmask [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitmask ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitmask ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:referenced-property-increment ] ] ) .

bacnet:BACnetEventParameter.CommandFailure a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.CommandFailure" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:feedback-property-reference ] .

bacnet:BACnetEventParameter.DoubleOutOfRange a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.DoubleOutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ] .

bacnet:BACnetEventParameter.Extended a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.Extended" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:extended-event-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:parameters ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetEventParameter.Extended.ParametersChoice ;
                        sh:path ( bacnet:parameters [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:parameters ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:parameters ] ] ) .

bacnet:BACnetEventParameter.FloatingLimit a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.FloatingLimit" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-diff-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-diff-limit ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:setpoint-reference ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ] .

bacnet:BACnetEventParameter.OutOfRange a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.OutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ] .

bacnet:BACnetEventParameter.SignedOutOfRange a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.SignedOutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ] .

bacnet:BACnetEventParameter.UnsignedOutOfRange a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.UnsignedOutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ] .

bacnet:BACnetEventParameter.UnsignedRange a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.UnsignedRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ] .

bacnet:BACnetFDTEntry a sh:NodeShape ;
    rdfs:label "BACnetFDTEntry" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "time to live in seconds at time of registration"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:time-to-live ],
        [ a sh:PropertyShape ;
            bacnet:comment "remaining time to live in seconds, incl. grace period"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:remaining-time-to-live ],
        [ a sh:PropertyShape ;
            bacnet:comment "the 6-octet B/IP or 18-octet B/IPv6 address of the registrant"@en ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:bacnetip-address ] .

bacnet:BACnetFaultParameter a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:none ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetFaultParameter.FaultCharacterstring ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-characterstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetFaultParameter.FaultExtended ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-extended ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetFaultParameter.FaultLifeSafety ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-life-safety ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetFaultParameter.FaultState ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetFaultParameter.FaultStatusFlags ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-status-flags ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetFaultParameter.FaultOutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-out-of-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetFaultParameter.FaultListed ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:fault-listed ] ] ) .

bacnet:BACnetFaultParameter.FaultCharacterstring a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultCharacterstring" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-fault-values ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:string ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:list-of-fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-fault-values ] ] ) .

bacnet:BACnetFaultParameter.FaultExtended a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultExtended" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:extended-fault-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:parameters ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetFaultParameter.FaultExtended.ParametersChoice ;
                        sh:path ( bacnet:parameters [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:parameters ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:parameters ] ] ) .

bacnet:BACnetFaultParameter.FaultLifeSafety a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultLifeSafety" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-fault-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mode-property-reference ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:list-of-fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-fault-values ] ] ) .

bacnet:BACnetFaultParameter.FaultListed a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultListed" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:fault-list-reference ] .

bacnet:BACnetFaultParameter.FaultOutOfRange a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultOutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetFaultParameter.FaultOutOfRange.MaxNormalValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-normal-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetFaultParameter.FaultOutOfRange.MinNormalValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:min-normal-value ] .

bacnet:BACnetFaultParameter.FaultOutOfRange.MaxNormalValue a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultOutOfRange.MaxNormalValue" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:double ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] ) .

bacnet:BACnetFaultParameter.FaultOutOfRange.MinNormalValue a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultOutOfRange.MinNormalValue" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:double ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] ) .

bacnet:BACnetFaultParameter.FaultState a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultState" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-fault-values ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyStates ;
                        sh:path ( bacnet:list-of-fault-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-fault-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-fault-values ] ] ) .

bacnet:BACnetFaultParameter.FaultStatusFlags a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultStatusFlags" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags-reference ] .

bacnet:BACnetGroupChannelValue a sh:NodeShape ;
    rdfs:label "BACnetGroupChannelValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:channel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:overriding-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetChannelValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ] .

bacnet:BACnetHostAddress a sh:NodeShape ;
    rdfs:label "BACnetHostAddress" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:none ] ] [ sh:property [ a sh:PropertyShape ;
                        bacnet:comment "4 octets for B/IP, or 16 octets for B/IPv6"@en ;
                        sh:datatype xsd:hexBinary ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:ip-address ] ] [ sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Internet host name (see RFC 1123)"@en ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:name ] ] ) .

bacnet:BACnetKeyIdentifier a sh:NodeShape ;
    rdfs:label "BACnetKeyIdentifier" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:key-id ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:algorithm ] .

bacnet:BACnetLandingCallStatus.Command a sh:NodeShape ;
    rdfs:label "BACnetLandingCallStatus.Command" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLiftCarDirectionEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:direction ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:maxInclusive 255 ;
                        sh:minCount 1 ;
                        sh:minInclusive 0 ;
                        sh:path bacnet:destination ] ] ) .

bacnet:BACnetLandingDoorStatus a sh:NodeShape ;
    rdfs:label "BACnetLandingDoorStatus" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:landing-doors ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetLandingDoorStatus.LandingDoorsSequence ;
                        sh:path ( bacnet:landing-doors [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:landing-doors ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:landing-doors ] ] ) .

bacnet:BACnetLiftCarCallList a sh:NodeShape ;
    rdfs:label "BACnetLiftCarCallList" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:landing-doors ] .

bacnet:BACnetLogData a sh:NodeShape ;
    rdfs:label "BACnetLogData" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-status ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:BACnetLogStatusNamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:log-status [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:log-status ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:log-status ] ] ) ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-data ] ;
                sh:xone ( [ sh:property [ sh:minCount 1 ;
                                    sh:node bacnet:BACnetLogData.LogDataChoice ;
                                    sh:path ( bacnet:log-data [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:log-data ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:log-data ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time-change ] ] ) .

bacnet:BACnetLogMultipleRecord a sh:NodeShape ;
    rdfs:label "BACnetLogMultipleRecord" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLogData ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-data ] .

bacnet:BACnetLogRecord a sh:NodeShape ;
    rdfs:label "BACnetLogRecord" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLogRecord.LogDatum ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-datum ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetLogRecord.LogDatum a sh:NodeShape ;
    rdfs:label "BACnetLogRecord.LogDatum" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-status ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:BACnetLogStatusNamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:log-status [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:log-status ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:log-status ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer-value ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring-value ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring-value [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring-value ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring-value ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:failure ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time-change ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:any-value ] ] ) .

bacnet:BACnetNameValueCollection a sh:NodeShape ;
    rdfs:label "BACnetNameValueCollection" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:members ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNameValue ;
                        sh:path ( bacnet:members [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:members ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:members ] ] ) .

bacnet:BACnetNotificationParameters.AccessEvent a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.AccessEvent" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-credential ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuthenticationFactor ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:authentication-factor ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event-time ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAccessEventEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event-tag ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.BufferReady a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.BufferReady" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:buffer-property ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:previous-notification ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:current-notification ] .

bacnet:BACnetNotificationParameters.ChangeOfBitstring a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfBitstring" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:referenced-bitstring ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ),
        ( [ sh:property [ sh:class bacnet:NamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:referenced-bitstring [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:referenced-bitstring ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:referenced-bitstring ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfCharacterstring a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfCharacterstring" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:alarm-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:changed-value ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfDiscreteValue a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfDiscreteValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotificationParameters.ChangeOfDiscreteValue.NewValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:new-value ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfDiscreteValue.NewValue a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfDiscreteValue.NewValue" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:characterstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:hexBinary ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:octetstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time ;
                        sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:objectidentifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:datetime ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfLifeSafety a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfLifeSafety" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:new-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyOperationEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation-expected ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyModeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:new-mode ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfReliability a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfReliability" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetReliabilityEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyValue ;
                        sh:path ( bacnet:property-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:property-values ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfState a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfState" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyStates ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:new-state ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfStatusFlags a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfStatusFlags" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:referenced-flags ],
        [ a sh:PropertyShape ;
            bacnet:comment "depends on referenced property"@en ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:present-value ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:referenced-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:referenced-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:referenced-flags ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfTimer a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfTimer" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:initial-timeout ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:update-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:expiration-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimerStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:change-of-timer ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimerTransitionEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-state-change ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfValue a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotificationParameters.ChangeOfValue.NewValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:new-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.ChangeOfValue.NewValue a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.ChangeOfValue.NewValue" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:changed-bits ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:changed-bits [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:changed-bits ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:changed-bits ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:changed-value ] ] ) .

bacnet:BACnetNotificationParameters.CommandFailure a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.CommandFailure" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            bacnet:comment "depends on ref property"@en ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:command-value ],
        [ a sh:PropertyShape ;
            bacnet:comment "depends on ref property"@en ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:feedback-value ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.DoubleOutOfRange a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.DoubleOutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.Extended a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.Extended" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:parameters ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:extended-event-type ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetNotificationParameters.Extended.ParametersChoice ;
                        sh:path ( bacnet:parameters [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:parameters ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:parameters ] ] ) .

bacnet:BACnetNotificationParameters.FloatingLimit a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.FloatingLimit" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:setpoint-value ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reference-value ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.OutOfRange a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.OutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.SignedOutOfRange a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.SignedOutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.UnsignedOutOfRange a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.UnsignedOutOfRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetNotificationParameters.UnsignedRange a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.UnsignedRange" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetStatusFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:status-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:status-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:status-flags ] ] ) .

bacnet:BACnetObjectSelector a sh:NodeShape ;
    rdfs:label "BACnetObjectSelector" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:none ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:object ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetObjectTypeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:object-type ] ] ) .

bacnet:BACnetObjectType.access-credential a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "access-credential" ;
    bacnet:value "32"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.access-door a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "access-door" ;
    bacnet:value "30"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.access-point a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "access-point" ;
    bacnet:value "33"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.access-rights a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "access-rights" ;
    bacnet:value "34"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.access-user a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "access-user" ;
    bacnet:value "35"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.access-zone a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "access-zone" ;
    bacnet:value "36"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.accumulator a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "accumulator" ;
    bacnet:value "23"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.alert-enrollment a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "alert-enrollment" ;
    bacnet:value "52"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.analog-input a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "analog-input" ;
    bacnet:value "0"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.analog-output a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "analog-output" ;
    bacnet:value "1"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.analog-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "analog-value" ;
    bacnet:value "2"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.audit-log a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "audit-log" ;
    bacnet:value "61"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.audit-reporter a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "audit-reporter" ;
    bacnet:value "62"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.averaging a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "averaging" ;
    bacnet:value "18"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.binary-input a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "binary-input" ;
    bacnet:value "3"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.binary-lighting-output a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "binary-lighting-output" ;
    bacnet:value "55"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.binary-output a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "binary-output" ;
    bacnet:value "4"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.binary-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "binary-value" ;
    bacnet:value "5"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.bitstring-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "bitstring-value" ;
    bacnet:value "39"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.calendar a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "calendar" ;
    bacnet:value "6"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.channel a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "channel" ;
    bacnet:value "53"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.characterstring-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "characterstring-value" ;
    bacnet:value "40"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.command a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "command" ;
    bacnet:value "7"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.credential-data-input a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "credential-data-input" ;
    bacnet:value "37"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.date-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "date-value" ;
    bacnet:value "42"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.datepattern-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "datepattern-value" ;
    bacnet:value "41"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.datetime-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "datetime-value" ;
    bacnet:value "44"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.datetimepattern-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "datetimepattern-value" ;
    bacnet:value "43"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.device a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "device" ;
    bacnet:value "8"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.elevator-group a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "elevator-group" ;
    bacnet:value "57"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.escalator a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "escalator" ;
    bacnet:value "58"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.event-enrollment a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "event-enrollment" ;
    bacnet:value "9"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.event-log a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "event-log" ;
    bacnet:value "25"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.file a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "file" ;
    bacnet:value "10"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.global-group a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "global-group" ;
    bacnet:value "26"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.group a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "group" ;
    bacnet:value "11"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.integer-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "integer-value" ;
    bacnet:value "45"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.large-analog-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "large-analog-value" ;
    bacnet:value "46"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.life-safety-point a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "life-safety-point" ;
    bacnet:value "21"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.life-safety-zone a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "life-safety-zone" ;
    bacnet:value "22"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.lift a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "lift" ;
    bacnet:value "59"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.lighting-output a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "lighting-output" ;
    bacnet:value "54"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.load-control a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "load-control" ;
    bacnet:value "28"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.loop a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "loop" ;
    bacnet:value "12"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.multi-state-input a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "multi-state-input" ;
    bacnet:value "13"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.multi-state-output a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "multi-state-output" ;
    bacnet:value "14"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.multi-state-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "multi-state-value" ;
    bacnet:value "19"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.network-port a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "network-port" ;
    bacnet:value "56"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.notification-class a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "notification-class" ;
    bacnet:value "15"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.notification-forwarder a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "notification-forwarder" ;
    bacnet:value "51"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.octetstring-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "octetstring-value" ;
    bacnet:value "47"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.positive-integer-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "positive-integer-value" ;
    bacnet:value "48"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.program a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "program" ;
    bacnet:value "16"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.pulse-converter a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "pulse-converter" ;
    bacnet:value "24"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.schedule a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "schedule" ;
    bacnet:value "17"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.staging a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "staging" ;
    bacnet:value "60"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.structured-view a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "structured-view" ;
    bacnet:value "29"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.time-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "time-value" ;
    bacnet:value "50"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.timepattern-value a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "timepattern-value" ;
    bacnet:value "49"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.timer a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "timer" ;
    bacnet:value "31"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.trend-log a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "trend-log" ;
    bacnet:value "20"^^xsd:nonNegativeInteger .

bacnet:BACnetObjectType.trend-log-multiple a bacnet:BACnetObjectTypeEnumerationValue ;
    bacnet:name "trend-log-multiple" ;
    bacnet:value "27"^^xsd:nonNegativeInteger .

bacnet:BACnetPortPermission a sh:NodeShape ;
    rdfs:label "BACnetPortPermission" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:port-id ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enabled ] .

bacnet:BACnetPrescale a sh:NodeShape ;
    rdfs:label "BACnetPrescale" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:multiplier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:modulo-divide ] .

bacnet:BACnetProcessIdSelection a sh:NodeShape ;
    rdfs:label "BACnetProcessIdSelection" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:maxInclusive 4294967295 ;
                        sh:minCount 1 ;
                        sh:minInclusive 0 ;
                        sh:path bacnet:process-identifier ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null-value ] ] ) .

bacnet:BACnetPropertyAccessResult a sh:NodeShape ;
    rdfs:label "BACnetPropertyAccessResult" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyAccessResult.AccessResult ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-result ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype; if omitted with an array then the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:BACnetPropertyAccessResult.AccessResult a sh:NodeShape ;
    rdfs:label "BACnetPropertyAccessResult.AccessResult" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-access-error ] ] ) .

bacnet:BACnetRejectPDU a sh:NodeShape ;
    rdfs:label "BACnetRejectPDU" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:original-invoke-id ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRejectReasonEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reject-reason ],
        [ a sh:PropertyShape ;
            sh:hasValue "6"^^xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:pdu-type ] .

bacnet:BACnetRouterEntry a sh:NodeShape ;
    rdfs:label "BACnetRouterEntry" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:performance-index ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mac-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:network-number ] .

bacnet:BACnetScale a sh:NodeShape ;
    rdfs:label "BACnetScale" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:float-scale ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer-scale ] ] ) .

bacnet:BACnetSegmentACKPDU a sh:NodeShape ;
    rdfs:label "BACnetSegmentACKPDU" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:negative-ack ],
        [ a sh:PropertyShape ;
            sh:hasValue "4"^^xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:pdu-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:sequence-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:server ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:original-invoke-id ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:actual-window-size ] .

bacnet:BACnetSetpointReference a sh:NodeShape ;
    rdfs:label "BACnetSetpointReference" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:setpoint-reference ] .

bacnet:BACnetSimpleACKPDU a sh:NodeShape ;
    rdfs:label "BACnetSimpleACKPDU" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "2"^^xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:pdu-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetConfirmedServiceChoiceEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-ack-choice ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:invoke-id ] .

bacnet:BACnetSpecialEvent a sh:NodeShape ;
    rdfs:label "BACnetSpecialEvent" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-priority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-time-values ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetSpecialEvent.Period ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:period ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeValue ;
                        sh:path ( bacnet:list-of-time-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-time-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-time-values ] ] ) .

bacnet:BACnetSpecialEvent.Period a sh:NodeShape ;
    rdfs:label "BACnetSpecialEvent.Period" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:node bacnet:BACnetCalendarEntry ;
                        sh:path bacnet:calendar-entry ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:calendar-reference ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] ) .

bacnet:BACnetStageLimitValue a sh:NodeShape ;
    rdfs:label "BACnetStageLimitValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:limit ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:values ] ] ) .

bacnet:BACnetTimerStateChangeValue a sh:NodeShape ;
    rdfs:label "BACnetTimerStateChangeValue" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:double ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:hexBinary ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:octetstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:characterstring ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time ;
                        sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:objectidentifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:no-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:constructed-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:datetime ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLightingCommand ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lighting-command ] ] ) .

bacnet:BACnetUnconfirmedRequestPDU a sh:NodeShape ;
    rdfs:label "BACnetUnconfirmedRequestPDU" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "1"^^xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:pdu-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetUnconfirmedServiceChoiceEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-choice ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetUnconfirmedServiceRequest ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-request ] .

bacnet:BACnetUnconfirmedServiceRequest a sh:NodeShape ;
    rdfs:label "BACnetUnconfirmedServiceRequest" ;
    bacnet:comment "Other services to be added as they are defined. All choice values in this production are reserved for prototype by ASHRAE. Proprietary extensions are made by using the UnconfirmedPrivateTransfer service. See Clause 23."@en ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:IAmRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:i-am ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:IHaveRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:i-have ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:UnconfirmedCOVNotificationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unconfirmed-cov-notification ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:UnconfirmedEventNotificationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unconfirmed-event-notification ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:UnconfirmedPrivateTransferRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unconfirmed-private-transfer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:UnconfirmedTextMessageRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unconfirmed-text-message ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:TimeSynchronizationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time-synchronization ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:WhoHasRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:who-has ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:WhoIsRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:who-is ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:UTCTimeSynchronizationRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:utc-time-synchronization ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:WriteGroupRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:write-group ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:WriteGroupRequest ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unconfirmed-cov-notification-multiple ] ] ) .

bacnet:BACnetVMACEntry a sh:NodeShape ;
    rdfs:label "BACnetVMACEntry" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:virtual-mac-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:native-mac-address ] .

bacnet:BACnetVTSession a sh:NodeShape ;
    rdfs:label "BACnetVTSession" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:remote-vt-session-id ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAddress ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:remote-vt-address ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:local-vt-session-id ] .

bacnet:ConfirmedCOVNotificationMultipleRequest a sh:NodeShape ;
    rdfs:label "ConfirmedCOVNotificationMultipleRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:initiating-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:subscriber-process-identifier ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-cov-notifications ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence ;
                        sh:path ( bacnet:list-of-cov-notifications [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-cov-notifications ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-cov-notifications ] ] ) .

bacnet:ConfirmedCOVNotificationRequest a sh:NodeShape ;
    rdfs:label "ConfirmedCOVNotificationRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:initiating-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:subscriber-process-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyValue ;
                        sh:path ( bacnet:list-of-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-values ] ] ) .

bacnet:ConfirmedPrivateTransferACK a sh:NodeShape ;
    rdfs:label "ConfirmedPrivateTransferACK" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:result-block ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ] .

bacnet:ConfirmedPrivateTransferError a sh:NodeShape ;
    rdfs:label "ConfirmedPrivateTransferError" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:Error ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:error-parameters ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ] .

bacnet:ConfirmedPrivateTransferRequest a sh:NodeShape ;
    rdfs:label "ConfirmedPrivateTransferRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:service-parameters ] .

bacnet:ConfirmedTextMessageRequest a sh:NodeShape ;
    rdfs:label "ConfirmedTextMessageRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:text-message-parseSource-device ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:message ],
        [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:message-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:ConfirmedTextMessageRequest.MessageClass ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:message-class ] .

bacnet:ConfirmedTextMessageRequest.MessageClass a sh:NodeShape ;
    rdfs:label "ConfirmedTextMessageRequest.MessageClass" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:numeric ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:character ] ] ) .

bacnet:CreateObjectError a sh:NodeShape ;
    rdfs:label "CreateObjectError" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:first-failed-element-number ],
        [ a sh:PropertyShape ;
            sh:class bacnet:Error ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-type ] .

bacnet:CreateObjectRequest a sh:NodeShape ;
    rdfs:label "CreateObjectRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:CreateObjectRequest.ObjectSpecifier ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-specifier ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:list-of-initial-values ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyValue ;
                        sh:path ( bacnet:list-of-initial-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-initial-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-initial-values ] ] ) .

bacnet:CreateObjectRequest.ObjectSpecifier a sh:NodeShape ;
    rdfs:label "CreateObjectRequest.ObjectSpecifier" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetObjectTypeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:object-type ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:object-identifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] ) .

bacnet:DeleteObjectRequest a sh:NodeShape ;
    rdfs:label "DeleteObjectRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:DeviceCommunicationControlRequest a sh:NodeShape ;
    rdfs:label "DeviceCommunicationControlRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:password ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:time-duration ],
        [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable-disable ] .

bacnet:GetEnrollmentSummaryRequest a sh:NodeShape ;
    rdfs:label "GetEnrollmentSummaryRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:acknowledgment-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipientProcess ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:enrollment-filter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-type-filter ],
        [ a sh:PropertyShape ;
            sh:class bacnet:GetEnrollmentSummaryRequest.PriorityFilter ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-filter ] .

bacnet:GetEnrollmentSummaryRequest.PriorityFilter a sh:NodeShape ;
    rdfs:label "GetEnrollmentSummaryRequest.PriorityFilter" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:min-priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:max-priority ] .

bacnet:GetEventInformationACK a sh:NodeShape ;
    rdfs:label "GetEventInformationACK" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:more-events ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-event-summaries ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:GetEventInformationACK.ListOfEventSummariesSequence ;
                        sh:path ( bacnet:list-of-event-summaries [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-event-summaries ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-event-summaries ] ] ) .

bacnet:GetEventInformationRequest a sh:NodeShape ;
    rdfs:label "GetEventInformationRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-received-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:IAmRequest a sh:NodeShape ;
    rdfs:label "IAmRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetSegmentationEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:segmentation-supported ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:i-am-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-apdu-length-accepted ] .

bacnet:IHaveRequest a sh:NodeShape ;
    rdfs:label "IHaveRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-name ] .

bacnet:LifeSafetyOperationRequest a sh:NodeShape ;
    rdfs:label "LifeSafetyOperationRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:requesting-process-identifier ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLifeSafetyOperationEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:request ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:requesting-source ] .

bacnet:ReadAccessResult.ListOfResultsSequence.ReadResult a sh:NodeShape ;
    rdfs:label "ReadAccessResult.ListOfResultsSequence.ReadResult" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-access-error ] ] ) .

bacnet:ReadPropertyACK a sh:NodeShape ;
    rdfs:label "ReadPropertyACK" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-value ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ] .

bacnet:ReadPropertyMultipleACK a sh:NodeShape ;
    rdfs:label "ReadPropertyMultipleACK" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-read-access-results ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:ReadAccessResult ;
                        sh:path ( bacnet:list-of-read-access-results [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-read-access-results ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-read-access-results ] ] ) .

bacnet:ReadPropertyMultipleRequest a sh:NodeShape ;
    rdfs:label "ReadPropertyMultipleRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-read-access-specs ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:ReadAccessSpecification ;
                        sh:path ( bacnet:list-of-read-access-specs [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-read-access-specs ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-read-access-specs ] ] ) .

bacnet:ReadPropertyRequest a sh:NodeShape ;
    rdfs:label "ReadPropertyRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype; if omitted with an array the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ] .

bacnet:ReadRangeACK a sh:NodeShape ;
    rdfs:label "ReadRangeACK" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:result-flags ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only if 'Item Count' > 0 and the request was either of type 'By Sequence Number' or 'By Time'"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 0 ;
            sh:minInclusive 0 ;
            sh:path bacnet:first-sequence-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:item-count ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:item-data ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:path ( bacnet:item-data [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:item-data ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:item-data ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetResultFlagsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:result-flags [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:result-flags ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:result-flags ] ] ) .

bacnet:ReadRangeRequest a sh:NodeShape ;
    rdfs:label "ReadRangeRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:ReadRangeRequest.Range ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:range ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ] .

bacnet:ReadRangeRequest.Range a sh:NodeShape ;
    rdfs:label "ReadRangeRequest.Range" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadRangeRequest.Range.ByPosition ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:by-position ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadRangeRequest.Range.BySequenceNumber ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:by-sequence-number ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:ReadRangeRequest.Range.ByTime ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:by-time ] ] ) .

bacnet:ReadRangeRequest.Range.ByPosition a sh:NodeShape ;
    rdfs:label "ReadRangeRequest.Range.ByPosition" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reference-index ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:maxInclusive 32767 ;
            sh:minCount 1 ;
            sh:minInclusive -32768 ;
            sh:path bacnet:count ] .

bacnet:ReadRangeRequest.Range.BySequenceNumber a sh:NodeShape ;
    rdfs:label "ReadRangeRequest.Range.BySequenceNumber" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reference-sequence-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:maxInclusive 32767 ;
            sh:minCount 1 ;
            sh:minInclusive -32768 ;
            sh:path bacnet:count ] .

bacnet:ReadRangeRequest.Range.ByTime a sh:NodeShape ;
    rdfs:label "ReadRangeRequest.Range.ByTime" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reference-time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:maxInclusive 32767 ;
            sh:minCount 1 ;
            sh:minInclusive -32768 ;
            sh:path bacnet:count ] .

bacnet:ReinitializeDeviceRequest a sh:NodeShape ;
    rdfs:label "ReinitializeDeviceRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reinitialized-state-of-device ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:password ] .

bacnet:RemoveListElementRequest a sh:NodeShape ;
    rdfs:label "RemoveListElementRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatypes"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-elements ] .

bacnet:SubscribeCOVPropertyMultipleError a sh:NodeShape ;
    rdfs:label "SubscribeCOVPropertyMultipleError" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:error-type ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:SubscribeCOVPropertyMultipleError.FirstFailedSubscription ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:first-failed-subscription ] ] ) .

bacnet:SubscribeCOVPropertyMultipleError.FirstFailedSubscription a sh:NodeShape ;
    rdfs:label "SubscribeCOVPropertyMultipleError.FirstFailedSubscription" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-property-reference ],
        [ a sh:PropertyShape ;
            sh:class bacnet:Error ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:SubscribeCOVPropertyMultipleRequest a sh:NodeShape ;
    rdfs:label "SubscribeCOVPropertyMultipleRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-cov-subscription-specifications ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:subscriber-process-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lifetime ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-notification-delay ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence ;
                        sh:path ( bacnet:list-of-cov-subscription-specifications [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-cov-subscription-specifications ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-cov-subscription-specifications ] ] ) .

bacnet:SubscribeCOVPropertyRequest a sh:NodeShape ;
    rdfs:label "SubscribeCOVPropertyRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:subscriber-process-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-property-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lifetime ] .

bacnet:SubscribeCOVRequest a sh:NodeShape ;
    rdfs:label "SubscribeCOVRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:subscriber-process-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lifetime ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:issue-confirmed-notifications ] .

bacnet:TimeSynchronizationRequest a sh:NodeShape ;
    rdfs:label "TimeSynchronizationRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] .

bacnet:UTCTimeSynchronizationRequest a sh:NodeShape ;
    rdfs:label "UTCTimeSynchronizationRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] .

bacnet:UnconfirmedCOVNotificationRequest a sh:NodeShape ;
    rdfs:label "UnconfirmedCOVNotificationRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:initiating-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:subscriber-process-identifier ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyValue ;
                        sh:path ( bacnet:list-of-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-values ] ] ) .

bacnet:UnconfirmedEventNotificationRequest a sh:NodeShape ;
    rdfs:label "UnconfirmedEventNotificationRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:initiating-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:to-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:from-state ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:process-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:message-text ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotificationParameters ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ack-required ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notify-type ] .

bacnet:UnconfirmedPrivateTransferRequest a sh:NodeShape ;
    rdfs:label "UnconfirmedPrivateTransferRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:service-number ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:service-parameters ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vendor-id ] .

bacnet:UnconfirmedTextMessageRequest a sh:NodeShape ;
    rdfs:label "UnconfirmedTextMessageRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:message-priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:UnconfirmedTextMessageRequest.MessageClass ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:message-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:text-message-parseSource-device ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:message ] .

bacnet:UnconfirmedTextMessageRequest.MessageClass a sh:NodeShape ;
    rdfs:label "UnconfirmedTextMessageRequest.MessageClass" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:numeric ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:character ] ] ) .

bacnet:VTCloseError a sh:NodeShape ;
    rdfs:label "VTCloseError" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:list-of-vt-session-identifiers ],
        [ a sh:PropertyShape ;
            sh:class bacnet:Error ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-type ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:maxInclusive 255 ;
                        sh:minCount 1 ;
                        sh:minInclusive 0 ;
                        sh:path ( bacnet:list-of-vt-session-identifiers [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-vt-session-identifiers ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-vt-session-identifiers ] ] ) .

bacnet:VTCloseRequest a sh:NodeShape ;
    rdfs:label "VTCloseRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-remote-vt-session-identifiers ] ;
    sh:xone ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:maxInclusive 255 ;
                        sh:minCount 1 ;
                        sh:minInclusive 0 ;
                        sh:path ( bacnet:list-of-remote-vt-session-identifiers [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-remote-vt-session-identifiers ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-remote-vt-session-identifiers ] ] ) .

bacnet:VTDataACK a sh:NodeShape ;
    rdfs:label "VTDataACK" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "present only if all-new-data-accepted = false"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:accepted-octet-count ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:all-new-data-accepted ] .

bacnet:VTDataRequest a sh:NodeShape ;
    rdfs:label "VTDataRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vt-new-data ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:vt-session-identifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vt-data-flag ] .

bacnet:VTOpenACK a sh:NodeShape ;
    rdfs:label "VTOpenACK" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:remote-vt-session-identifier ] .

bacnet:VTOpenRequest a sh:NodeShape ;
    rdfs:label "VTOpenRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetVTClassEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vt-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:local-vt-session-identifier ] .

bacnet:WhoHasRequest a sh:NodeShape ;
    rdfs:label "WhoHasRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:WhoHasRequest.Object ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object ],
        [ a sh:PropertyShape ;
            sh:class bacnet:WhoHasRequest.Limits ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limits ] .

bacnet:WhoHasRequest.Limits a sh:NodeShape ;
    rdfs:label "WhoHasRequest.Limits" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-instance-range-low-limit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-instance-range-high-limit ] .

bacnet:WhoHasRequest.Object a sh:NodeShape ;
    rdfs:label "WhoHasRequest.Object" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:object-identifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:object-name ] ] ) .

bacnet:WhoIsRequest a sh:NodeShape ;
    rdfs:label "WhoIsRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "must be used as a pair, see 16.10"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-instance-range-high-limit ],
        [ a sh:PropertyShape ;
            bacnet:comment "must be used as a pair, see 16.10"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-instance-range-low-limit ] .

bacnet:WriteAccessSpecification a sh:NodeShape ;
    rdfs:label "WriteAccessSpecification" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-properties ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyValue ;
                        sh:path ( bacnet:list-of-properties [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-properties ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-properties ] ] ) .

bacnet:WritePropertyMultipleError a sh:NodeShape ;
    rdfs:label "WritePropertyMultipleError" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:Error ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:first-failed-write-attempt ] .

bacnet:WritePropertyMultipleRequest a sh:NodeShape ;
    rdfs:label "WritePropertyMultipleRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-write-access-specifications ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:WriteAccessSpecification ;
                        sh:path ( bacnet:list-of-write-access-specifications [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-write-access-specifications ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-write-access-specifications ] ] ) .

bacnet:WritePropertyRequest a sh:NodeShape ;
    rdfs:label "WritePropertyRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype; if omitted with an array the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-value ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only when property is commandable"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ] .

bacnet:BACnetAccessRule a sh:NodeShape ;
    rdfs:label "BACnetAccessRule" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "to be present if locationSpecifier has the value 'specified'"@en ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:location ],
        [ a sh:PropertyShape ;
            bacnet:comment "to be present if timeRangeSpecifier has the value 'specified'"@en ;
            sh:class bacnet:BACnetDeviceObjectPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-range ],
        [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:location-specifier ],
        [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-range-specifier ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ] .

bacnet:BACnetAssignedLandingCalls.LandingCallsSequence a sh:NodeShape ;
    rdfs:label "BACnetAssignedLandingCalls.LandingCallsSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:floor-number ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLiftCarDirectionEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:direction ] .

bacnet:BACnetAuditLogRecord a sh:NodeShape ;
    rdfs:label "BACnetAuditLogRecord" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuditLogRecord.LogDatum ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-datum ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:assigned-access-rights ] .

bacnet:BACnetAuthenticationPolicy.PolicySequence a sh:NodeShape ;
    rdfs:label "BACnetAuthenticationPolicy.PolicySequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDeviceObjectReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:credential-data-input ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:index ] .

bacnet:BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence a sh:NodeShape ;
    rdfs:label "BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-cov-references ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferencesSequence ;
                        sh:path ( bacnet:list-of-cov-references [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-cov-references ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-cov-references ] ] ) .

bacnet:BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferencesSequence a sh:NodeShape ;
    rdfs:label "BACnetCOVMultipleSubscription.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferencesSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamped ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-property ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ] .

bacnet:BACnetCalendarEntry a sh:NodeShape ;
    rdfs:label "BACnetCalendarEntry" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDateRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:weekNDay ;
                        sh:pattern "^([1-9][0-9]*|[*]),([1-9][0-9]*|[*]),([1-9][0-9]*|[*])$" ] ] ) .

bacnet:BACnetChannelValue a sh:NodeShape ;
    rdfs:label "BACnetChannelValue" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:double ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time ;
                        sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:characterstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:hexBinary ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:octetstring ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:objectidentifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLightingCommand ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lighting-command ] ] ) .

bacnet:BACnetClientCOV a sh:NodeShape ;
    rdfs:label "BACnetClientCOV" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real-increment ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:default-increment ] ] ) .

bacnet:BACnetDateRange a sh:NodeShape ;
    rdfs:label "BACnetDateRange" ;
    bacnet:comment "see Clause 20.2.12 for restrictions"@en ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:start-date ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:end-date ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] .

bacnet:BACnetDateTime a sh:NodeShape ;
    rdfs:label "BACnetDateTime" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "see Clause 20.2.12 for restrictions"@en ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:date ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ],
        [ a sh:PropertyShape ;
            bacnet:comment "see Clause 20.2.12 for restrictions"@en ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] .

bacnet:BACnetDestination a sh:NodeShape ;
    rdfs:label "BACnetDestination" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:from-time ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:to-time ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:transitions ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:process-identifier ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:valid-days ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipient ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:recipient ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:transitions ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetDaysOfWeekNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:valid-days [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:valid-days ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:valid-days ] ] ) .

bacnet:BACnetEventParameter.Extended.ParametersChoice a sh:NodeShape ;
    rdfs:label "BACnetEventParameter.Extended.ParametersChoice" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:double ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:hexBinary ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:octetstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:characterstring ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time ;
                        sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:objectidentifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDeviceObjectPropertyReference ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:reference ] ] ) .

bacnet:BACnetFaultParameter.FaultExtended.ParametersChoice a sh:NodeShape ;
    rdfs:label "BACnetFaultParameter.FaultExtended.ParametersChoice" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:double ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:hexBinary ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:octetstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:characterstring ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time ;
                        sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:objectidentifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDeviceObjectPropertyReference ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:reference ] ] ) .

bacnet:BACnetLandingCallStatus a sh:NodeShape ;
    rdfs:label "BACnetLandingCallStatus" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:floor-text ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLandingCallStatus.Command ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:command ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:floor-number ] .

bacnet:BACnetLandingDoorStatus.LandingDoorsSequence a sh:NodeShape ;
    rdfs:label "BACnetLandingDoorStatus.LandingDoorsSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetDoorStatusEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:door-status ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:floor-number ] .

bacnet:BACnetLogData.LogDataChoice a sh:NodeShape ;
    rdfs:label "BACnetLogData.LogDataChoice" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real-value ] ] [ sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Optionally limited to 32 bits"@en ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated-value ] ] [ sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Optionally limited to 32 bits"@en ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned-value ] ] [ sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Optionally limited to 32 bits"@en ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer-value ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Optionally limited to 32 bits"@en ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring-value ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring-value [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring-value ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring-value ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:failure ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:any-value ] ] ) .

bacnet:BACnetNotificationParameters a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters" ;
    bacnet:comment "CHOICE [20] has been intentionally omitted. It parallels the 'none' event type CHOICE[20] of the BACnetEventParameter production which was introduced for the case an object does not apply an event algorithm"@en ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfBitstring ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-bitstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfState ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.CommandFailure ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:command-failure ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.FloatingLimit ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:floating-limit ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.OutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:out-of-range ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:complex-event-type ] ;
                sh:xone ( [ sh:property [ sh:minCount 1 ;
                                    sh:node bacnet:BACnetPropertyValue ;
                                    sh:path ( bacnet:complex-event-type [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:complex-event-type ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:complex-event-type ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfLifeSafety ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-life-safety ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.Extended ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:extended ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.BufferReady ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:buffer-ready ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.UnsignedRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.AccessEvent ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:access-event ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.DoubleOutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double-out-of-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.SignedOutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:signed-out-of-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.UnsignedOutOfRange ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned-out-of-range ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfCharacterstring ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-characterstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfStatusFlags ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-status-flags ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfReliability ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-reliability ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfDiscreteValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-discrete-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotificationParameters.ChangeOfTimer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-of-timer ] ] ) .

bacnet:BACnetNotificationParameters.Extended.ParametersChoice a sh:NodeShape ;
    rdfs:label "BACnetNotificationParameters.Extended.ParametersChoice" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:double ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:hexBinary ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:octetstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:characterstring ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time ;
                        sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:objectidentifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDeviceObjectPropertyValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:property-value ] ] ) .

bacnet:BACnetOptionalBinaryPV a sh:NodeShape ;
    rdfs:label "BACnetOptionalBinaryPV" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetBinaryPVEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:binary-pv ] ] ) .

bacnet:BACnetOptionalCharacterString a sh:NodeShape ;
    rdfs:label "BACnetOptionalCharacterString" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:characterstring ] ] ) .

bacnet:BACnetTimeValue a sh:NodeShape ;
    rdfs:label "BACnetTimeValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            bacnet:comment "any primitive datatype; complex types cannot be decoded"@en ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ] .

bacnet:ChangeListError a sh:NodeShape ;
    rdfs:label "ChangeListError" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:first-failed-element-number ],
        [ a sh:PropertyShape ;
            sh:class bacnet:Error ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-type ] .

bacnet:ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence a sh:NodeShape ;
    rdfs:label "ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-values ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValuesSequence ;
                        sh:path ( bacnet:list-of-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-values ] ] ) .

bacnet:ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValuesSequence a sh:NodeShape ;
    rdfs:label "ConfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValuesSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-value ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-change ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] .

bacnet:ConfirmedEventNotificationRequest a sh:NodeShape ;
    rdfs:label "ConfirmedEventNotificationRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotificationParameters ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:message-text ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetTimeStamp ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:from-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:process-identifier ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:to-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:priority ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ack-required ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:initiating-device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:GetAlarmSummaryACKSequence a sh:NodeShape ;
    rdfs:label "GetAlarmSummaryACKSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:alarm-state ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:acknowledged-transitions ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acknowledged-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acknowledged-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acknowledged-transitions ] ] ) .

bacnet:GetEnrollmentSummaryACKSequence a sh:NodeShape ;
    rdfs:label "GetEnrollmentSummaryACKSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-type ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 255 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ] .

bacnet:GetEventInformationACK.ListOfEventSummariesSequence a sh:NodeShape ;
    rdfs:label "GetEventInformationACK.ListOfEventSummariesSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetEventStateEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-enable ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:acknowledged-transitions ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-priorities ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notify-type ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-timestamps ] ;
    sh:xone ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-enable [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-enable ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-enable ] ] ),
        ( [ sh:property [ sh:class bacnet:BACnetEventTransitionBitsNamedBits ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:acknowledged-transitions [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:acknowledged-transitions ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:acknowledged-transitions ] ] ),
        ( [ sh:property [ sh:datatype xsd:nonNegativeInteger ;
                        sh:minCount 1 ;
                        sh:path ( bacnet:event-priorities [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-priorities ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-priorities ] ] ),
        ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetTimeStamp ;
                        sh:path ( bacnet:event-timestamps [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-timestamps ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:event-timestamps ] ] ) .

bacnet:ReadAccessResult a sh:NodeShape ;
    rdfs:label "ReadAccessResult" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:list-of-results ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:ReadAccessResult.ListOfResultsSequence ;
                        sh:path ( bacnet:list-of-results [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-results ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-results ] ] ) .

bacnet:ReadAccessResult.ListOfResultsSequence a sh:NodeShape ;
    rdfs:label "ReadAccessResult.ListOfResultsSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype; if omitted with an array the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            sh:class bacnet:ReadAccessResult.ListOfResultsSequence.ReadResult ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:read-result ] .

bacnet:ReadAccessSpecification a sh:NodeShape ;
    rdfs:label "ReadAccessSpecification" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-property-references ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetPropertyReference ;
                        sh:path ( bacnet:list-of-property-references [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-property-references ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-property-references ] ] ) .

bacnet:SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence a sh:NodeShape ;
    rdfs:label "SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-cov-references ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferencesSequence ;
                        sh:path ( bacnet:list-of-cov-references [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-cov-references ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-cov-references ] ] ) .

bacnet:SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferencesSequence a sh:NodeShape ;
    rdfs:label "SubscribeCOVPropertyMultipleRequest.ListOfCovSubscriptionSpecificationsSequence.ListOfCovReferencesSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyReference ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-property ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamped ] .

bacnet:UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence a sh:NodeShape ;
    rdfs:label "UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:list-of-values ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValuesSequence ;
                        sh:path ( bacnet:list-of-values [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:list-of-values ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:list-of-values ] ] ) .

bacnet:UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValuesSequence a sh:NodeShape ;
    rdfs:label "UnconfirmedCOVNotificationMultipleRequest.ListOfCovNotificationsSequence.ListOfValuesSequence" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-change ;
            sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ] .

bacnet:WriteGroupRequest a sh:NodeShape ;
    rdfs:label "WriteGroupRequest" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:write-priority ],
        [ a sh:PropertyShape ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:change-list ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:group-number ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:inhibit-delay ] ;
    sh:xone ( [ sh:property [ sh:minCount 1 ;
                        sh:node bacnet:BACnetGroupChannelValue ;
                        sh:path ( bacnet:change-list [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                        sh:minCount 1 ;
                        sh:path bacnet:change-list ] ] [ sh:property [ sh:maxCount 0 ;
                        sh:path bacnet:change-list ] ] ) .

bacnet:BACnetAddressBinding a sh:NodeShape ;
    rdfs:label "BACnetAddressBinding" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAddress ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-address ] .

bacnet:BACnetHostNPort a sh:NodeShape ;
    rdfs:label "BACnetHostNPort" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetHostAddress ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:host ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:port ] .

bacnet:BACnetLightingCommand a sh:NodeShape ;
    rdfs:label "BACnetLightingCommand" ;
    bacnet:comment "Note that the combination of level, ramp-rate, step-increment, and fade-time fields is dependent on the specific lighting operation. See Table 12-67"@en ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetLightingOperationEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:step-increment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fade-time ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ramp-rate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-level ] .

bacnet:BACnetOptionalREAL a sh:NodeShape ;
    rdfs:label "BACnetOptionalREAL" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] ) .

bacnet:BACnetPropertyStates a sh:NodeShape ;
    rdfs:label "BACnetPropertyStates" ;
    bacnet:comment "This production represents the possible datatypes for properties that have discrete or enumerated values. The choice must be consistent with the datatype of the property referenced in the Event Enrollment Object. Tag values 0-63 are reserved for prototype by ASHRAE. Tag values of 64-254 may be used by others to accommodate vendor specific properties that have discrete or enumerated values, subject to the constraints described in Clause 23."@en ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetBinaryPVEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:binary-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventTypeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:event-type ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetPolarityEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:polarity ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetProgramRequestEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:program-change ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetProgramStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:program-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetProgramErrorEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:reason-for-halt ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetReliabilityEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:reliability ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEventStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDeviceStatusEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:system-status ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEngineeringUnitsEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:units ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLifeSafetyModeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:life-safety-mode ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLifeSafetyStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:life-safety-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetRestartReasonEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:restart-reason ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDoorAlarmStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:door-alarm-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetActionEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:action ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDoorSecuredStatusEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:door-secured-status ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDoorStatusEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:door-status ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDoorValueEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:door-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetFileAccessMethodEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:file-access-method ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLockStatusEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lock-status ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLifeSafetyOperationEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:life-safety-operation ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetMaintenanceEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:maintenance ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNodeTypeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:node-type ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNotifyTypeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:notify-type ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetSecurityLevelEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:security-level ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetShedStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:shed-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetSilencedStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:silenced-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAccessEventEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:access-event ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAccessZoneOccupancyStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:zone-occupancy-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAccessCredentialDisableReasonEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:access-credential-disable-reason ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAccessCredentialDisableEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:access-credential-disable ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAuthenticationStatusEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:authentication-status ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetBackupStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:backup-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetWriteStatusEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:write-status ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLightingInProgressEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lighting-in-progress ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLightingOperationEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lighting-operation ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLightingTransitionEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lighting-transition ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetBinaryLightingPVEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:binary-lighting-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetTimerStateEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:timer-state ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetTimerTransitionEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:timer-transition ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetIPModeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bacnet-ip-mode ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNetworkPortCommandEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:network-port-command ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNetworkTypeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:network-type ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetNetworkNumberQualityEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:network-number-quality ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEscalatorOperationDirectionEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:escalator-operation-direction ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEscalatorFaultEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:escalator-fault ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetEscalatorModeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:escalator-mode ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLiftCarDirectionEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lift-car-direction ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLiftCarDoorCommandEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lift-car-door-command ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLiftCarDriveStatusEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lift-car-drive-status ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLiftCarModeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lift-car-mode ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLiftGroupModeEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lift-group-mode ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetLiftFaultEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:lift-fault ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetProtocolLevelEnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:protocol-level ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:maxInclusive 4294967295 ;
                        sh:minCount 1 ;
                        sh:minInclusive 0 ;
                        sh:path bacnet:extended-value ] ] ) .

bacnet:BACnetRecipientProcess a sh:NodeShape ;
    rdfs:label "BACnetRecipientProcess" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetRecipient ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:recipient ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 4294967295 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:process-identifier ] .

bacnet:BACnetShedLevel a sh:NodeShape ;
    rdfs:label "BACnetShedLevel" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:percent ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:level ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:amount ] ] ) .

bacnet:BACnetAuthenticationFactor a sh:NodeShape ;
    rdfs:label "BACnetAuthenticationFactor" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:format-class ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetAuthenticationFactorTypeEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:format-type ],
        [ a sh:PropertyShape ;
            bacnet:comment "for encoding of values into this octet string see ANNEX P"@en ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ] .

bacnet:BACnetAddress a sh:NodeShape ;
    rdfs:label "BACnetAddress" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "A string of length 0 indicates a broadcast"@en ;
            sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mac-address ],
        [ a sh:PropertyShape ;
            bacnet:comment "A value of 0 indicates the local network"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive 65535 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:path bacnet:network-number ] .

bacnet:BACnetPropertyReference a sh:NodeShape ;
    rdfs:label "BACnetPropertyReference" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype; if omitted with an array the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ] .

bacnet:BACnetPropertyValue a sh:NodeShape ;
    rdfs:label "BACnetPropertyValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "any datatype appropriate for the specified property"@en ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-value ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatypes; if omitted with an array the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only when property is commandable"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ] .

bacnet:BACnetRecipient a sh:NodeShape ;
    rdfs:label "BACnetRecipient" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:device ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAddress ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:address ] ] ) .

bacnet:BACnetDeviceObjectPropertyReference a sh:NodeShape ;
    rdfs:label "BACnetDeviceObjectPropertyReference" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype if omitted with an array then the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ] .

bacnet:BACnetOptionalPriorityFilter a sh:NodeShape ;
    rdfs:label "BACnetOptionalPriorityFilter" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:filter ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:BACnetPriorityFilterNamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:filter [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:filter ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:filter ] ] ) ] ) .

bacnet:BACnetPriorityValue a sh:NodeShape ;
    rdfs:label "BACnetPriorityValue" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:double ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:double ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time ;
                        sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:characterstring ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:hexBinary ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:octetstring ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:date ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2}|[*])( ([0-9]|[*]))?$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:objectidentifier ;
                        sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:constructed-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:datetime ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] ) .

bacnet:BACnetOptionalUnsigned a sh:NodeShape ;
    rdfs:label "BACnetOptionalUnsigned" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned ] ] ) .

bacnet:BACnetDeviceObjectReference a sh:NodeShape ;
    rdfs:label "BACnetDeviceObjectReference" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:Error a sh:NodeShape ;
    rdfs:label "Error" ;
    bacnet:comment "NOTE: The valid combinations of error-class and error-code are defined in Clause 18."@en ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            bacnet:comment "Enumerated values 0-255 are reserved for prototype by ASHRAE. Enumerated values 256-65535 may be used by others subject to the procedures and constraints described in Clause 23."@en ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-code ],
        [ a sh:PropertyShape ;
            bacnet:comment "%Enumerated values 0-63 are reserved for prototype by ASHRAE. Enumerated values 64-65535 may be used by others subject to the procedures and constraints described in Clause 23"@en ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-class ] .

bacnet:BACnetObjectPropertyReference a sh:NodeShape ;
    rdfs:label "BACnetObjectPropertyReference" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:BACnetPropertyIdentifierEnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ a sh:PropertyShape ;
            bacnet:comment "used only with array datatype if omitted with an array the entire array is referenced"@en ;
            sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+,[1-9][0-9]*$" ] .

bacnet:BACnetValueSource a sh:NodeShape ;
    rdfs:label "BACnetValueSource" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:none ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetDeviceObjectReference ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:object ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:BACnetAddress ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:address ] ] ) .

bacnet:BACnetNameValue a sh:NodeShape ;
    rdfs:label "BACnetNameValue" ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:name ],
        [ a sh:PropertyShape ;
            bacnet:comment "value is limited to primitve datatypes and BACnetDateTime"@en ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value ] .

bacnet:BACnetTimeStamp a sh:NodeShape ;
    rdfs:label "BACnetTimeStamp" ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time ;
                        sh:pattern "^([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:sequence-number ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:string ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:datetime ;
                        sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] ] ) .

