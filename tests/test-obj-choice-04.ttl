@prefix bacnet: <http://data.ashrae.org/bacnet/2020#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

bacnet:LogStatus a rdfs:Class,
        sh:NodeShape ;
    bacnet:memberClass bacnet:LogStatusNamedBits ;
    rdfs:subClassOf bacnet:Bitstring .

bacnet:LogStatusNamedBits a rdfs:Class ;
    rdfs:subClassOf bacnet:NamedBits .

bacnet:LogData.LogData a bacnet:SequenceOf ;
    bacnet:memberType bacnet:LogData.LogDataChoice .

bacnet:LogMultipleRecord a sh:NodeShape ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:LogData ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-data ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ;
            sh:pattern "^([0-9]{4})-([0-9]{2})-([0-9]{2})( ([0-9]))? ([0-9]{2}):([0-9]{2}):([0-9]{2})[.]([0-9]{2})$" ] .

bacnet:LogStatus.buffer-purged a bacnet:LogStatusNamedBits ;
    bacnet:bit "1"^^xsd:nonNegativeInteger ;
    bacnet:name "buffer-purged" .

bacnet:LogStatus.log-disabled a bacnet:LogStatusNamedBits ;
    bacnet:bit "0"^^xsd:nonNegativeInteger ;
    bacnet:name "log-disabled" .

bacnet:LogStatus.log-interrupted a bacnet:LogStatusNamedBits ;
    bacnet:bit "2"^^xsd:nonNegativeInteger ;
    bacnet:name "log-interrupted" .

bacnet:Error a sh:NodeShape ;
    rdfs:subClassOf bacnet:Sequence ;
    sh:property [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-code ],
        [ a sh:PropertyShape ;
            sh:class bacnet:EnumerationValue ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-class ] .

bacnet:LogData a sh:NodeShape ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-status ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:LogStatusNamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:log-status [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:log-status ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:log-status ] ] ) ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:log-data ] ;
                sh:xone ( [ sh:property [ sh:minCount 1 ;
                                    sh:node bacnet:LogData.LogDataChoice ;
                                    sh:path ( bacnet:log-data [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:log-data ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:log-data ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:time-change ] ] ) .

bacnet:LogData.LogDataChoice a sh:NodeShape ;
    rdfs:subClassOf bacnet:Choice ;
    sh:xone ( [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:boolean ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:boolean-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:datatype xsd:float ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:real-value ] ] [ sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Optionally limited to 32 bits"@en ;
                        sh:class bacnet:EnumerationValue ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:enumerated-value ] ] [ sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Optionally limited to 32 bits"@en ;
                        sh:datatype xsd:nonNegativeInteger ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:unsigned-value ] ] [ sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Optionally limited to 32 bits"@en ;
                        sh:datatype xsd:integer ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:integer-value ] ] [ a sh:NodeShape ;
                sh:property [ a sh:PropertyShape ;
                        bacnet:comment "Optionally limited to 32 bits"@en ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:bitstring-value ] ;
                sh:xone ( [ sh:property [ sh:class bacnet:NamedBits ;
                                    sh:minCount 1 ;
                                    sh:path ( bacnet:bitstring-value [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] ] [ sh:property [ sh:hasValue () ;
                                    sh:minCount 1 ;
                                    sh:path bacnet:bitstring-value ] ] [ sh:property [ sh:maxCount 0 ;
                                    sh:path bacnet:bitstring-value ] ] ) ] [ sh:property [ a sh:PropertyShape ;
                        sh:hasValue bacnet:Null ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:null-value ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:class bacnet:Error ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:failure ] ] [ sh:property [ a sh:PropertyShape ;
                        sh:maxCount 1 ;
                        sh:minCount 1 ;
                        sh:path bacnet:any-value ] ] ) .

